<Activity mc:Ignorable="sads sap sap2010" x:Class="TfsBuild.Process" this:Process.BuildSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.BuildSettings()]" this:Process.TestSpecs="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec(&quot;**\*test*.dll&quot;))]" this:Process.BuildNumberFormat="[&quot;$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)&quot;]" this:Process.SolutionSpecificBuildOutputs="[False]" this:Process.CleanWorkspace="[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" this:Process.RunCodeAnalysis="[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]" this:Process.SourceAndSymbolServerSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]" this:Process.AgentSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]" this:Process.AssociateChangesetsAndWorkItems="[True]" this:Process.CreateWorkItem="[True]" this:Process.MSBuildPlatform="[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]" this:Process.PerformTestImpactAnalysis="[True]" this:Process.CreateLabel="[True]" this:Process.DisableTests="[False]" this:Process.Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]" this:Process.SupportedReasons="All" this:Process.BuildProcessVersion="11.0" this:Process.CleaningUtilFileName="clean.bat" this:Process.StagingDir="\\rsaklfsvrtfsbld\Automated Builds\DevMergeStaging" this:Process.WorkspaceNameSuffix="DevGate" this:Process.DeleteWorkspaceAtTheEnd="True" this:Process.BranchID="DEV" this:Process.TestRunStagingDir="\\rsaklfsvrtfsbld\Automated Builds\TestRunStaging" this:Process.ParallelizeGatedTestingRun="False" this:Process.WarewolfServerInsertResultsURI="Http://RSAKLFSVRWRWBLD:1234/services/JustProcessFile" this:Process.DoResultDeployment="True" this:Process.TestResultsStagingDirectory="\\RSAKLFSVRGENDEV\TestResultFiles"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common"
 xmlns:mt1="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Client"
 xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client"
 xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtc="clr-namespace:Microsoft.TeamFoundation.Client;assembly=Microsoft.TeamFoundation.Client"
 xmlns:mtlwa="clr-namespace:Microsoft.TeamFoundation.Lab.Workflow.Activities;assembly=Microsoft.TeamFoundation.Lab.Workflow.Activities"
 xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration"
 xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
 xmlns:mtvc1="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualStudio.VisualBasic.LanguageService"
 xmlns:mv1="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.LanguageService"
 xmlns:mv2="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.Editor"
 xmlns:mv3="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic"
 xmlns:mv4="clr-namespace:Microsoft.VisualBasic;assembly=System"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:mvc="clr-namespace:Microsoft.VisualBasic.CompilerServices;assembly=Microsoft.VisualBasic"
 xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:s1="clr-namespace:System;assembly=System"
 xmlns:s2="clr-namespace:System;assembly=System.Core"
 xmlns:s3="clr-namespace:System;assembly=System.ComponentModel.Composition"
 xmlns:s4="clr-namespace:System;assembly=System.ServiceModel"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.Core"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel"
 xmlns:sd="clr-namespace:System.Diagnostics;assembly=System"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:si1="clr-namespace:System.IO;assembly=System.ServiceModel"
 xmlns:si2="clr-namespace:System.IO;assembly=WindowsBase"
 xmlns:si3="clr-namespace:System.IO;assembly=System.Core"
 xmlns:si4="clr-namespace:System.IO;assembly=System"
 xmlns:sic="clr-namespace:System.IO.Compression;assembly=System"
 xmlns:sic1="clr-namespace:System.IO.Compression;assembly=System.IO.Compression.FileSystem.dll"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core"
 xmlns:st="clr-namespace:System.Text;assembly=mscorlib"
 xmlns:sw="clr-namespace:System.Web;assembly=System.Web"
 xmlns:sw1="clr-namespace:System.Web;assembly=System"
 xmlns:this="clr-namespace:TfsBuild"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BuildSettings" Type="InArgument(mtbwa:BuildSettings)" />
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)" />
    <x:Property Name="SolutionSpecificBuildOutputs" Type="InArgument(x:Boolean)" />
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)" />
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)" />
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)" />
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)" />
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)" />
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)" />
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)" />
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="GetVersion" Type="InArgument(x:String)" />
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)" />
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)" />
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection" />
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason" />
    <x:Property Name="BuildProcessVersion" Type="x:String" />
    <x:Property Name="CleaningUtilFileName" Type="InArgument(x:String)" />
    <x:Property Name="StagingDir" Type="InArgument(x:String)" />
    <x:Property Name="WorkspaceNameSuffix" Type="InArgument(x:String)" />
    <x:Property Name="DeleteWorkspaceAtTheEnd" Type="InArgument(x:Boolean)" />
    <x:Property Name="BranchID" Type="InArgument(x:String)" />
    <x:Property Name="TestRunStagingDir" Type="InArgument(x:String)" />
    <x:Property Name="ParallelizeGatedTestingRun" Type="InArgument(x:Boolean)" />
    <x:Property Name="WarewolfServerInsertResultsURI" Type="InArgument(x:String)" />
    <x:Property Name="DoResultDeployment" Type="InArgument(x:Boolean)" />
    <x:Property Name="TestResultsStagingDirectory" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.MSBuildArguments>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.GetVersion>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata Category="#300 Advanced" Description="Enable MSBuid Multi-proc to build your solutions' projects in parallel, when possible, using all available processors on the build server." DisplayName="MSBuild Multi-Proc" ParameterName="MSBuildMultiProc" />
      <mtbw:ProcessParameterMetadata Category="#300 Advanced" Description="True will put build outputs into folders based on the solution name. False will put all build outputs into the same folder." DisplayName="Solution Specific Build Outputs" ParameterName="SolutionSpecificBuildOutputs" />
      <mtbw:ProcessParameterMetadata Category="Agents" DisplayName="Machine Names" ParameterName="MachineNames" />
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <sap2010:WorkflowViewState.IdRef>TfsBuild.Process_1</sap2010:WorkflowViewState.IdRef>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence DisplayName="Build and Wait" sap2010:WorkflowViewState.IdRef="Sequence_2" mtbwt:BuildTrackingParticipant.Importance="None">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail" />
      <Variable x:TypeArguments="x:String" Name="DropLocation" />
      <Variable x:TypeArguments="si:FileStream" Name="ChangeSetIDFileStream" />
      <Variable x:TypeArguments="x:String" Name="BuildNumber" />
    </Sequence.Variables>
    <mtbwa:GetBuildDetail DisplayName="Get the Build" sap2010:WorkflowViewState.IdRef="GetBuildDetail_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDetail]" />
    <Sequence DisplayName="Update Drop Location" sap2010:WorkflowViewState.IdRef="Sequence_107" mtbwt:BuildTrackingParticipant.Importance="Low">
      <mtbwa:InvokeForReason DisplayName="Update Build Number for Triggered Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_13" Reason="Triggered">
        <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="Update Build Number" sap2010:WorkflowViewState.IdRef="UpdateBuildNumber_2" Result="[BuildNumber]" />
      </mtbwa:InvokeForReason>
      <If Condition="[(Not String.IsNullOrEmpty(BuildDetail.DropLocationRoot)) AndAlso (BuildDetail.Reason And Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered) = BuildDetail.Reason]" DisplayName="If Build Reason is Triggered" sap2010:WorkflowViewState.IdRef="If_96" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_105" mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Assign`1_27" mtbwt:BuildTrackingParticipant.Importance="None" To="[DropLocation]" Value="[BuildDropProvider.CombinePaths(BuildDetail.DropLocationRoot, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" />
            <mtbwa:SetBuildProperties DisplayName="Set Drop Location" DropLocation="[DropLocation]" sap2010:WorkflowViewState.IdRef="SetBuildProperties_16" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
          </Sequence>
        </If.Then>
      </If>
      <If Condition="[(Not String.IsNullOrEmpty(PrivateDropLocation)) AndAlso BuildDetail.Reason = Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset]" DisplayName="If Build Reason is ValidateShelveset" sap2010:WorkflowViewState.IdRef="If_97" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_106" mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Assign`1_28" mtbwt:BuildTrackingParticipant.Importance="None" To="[DropLocation]" Value="[BuildDropProvider.CombinePaths(PrivateDropLocation, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" />
            <mtbwa:SetBuildProperties DisplayName="Set Drop Location for Private Build" DropLocation="[DropLocation]" sap2010:WorkflowViewState.IdRef="SetBuildProperties_17" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <mtbwa:AgentScope DataToIgnore="" DisplayName="Run On Agent" sap2010:WorkflowViewState.IdRef="AgentScope_1" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent" />
        <Variable x:TypeArguments="mtvc:Workspace" Name="Workspace" />
        <Variable x:TypeArguments="x:String" Name="BuildDirectory" />
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName" />
        <Variable x:TypeArguments="x:String" Name="WorkspaceName" />
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory" />
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory" />
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory" />
        <Variable x:TypeArguments="x:String" Name="buildItem" />
        <Variable x:TypeArguments="x:Int32" Name="TestStatusID" />
        <Variable x:TypeArguments="x:String" Name="TheShelveSet" />
        <Variable x:TypeArguments="x:String" Name="StudioErrorOutput" />
        <Variable x:TypeArguments="mtvc:Changeset" Name="ChangeSet" />
        <Variable x:TypeArguments="x:String" Name="ServerErrorOutput" />
        <Variable x:TypeArguments="scg:IList(mtvc:Changeset)" Name="associatedChangesets" />
      </mtbwa:AgentScope.Variables>
      <Sequence DisplayName="Initialize Variables" sap2010:WorkflowViewState.IdRef="Sequence_6" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:GetBuildAgent DisplayName="Get the Agent" sap2010:WorkflowViewState.IdRef="GetBuildAgent_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildAgent]" />
        <mtbwa:GetBuildDirectory DisplayName="Get the Build Directory" sap2010:WorkflowViewState.IdRef="GetBuildDirectory_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDirectory]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Workspace Name" sap2010:WorkflowViewState.IdRef="Assign`1_3" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[BuildAgent.ServiceHost.Name &amp; &quot;_&quot; &amp; WorkspaceNameSuffix]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Sources Directory" sap2010:WorkflowViewState.IdRef="Assign`1_4" mtbwt:BuildTrackingParticipant.Importance="Low" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\Sources&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Binaries Directory" sap2010:WorkflowViewState.IdRef="Assign`1_5" mtbwt:BuildTrackingParticipant.Importance="Low" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\Binaries&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Test Results Directory" sap2010:WorkflowViewState.IdRef="Assign`1_25" mtbwt:BuildTrackingParticipant.Importance="Low" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\TestResults&quot;, BuildDirectory)]" />
        <If Condition="[Not BuildSettings.HasPlatformConfigurations]" DisplayName="If Not BuildSettings.HasPlatformConfigurations" sap2010:WorkflowViewState.IdRef="If_3" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <AddToCollection x:TypeArguments="mtbwa:PlatformConfiguration" Collection="[BuildSettings.PlatformConfigurations]" DisplayName="Use Default Platform Configuration" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" mtbwt:BuildTrackingParticipant.Importance="Low" Item="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" />
          </If.Then>
        </If>
        <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="If WorkspaceName &gt; MaxSize" sap2010:WorkflowViewState.IdRef="If_4" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5" mtbwt:BuildTrackingParticipant.Importance="None">
              <mtbwa:WriteBuildWarning DisplayName="Write Workspace Size Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_1" Message="[String.Format(&quot;The workspace name '{0}' exceeds the maximum allowed limit of '{1}' characters. Truncating it to match the maximum limit.&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
              <Assign x:TypeArguments="x:String" DisplayName="Truncate WorkspaceName to MaxSize" sap2010:WorkflowViewState.IdRef="Assign`1_10" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Initialize Workspace" sap2010:WorkflowViewState.IdRef="Sequence_48" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_5" mtbwt:BuildTrackingParticipant.Importance="Low" />
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" sap2010:WorkflowViewState.IdRef="If_53" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Delete Workspace and Sources Directory" sap2010:WorkflowViewState.IdRef="Sequence_46" mtbwt:BuildTrackingParticipant.Importance="Low">
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_4" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_4" mtbwt:BuildTrackingParticipant.Importance="Low" />
              <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_3" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Get Existing Workspace" sap2010:WorkflowViewState.IdRef="Sequence_47">
              <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <TryCatch.Try>
                  <mtbwa:GetWorkspace sap2010:WorkflowViewState.IdRef="GetWorkspace_2" Name="[WorkspaceName]" Result="[Workspace]" ThrowIfNotFound="[True]" />
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="mtvc:WorkspaceNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                    <ActivityAction x:TypeArguments="mtvc:WorkspaceNotFoundException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="mtvc:WorkspaceNotFoundException" Name="exception" />
                      </ActivityAction.Argument>
                      <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_5" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
                <TryCatch.Finally>
                  <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_4" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                </TryCatch.Finally>
              </TryCatch>
            </Sequence>
          </If.Else>
        </If>
        <Assign DisplayName="Set ShelveSet" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[TheShelveSet]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["""" &amp; BuildDetail.ShelvesetName &amp; """"]</InArgument>
          </Assign.Value>
        </Assign>
        <TryCatch DisplayName="TryUnshelve" sap2010:WorkflowViewState.IdRef="TryCatch_8">
          <TryCatch.Try>
            <mtbwa:SyncWorkspace AllowUnmapped="False" AutoMerge="True" DisplayName="Sync Workspace" GetOptions="[Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Overwrite]" sap2010:WorkflowViewState.IdRef="SyncWorkspace_2" NoCIOption="False" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]">
              <mtbwa:SyncWorkspace.RequestsFailed>
                <ActivityAction x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                  </ActivityAction.Argument>
                  <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_4" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                </ActivityAction>
              </mtbwa:SyncWorkspace.RequestsFailed>
            </mtbwa:SyncWorkspace>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="mtbwa:NoShelvesetException" sap2010:WorkflowViewState.IdRef="Catch`1_7">
              <ActivityAction x:TypeArguments="mtbwa:NoShelvesetException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="mtbwa:NoShelvesetException" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Auto Refresh Workspace" sap2010:WorkflowViewState.IdRef="Sequence_66">
                  <mtbwa:WriteBuildError DisplayName="WriteWorkspaceError" sap2010:WorkflowViewState.IdRef="WriteBuildError_4" Message="There was a problem updating the workspace with the shelveset, deleting workspace and starting fresh. This will make no difference to the build except it will take a lot longer." />
                  <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_8" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
                  <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_11" mtbwt:BuildTrackingParticipant.Importance="Low" />
                  <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_6" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                  <mtbwa:SyncWorkspace AutoMerge="True" DisplayName="Sync Workspace" GetOptions="[Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Overwrite]" sap2010:WorkflowViewState.IdRef="SyncWorkspace_3" NoCIOption="False" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]">
                    <mtbwa:SyncWorkspace.RequestsFailed>
                      <ActivityAction x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                        </ActivityAction.Argument>
                        <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_5" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                      </ActivityAction>
                    </mtbwa:SyncWorkspace.RequestsFailed>
                  </mtbwa:SyncWorkspace>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </Sequence>
      <TryCatch DisplayName="Try Deploy Plugins Catch Unautherized Access" sap2010:WorkflowViewState.IdRef="TryCatch_10">
        <TryCatch.Try>
          <Sequence DisplayName="Deploy Plugins" sap2010:WorkflowViewState.IdRef="Sequence_64">
            <mtbwa:CopyDirectory Destination="[String.Format(&quot;{0}\CefSharp\locales&quot;, BinariesDirectory)]" DisplayName="Copy locales" sap2010:WorkflowViewState.IdRef="CopyDirectory_7" Source="[String.Format(&quot;{0}\Binaries\CefSharp\locales&quot;, SourcesDirectory)]" />
            <mtbwa:CopyDirectory Destination="[String.Format(&quot;{0}\CefSharp&quot;, BinariesDirectory)]" DisplayName="Copy CefSharp" sap2010:WorkflowViewState.IdRef="CopyDirectory_1" Source="[String.Format(&quot;{0}\Binaries\CefSharp&quot;, SourcesDirectory)]" />
            <mtbwa:CopyDirectory Destination="[String.Format(&quot;{0}\ActiveDirectory&quot;, BinariesDirectory)]" DisplayName="Copy Interop.ActiveDs" sap2010:WorkflowViewState.IdRef="CopyDirectory_9" Source="[String.Format(&quot;{0}\Binaries\ActiveDirectory&quot;, SourcesDirectory)]" />
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:UnauthorizedAccessException" sap2010:WorkflowViewState.IdRef="Catch`1_9">
            <ActivityAction x:TypeArguments="s:UnauthorizedAccessException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:UnauthorizedAccessException" Name="exception" />
              </ActivityAction.Argument>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <TryCatch DisplayName="Try Compile, Test, and Associate Changesets and Work Items" sap2010:WorkflowViewState.IdRef="TryCatch_4" mtbwt:BuildTrackingParticipant.Importance="Low">
        <TryCatch.Variables>
          <Variable x:TypeArguments="s:Exception" Name="compilationException" />
          <Variable x:TypeArguments="x:Boolean" Name="treatTestFailureAsBuildFailure" />
        </TryCatch.Variables>
        <TryCatch.Finally>
          <Sequence DisplayName="Revert Workspace and Copy Files to Drop Location" sap2010:WorkflowViewState.IdRef="Sequence_27" mtbwt:BuildTrackingParticipant.Importance="Low">
            <mtbwa:InvokeForReason DisplayName="Revert Workspace for Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_7" Reason="ValidateShelveset, CheckInShelveset">
              <mtbwa:RevertWorkspace DisplayName="Revert Workspace" sap2010:WorkflowViewState.IdRef="RevertWorkspace_1" Workspace="[Workspace]" />
            </mtbwa:InvokeForReason>
            <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="If DropLocation is Set" sap2010:WorkflowViewState.IdRef="If_37" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <mtbwa:CopyDirectory Destination="[DropLocation]" DisplayName="Drop Files to Drop Location" sap2010:WorkflowViewState.IdRef="CopyDirectory_2" Source="[BinariesDirectory]" />
              </If.Then>
            </If>
          </Sequence>
        </TryCatch.Finally>
        <TryCatch.Try>
          <Parallel DisplayName="Compile and Associate Changesets and Work Items" sap2010:WorkflowViewState.IdRef="Parallel_5">
            <Sequence DisplayName="Compile and Test" sap2010:WorkflowViewState.IdRef="Sequence_71">
              <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap2010:WorkflowViewState.IdRef="ForEach`1_12" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
                <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Compile and Test for Configuration" sap2010:WorkflowViewState.IdRef="Sequence_70" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="logFileDropLocation" />
                    </Sequence.Variables>
                    <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap2010:WorkflowViewState.IdRef="ForEach`1_11" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.ProjectsToBuild]">
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                        </ActivityAction.Argument>
                        <TryCatch DisplayName="Try to Compile the Project" sap2010:WorkflowViewState.IdRef="TryCatch_9" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <Sequence DisplayName="Compile the Projects" sap2010:WorkflowViewState.IdRef="Sequence_68" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="localProject" />
                              </Sequence.Variables>
                              <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap2010:WorkflowViewState.IdRef="ConvertWorkspaceItem_5" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[serverBuildProjectItem]" Result="[localProject]" Workspace="[Workspace]" />
                              <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Build All Projects" GenerateVSPropsFile="[True]" sap2010:WorkflowViewState.IdRef="MSBuild_6" LogFileDropLocation="[logFileDropLocation]" MaxProcesses="2" OutDir="[BinariesDirectory]" Platform="[platformConfiguration.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" ToolPlatform="[MSBuildPlatform]" Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Minimal]" />
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Handle Exception" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                                  </Sequence.Variables>
                                  <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="Set CompilationStatus to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_9" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                                  <If Condition="[CreateWorkItem]" DisplayName="If CreateWorkItem" sap2010:WorkflowViewState.IdRef="If_58" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <If.Then>
                                      <mtbwa:InvokeForReason DisplayName="Create Work Item for non-Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_9" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                        <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;This work item was created by TFS Build on a build failure.&quot;]" CustomFields="[New Dictionary(Of String, String) From { {&quot;System.Reason&quot;, &quot;Build Failure&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;Start the build using TFS Build&quot;}, {&quot;Priority&quot;, &quot;1&quot;}, {&quot;Severity&quot;, &quot;1 - Critical&quot;} }]" DisplayName="Create Work Item" sap2010:WorkflowViewState.IdRef="OpenWorkItem_2" Title="[String.Format(&quot;Build Failure in Build: {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;Bug&quot;]" />
                                      </mtbwa:InvokeForReason>
                                    </If.Then>
                                  </If>
                                  <mtbwa:GetApprovedRequests DisplayName="Get Requests Approved for Check In" sap2010:WorkflowViewState.IdRef="GetApprovedRequests_3" mtbwt:BuildTrackingParticipant.Importance="None" Result="[failedRequests]" />
                                  <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_6" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                                  <mtbwa:InvokeForReason DisplayName="Revert Workspace for Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_10" Reason="ValidateShelveset, CheckInShelveset">
                                    <mtbwa:RevertWorkspace DisplayName="Revert Workspace" sap2010:WorkflowViewState.IdRef="RevertWorkspace_3" Workspace="[Workspace]" />
                                  </mtbwa:InvokeForReason>
                                  <Rethrow DisplayName="Rethrow the exception so the build will stop" sap2010:WorkflowViewState.IdRef="Rethrow_2" mtbwt:BuildTrackingParticipant.Importance="Low" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </ActivityAction>
                    </ForEach>
                    <If Condition="[Not DisableTests]" DisplayName="If Not DisableTests" sap2010:WorkflowViewState.IdRef="If_82" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap2010:WorkflowViewState.IdRef="ForEach`1_13" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
                          <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                            </ActivityAction.Argument>
                            <If Condition="[Not TestSpecs Is Nothing]" DisplayName="If Not TestSpecs Is Nothing" sap2010:WorkflowViewState.IdRef="If_87" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <If.Then>
                                <ParallelForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="ParallelForEachTestSpec" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2" Values="[TestSpecs]">
                                  <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="For a TestSpec" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="s:String[]" Name="ResultFileNames" />
                                        <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                                      </Sequence.Variables>
                                      <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap2010:WorkflowViewState.IdRef="Assign`1_26" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                                      <TryCatch DisplayName="Try Run Tests" sap2010:WorkflowViewState.IdRef="TryCatch_14" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <TryCatch.Try>
                                          <Sequence DisplayName="Run MSTest for test spec" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                                            </Sequence.Variables>
                                            <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap2010:WorkflowViewState.IdRef="FindMatchingFiles_1" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[BinariesDirectory &amp; testAssembly.AssemblyFileSpec]" Result="[testAssemblies]" />
                                            <Assign DisplayName="Initialize Results Folder Name" sap2010:WorkflowViewState.IdRef="Assign_16">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[TestResultsDirectory]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\" &amp; testAssembly.RunName]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap2010:WorkflowViewState.IdRef="If_85" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <Sequence DisplayName="Test and then remove test assemblies" sap2010:WorkflowViewState.IdRef="Sequence_104">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="TestResultsStagingDirectoryWithNewFileName" />
                                                  </Sequence.Variables>
                                                  <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap2010:WorkflowViewState.IdRef="If_93" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <Sequence DisplayName="Find Test Settings File And Run MSTest" sap2010:WorkflowViewState.IdRef="Sequence_103" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                                        </Sequence.Variables>
                                                        <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download test settings" sap2010:WorkflowViewState.IdRef="DownloadFile_2" LocalPath="[SourcesDirectory &amp; &quot;\&quot; &amp; testAssembly.TestSettingsFileName.Substring(testAssembly.TestSettingsFileName.LastIndexOf(&quot;/&quot;) + 1, testAssembly.TestSettingsFileName.Length - testAssembly.TestSettingsFileName.LastIndexOf(&quot;/&quot;) - 1)]" ServerPath="[testAssembly.TestSettingsFileName]" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" />
                                                        <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap2010:WorkflowViewState.IdRef="ConvertWorkspaceItem_7" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                                        <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[If(platformConfiguration.IsEmpty, &quot;Test&quot;, platformConfiguration.Configuration)]" sap2010:WorkflowViewState.IdRef="MSTest_3" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[If(platformConfiguration.IsEmpty, &quot;Mixed Platforms&quot;, platformConfiguration.Platform)]" RunTitle="[testAssembly.RunName]" SearchPathRoot="[BinariesDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[If(platformConfiguration.IsEmpty, &quot;Test&quot;, platformConfiguration.Configuration)]" sap2010:WorkflowViewState.IdRef="MSTest_4" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[If(platformConfiguration.IsEmpty, &quot;Mixed Platforms&quot;, platformConfiguration.Platform)]" RunTitle="[testAssembly.RunName]" SearchPathRoot="[BinariesDirectory]" TestContainers="[testAssemblies]" />
                                                    </If.Else>
                                                  </If>
                                                  <ForEach x:TypeArguments="x:String" DisplayName="ForEach Test Assembly File" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[testAssemblies]">
                                                    <ActivityAction x:TypeArguments="x:String">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                                                      </ActivityAction.Argument>
                                                      <If Condition="[Not file.Contains(&quot;Dev2.Activities.Tests.dll&quot;) And Not file.Contains(&quot;Dev2.Studio.Core.Tests.dll&quot;)]" DisplayName="If can delete test assembly" sap2010:WorkflowViewState.IdRef="If_95">
                                                        <If.Then>
                                                          <InvokeMethod DisplayName="Delete File" sap2010:WorkflowViewState.IdRef="InvokeMethod_35" MethodName="Delete" TargetType="si:File">
                                                            <InArgument x:TypeArguments="x:String">[file]</InArgument>
                                                          </InvokeMethod>
                                                        </If.Then>
                                                      </If>
                                                    </ActivityAction>
                                                  </ForEach>
                                                  <Assign DisplayName="Generate Test Results File Name">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[TestResultsStagingDirectoryWithNewFileName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[TestResultsStagingDirectory &amp; "\" &amp; ChangeSet.ChangesetId.ToString &amp; "_" &amp; BuildDetail.RequestedFor.Replace(" ", ".") &amp; "_" &amp; BranchID &amp; "_" &amp; testAssembly.RunName.Substring(0, testAssembly.RunName.IndexOf(" ")) &amp; ".trx"]</InArgument>
                                                    </Assign.Value>
                                                    <sap2010:WorkflowViewState.IdRef>Assign_17</sap2010:WorkflowViewState.IdRef>
                                                  </Assign>
                                                  <If Condition="[DoResultDeployment]" DisplayName="If can deploy results">
                                                    <If.Then>
                                                      <Sequence DisplayName="Deploy Test Results">
                                                        <InvokeMethod DisplayName="Read Results Folder" MethodName="GetFiles" TargetType="si:Directory">
                                                          <InvokeMethod.Result>
                                                            <OutArgument x:TypeArguments="s:String[]">[ResultFileNames]</OutArgument>
                                                          </InvokeMethod.Result>
                                                          <InArgument x:TypeArguments="x:String">[TestResultsDirectory]</InArgument>
                                                          <InArgument x:TypeArguments="x:String">*.trx</InArgument>
                                                          <sap2010:WorkflowViewState.IdRef>InvokeMethod_36</sap2010:WorkflowViewState.IdRef>
                                                        </InvokeMethod>
                                                        <If Condition="[ResultFileNames.Count = 1]" DisplayName="If there were any results">
                                                          <If.Then>
                                                            <Sequence>
                                                              <ForEach x:TypeArguments="x:String" DisplayName="ForEachTestResultFile" Values="[ResultFileNames]">
                                                                <ActivityAction x:TypeArguments="x:String">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="x:String" Name="fileName" />
                                                                  </ActivityAction.Argument>
                                                                  <InvokeMethod DisplayName="Deploy Results File" MethodName="Move" TargetType="si:File">
                                                                    <InArgument x:TypeArguments="x:String">[fileName]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String">[TestResultsStagingDirectoryWithNewFileName]</InArgument>
                                                                    <sap2010:WorkflowViewState.IdRef>InvokeMethod_37</sap2010:WorkflowViewState.IdRef>
                                                                  </InvokeMethod>
                                                                </ActivityAction>
                                                                <sap2010:WorkflowViewState.IdRef>ForEach`1_16</sap2010:WorkflowViewState.IdRef>
                                                              </ForEach>
                                                              <sap2010:WorkflowViewState.IdRef>Sequence_108</sap2010:WorkflowViewState.IdRef>
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <mtbwa:WriteBuildWarning Message="Number of test results found is not exactly 1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_9" />
                                                          </If.Else>
                                                          <sap2010:WorkflowViewState.IdRef>If_98</sap2010:WorkflowViewState.IdRef>
                                                        </If>
                                                        <sap2010:WorkflowViewState.IdRef>Sequence_109</sap2010:WorkflowViewState.IdRef>
                                                      </Sequence>
                                                    </If.Then>
                                                    <sap2010:WorkflowViewState.IdRef>If_99</sap2010:WorkflowViewState.IdRef>
                                                  </If>
                                                  <mtbwa:InvokeProcess Arguments="[&quot;-u &quot;&quot;DEV2\IntegrationTester:I73573r0&quot;&quot; --ntlm &quot;&quot;&quot; &amp; WarewolfServerInsertResultsURI &amp; &quot;?File=&quot; &amp; System.Web.HttpUtility.UrlEncode(TestResultsStagingDirectoryWithNewFileName) &amp; &quot;&quot;&quot;&quot;]" DisplayName="Insert Results" FileName="C:\Builds\TestRunWorkspace\curl.exe">
                                                    <mtbwa:InvokeProcess.ErrorDataReceived>
                                                      <ActivityAction x:TypeArguments="x:String">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                                        </ActivityAction.Argument>
                                                      </ActivityAction>
                                                    </mtbwa:InvokeProcess.ErrorDataReceived>
                                                    <mtbwa:InvokeProcess.OutputDataReceived>
                                                      <ActivityAction x:TypeArguments="x:String">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                                        </ActivityAction.Argument>
                                                      </ActivityAction>
                                                    </mtbwa:InvokeProcess.OutputDataReceived>
                                                    <sap2010:WorkflowViewState.IdRef>InvokeProcess_36</sap2010:WorkflowViewState.IdRef>
                                                  </mtbwa:InvokeProcess>
                                                </Sequence>
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Handle Test Run Exception" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                                                </Sequence.Variables>
                                                <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="If testException is NOT TestFailureException" sap2010:WorkflowViewState.IdRef="If_86" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <If.Then>
                                                    <mtbwa:WriteBuildError DisplayName="Write Test Failure Message" sap2010:WorkflowViewState.IdRef="WriteBuildError_5" Message="[testException.Message]" />
                                                  </If.Then>
                                                </If>
                                                <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_15" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                                <mtbwa:GetApprovedRequests DisplayName="Get Requests Approved for Check In" sap2010:WorkflowViewState.IdRef="GetApprovedRequests_4" mtbwt:BuildTrackingParticipant.Importance="None" Result="[failedRequests]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </ParallelForEach>
                              </If.Then>
                              <If.Else>
                                <mtbwa:WriteBuildWarning DisplayName="Write Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_8" Message="No automated tests will be run for this build because the test specification is not present. Please check build definition for test specifications." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </If.Else>
                            </If>
                          </ActivityAction>
                        </ForEach>
                      </If.Then>
                      <If.Else>
                        <mtbwa:WriteBuildWarning DisplayName="Write Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_7" Message="No automated tests will be run for this build because tests have been disabled for this build definition. To enable these tests, edit this build definition and set the Disable Tests process parameter to false." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ForEach>
              <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If CompilationStatus = Unknown" sap2010:WorkflowViewState.IdRef="If_59" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="Set CompilationStatus to Succeeded" sap2010:WorkflowViewState.IdRef="SetBuildProperties_10" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                </If.Then>
              </If>
              <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If TestStatus = Unknown" sap2010:WorkflowViewState.IdRef="If_60" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Succeeded" sap2010:WorkflowViewState.IdRef="SetBuildProperties_11" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" />
                </If.Then>
              </If>
              <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="If TreatTestFailureAsBuildFailure And (TestStatus = Failed)" sap2010:WorkflowViewState.IdRef="If_61" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_12" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                </If.Then>
              </If>
            </Sequence>
            <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="If AssociateChangesetsAndWorkItems" sap2010:WorkflowViewState.IdRef="If_63" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <If Condition="[CreateLabel]" DisplayName="If CreateLabel and AssociateChangesetsAndWorkItems" sap2010:WorkflowViewState.IdRef="If_62" mtbwt:BuildTrackingParticipant.Importance="Low">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72">
                      <mtbwa:InvokeForReason DisplayName="Associate Changesets and Work Items for non-Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_11" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                        <mtbwa:AssociateChangesetsAndWorkItems DisplayName="Associate Changesets and Work Items" sap2010:WorkflowViewState.IdRef="AssociateChangesetsAndWorkItems_2" Result="[associatedChangesets]" />
                      </mtbwa:InvokeForReason>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildWarning DisplayName="Write Associate Changesets and Work Items Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_6" Message="Cannot Associate Changesets and Work Items because the Label Sources option is set to False." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
              </If.Then>
            </If>
          </Parallel>
        </TryCatch.Try>
      </TryCatch>
      <Parallel DisplayName="Get Impacted Tests, Index Sources and Publish Symbols" sap2010:WorkflowViewState.IdRef="Parallel_6">
        <If Condition="[PerformTestImpactAnalysis]" DisplayName="If PerformTestImpactAnalysis" sap2010:WorkflowViewState.IdRef="If_89" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Get Impacted Tests" sap2010:WorkflowViewState.IdRef="Sequence_102" mtbwt:BuildTrackingParticipant.Importance="Low">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="assemblies" />
              </Sequence.Variables>
              <mtbwa:FindMatchingFiles DisplayName="Find Build Outputs" sap2010:WorkflowViewState.IdRef="FindMatchingFiles_2" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\**\*.dll;{0}\**\*.exe&quot;, BinariesDirectory)]" Result="[assemblies]" />
              <mttbb:GetImpactedTests CodeChanges="{x:Null}" ImpactedTests="{x:Null}" Assemblies="[assemblies]" AssociatedChangesets="[associatedChangesets]" BaselineBuildDropLocation="[StagingDir]" BinariesRoot="[BinariesDirectory]" Build="[BuildDetail]" DisplayName="Get Impacted Tests" sap2010:WorkflowViewState.IdRef="GetImpactedTests_1" Workspace="[Workspace]" />
            </Sequence>
          </If.Then>
        </If>
        <If Condition="[SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath" sap2010:WorkflowViewState.IdRef="If_92" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <mtbwa:InvokeForReason DisplayName="Index Sources and Publish Symbols for Triggered Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_12" Reason="Triggered">
              <mtbwa:InvokeForReason.Variables>
                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="symbolFiles" />
              </mtbwa:InvokeForReason.Variables>
              <mtbwa:FindMatchingFiles DisplayName="Find Symbol Files" sap2010:WorkflowViewState.IdRef="FindMatchingFiles_3" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\**\*.pdb&quot;, BinariesDirectory)]" Result="[symbolFiles]" />
              <If Condition="[SourceAndSymbolServerSettings.IndexSources]" DisplayName="If SourceAndSymbolServerSettings.IndexSources" sap2010:WorkflowViewState.IdRef="If_90" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <TryCatch DisplayName="Try Index Sources" sap2010:WorkflowViewState.IdRef="TryCatch_15" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <TryCatch.Try>
                      <mtbwa:IndexSources DisplayName="Index Sources" FileList="[symbolFiles]" sap2010:WorkflowViewState.IdRef="IndexSources_1" />
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <mtbwa:WriteBuildError DisplayName="Write Indexing Sources Error" sap2010:WorkflowViewState.IdRef="WriteBuildError_6" Message="[exception.Message]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </If.Then>
              </If>
              <If Condition="[SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.HasSymbolStorePath" sap2010:WorkflowViewState.IdRef="If_91" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <TryCatch DisplayName="Try Publish Symbols" sap2010:WorkflowViewState.IdRef="TryCatch_16" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <TryCatch.Try>
                      <mtbwa:SharedResourceScope DisplayName="Synchronize Access to Symbol Store" sap2010:WorkflowViewState.IdRef="SharedResourceScope_1" mtbwt:BuildTrackingParticipant.Importance="Low" MaxExecutionTime="[TimeSpan.Zero]" MaxWaitTime="[New TimeSpan(1, 0, 0)]" ResourceName="[SourceAndSymbolServerSettings.SymbolStorePath]">
                        <mtbwa:PublishSymbols DisplayName="Publish Symbols" FileList="[symbolFiles]" sap2010:WorkflowViewState.IdRef="PublishSymbols_1" ProductName="[BuildDetail.BuildDefinition.Name]" StorePath="[SourceAndSymbolServerSettings.SymbolStorePath]" Version="[BuildDetail.BuildNumber]" />
                        <ForEach x:TypeArguments="x:String" DisplayName="ForEach Symbol File" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[symbolFiles]">
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                            </ActivityAction.Argument>
                            <TryCatch DisplayName="Try delete symbol file" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                              <TryCatch.Try>
                                <InvokeMethod DisplayName="Delete File" sap2010:WorkflowViewState.IdRef="InvokeMethod_34" MethodName="Delete" TargetType="si:File">
                                  <InArgument x:TypeArguments="x:String">[file]</InArgument>
                                </InvokeMethod>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:UnauthorizedAccessException" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                  <ActivityAction x:TypeArguments="s:UnauthorizedAccessException">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:UnauthorizedAccessException" Name="exception" />
                                    </ActivityAction.Argument>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </ActivityAction>
                        </ForEach>
                      </mtbwa:SharedResourceScope>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <mtbwa:WriteBuildError DisplayName="Write Publishing Symbols Error" sap2010:WorkflowViewState.IdRef="WriteBuildError_7" Message="[exception.Message]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </If.Then>
              </If>
            </mtbwa:InvokeForReason>
          </If.Then>
        </If>
      </Parallel>
      <If Condition="[BuildDetail.CompilationStatus = BuildPhaseStatus.Succeeded And BuildDetail.TestStatus = BuildPhaseStatus.Succeeded]" DisplayName="If Compiled Successfully" sap2010:WorkflowViewState.IdRef="If_43">
        <If.Then>
          <Sequence DisplayName="Checkin and Deploy" sap2010:WorkflowViewState.IdRef="Sequence_34">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="TestRunBuildID" />
              <Variable x:TypeArguments="mtbc:IBuildInformationNode" Name="BuildIDsInformationNode" />
              <Variable x:TypeArguments="x:String" Name="SpecifiedChangesetID" />
            </Sequence.Variables>
            <If Condition="[Not (TheShelveSet Is Nothing)]" DisplayName="If there is a shelveset" sap2010:WorkflowViewState.IdRef="If_64">
              <If.Then>
                <Sequence DisplayName="Checkin, stage for tests and queue test builds" sap2010:WorkflowViewState.IdRef="Sequence_78">
                  <Sequence DisplayName="Check in" sap2010:WorkflowViewState.IdRef="Sequence_74">
                    <mtbwa:CheckInGatedChanges DisplayName="Check In Gated Changes" sap2010:WorkflowViewState.IdRef="CheckInGatedChanges_1" IgnoreErrors="False" Result="[ChangeSet]" />
                    <If Condition="[ChangeSet Is Nothing]" DisplayName="If Nothing Checked In" sap2010:WorkflowViewState.IdRef="If_55">
                      <If.Then>
                        <Assign DisplayName="Get SourceGetVersion Changeset ID" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[SpecifiedChangesetID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[BuildDetail.SourceGetVersion]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Get Checkin Changeset ID" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[SpecifiedChangesetID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ChangeSet.ChangesetId.ToString()]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Stage Binaries" sap2010:WorkflowViewState.IdRef="Sequence_56">
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\Services&quot;]" DisplayName="Create Services Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory + &quot;\Sources&quot;]" DisplayName="Create Sources Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\Plugins&quot;]" DisplayName="Create Plugins Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\themes&quot;]" DisplayName="Create themes Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\Webs&quot;]" DisplayName="Create Webs Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" />
                    <If Condition="[Directory.Exists(SourcesDirectory + &quot;\BPM Resources&quot;)]" DisplayName="If using test resources" sap2010:WorkflowViewState.IdRef="If_88">
                      <If.Then>
                        <Sequence DisplayName="Use debug resources" sap2010:WorkflowViewState.IdRef="Sequence_100">
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Services&quot;]" DisplayName="Copy Services Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_4" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Services&quot;]" />
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Sources&quot;]" DisplayName="Copy Sources Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_5" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Sources&quot;]" />
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Plugins&quot;]" DisplayName="Copy Plugins Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_8" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Plugins&quot;]" />
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\themes&quot;]" DisplayName="Copy themes Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_16" Source="[SourcesDirectory &amp; &quot;\BPM Resources\themes&quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Use test resources" sap2010:WorkflowViewState.IdRef="Sequence_101">
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Services&quot;]" DisplayName="Copy Services Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_17" Source="[SourcesDirectory &amp; &quot;\BPM Resources - Test\Services&quot;]" />
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Sources&quot;]" DisplayName="Copy Sources Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_18" Source="[SourcesDirectory &amp; &quot;\BPM Resources - Test\Sources&quot;]" />
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Plugins&quot;]" DisplayName="Copy Plugins Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_19" Source="[SourcesDirectory &amp; &quot;\BPM Resources - Test\Plugins&quot;]" />
                          <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\themes&quot;]" DisplayName="Copy themes Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_20" Source="[SourcesDirectory &amp; &quot;\BPM Resources - Test\themes&quot;]" />
                        </Sequence>
                      </If.Else>
                    </If>
                    <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Webs&quot;]" DisplayName="Copy Webs Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_6" Source="[SourcesDirectory &amp; &quot;\Dev2.Server\bin\Debug\Webs&quot;]" />
                    <InvokeMethod DisplayName="Write ChangesetID to disk" sap2010:WorkflowViewState.IdRef="InvokeMethod_30" MethodName="WriteAllText" TargetType="si:File">
                      <InArgument x:TypeArguments="x:String">[BinariesDirectory &amp; "\ForChangesetID.txt"]</InArgument>
                      <InArgument x:TypeArguments="x:String">[ChangeSet.ChangesetId.ToString]</InArgument>
                    </InvokeMethod>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
                      <mtbwa:CopyDirectory Destination="C:\Binaries" DisplayName="Create C:\Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_15" Source="[BinariesDirectory]" />
                      <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_13">
                        <TryCatch.Try>
                          <InvokeMethod DisplayName="Delete Zip" sap2010:WorkflowViewState.IdRef="InvokeMethod_28" MethodName="Delete" TargetType="si:File">
                            <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\DevMergeStaging.zip"]</InArgument>
                          </InvokeMethod>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="si:IOException" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                            <ActivityAction x:TypeArguments="si:IOException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <mtbwa:InvokeProcess Arguments="[&quot; -9 -r &quot;&quot;&quot; &amp; BuildDirectory &amp; &quot;\DevMergeStaging&quot; &amp; &quot;&quot;&quot; &quot;&quot;C:\Binaries&quot;&quot;&quot;]" DisplayName="Zip C:\Binaries" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\zip.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_33">
                        <mtbwa:InvokeProcess.ErrorDataReceived>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </mtbwa:InvokeProcess.ErrorDataReceived>
                        <mtbwa:InvokeProcess.OutputDataReceived>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </mtbwa:InvokeProcess.OutputDataReceived>
                      </mtbwa:InvokeProcess>
                      <mtbwa:InvokeProcess DisplayName="Clean Local Staging" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\clean - Local Staging.bat&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_34">
                        <mtbwa:InvokeProcess.ErrorDataReceived>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </mtbwa:InvokeProcess.ErrorDataReceived>
                        <mtbwa:InvokeProcess.OutputDataReceived>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                            </ActivityAction.Argument>
                            <mtbwa:WriteBuildMessage DisplayName="WriteOutput" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_12" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                          </ActivityAction>
                        </mtbwa:InvokeProcess.OutputDataReceived>
                      </mtbwa:InvokeProcess>
                      <InvokeMethod DisplayName="Create Staging Directory" sap2010:WorkflowViewState.IdRef="InvokeMethod_29" MethodName="CreateDirectory" TargetType="si:Directory">
                        <InArgument x:TypeArguments="x:String">[TestRunStagingDir]</InArgument>
                      </InvokeMethod>
                    </Sequence>
                    <InvokeMethod DisplayName="ChangeSet Specific Stage" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Copy" TargetType="si:File">
                      <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\DevMergeStaging.zip"]</InArgument>
                      <InArgument x:TypeArguments="x:String">["\\rsaklfsvrtfsbld\Automated Builds\TestRunStaging\" &amp; SpecifiedChangesetID &amp; ".zip"]</InArgument>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="Delete Zip" sap2010:WorkflowViewState.IdRef="InvokeMethod_19" MethodName="Delete" TargetType="si:File">
                      <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\DevMergeStaging.zip"]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                  <If Condition="[(BranchID = &quot;DEV&quot;) Or (BranchID = &quot;Release&quot;)]" DisplayName="If Can Queue Test Builds" sap2010:WorkflowViewState.IdRef="If_56">
                    <If.Then>
                      <mtbwa:InvokeProcess Arguments="[&quot;&quot;&quot;http://rsaklfsvrgendev:8080/tfs/&quot;&quot; &quot;&quot;DEV2 SCRUM Project&quot;&quot; &quot;&quot;CI Test Run - &quot; &amp; BranchID &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; BuildDetail.RequestedBy &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; SpecifiedChangesetID &amp; &quot;&quot;&quot;&quot;]" DisplayName="Queue CI Test Run" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\QueueBuild\QueueCIBuild.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_35" Result="[TestRunBuildID]">
                        <mtbwa:InvokeProcess.ErrorDataReceived>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </mtbwa:InvokeProcess.ErrorDataReceived>
                        <mtbwa:InvokeProcess.OutputDataReceived>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </mtbwa:InvokeProcess.OutputDataReceived>
                      </mtbwa:InvokeProcess>
                    </If.Then>
                    <If.Else>
                      <mtbwa:WriteBuildWarning sap2010:WorkflowViewState.IdRef="WriteBuildWarning_5" Message="No Test Builds Will Be Queued for this definition, to enable this feature edit the build definition process parameters." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[Not StagingDir = &quot;&quot;]" DisplayName="If can do dev merge staging" sap2010:WorkflowViewState.IdRef="If_65">
              <If.Then>
                <Sequence DisplayName="Dev Merge Staging" sap2010:WorkflowViewState.IdRef="Sequence_79">
                  <mtbwa:InvokeProcess DisplayName="Clear Staging" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\&quot; + CleaningUtilFileName]" sap2010:WorkflowViewState.IdRef="InvokeProcess_15">
                    <mtbwa:InvokeProcess.ErrorDataReceived>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                        </ActivityAction.Argument>
                      </ActivityAction>
                    </mtbwa:InvokeProcess.ErrorDataReceived>
                    <mtbwa:InvokeProcess.OutputDataReceived>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                        </ActivityAction.Argument>
                      </ActivityAction>
                    </mtbwa:InvokeProcess.OutputDataReceived>
                  </mtbwa:InvokeProcess>
                  <mtbwa:CopyDirectory Destination="[StagingDir]" DisplayName="Do DevMergeStaging" sap2010:WorkflowViewState.IdRef="CopyDirectory_12" Source="[BinariesDirectory]" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage DisplayName="Inform Developer of Status" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_10" Message="******** Gated Test Run Failed, Check-in Aborted. ********" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </If.Else>
      </If>
      <If Condition="[DeleteWorkspaceAtTheEnd]" DisplayName="If Can Delete Workspace At The End" sap2010:WorkflowViewState.IdRef="If_54">
        <If.Then>
          <Sequence DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="Sequence_50">
            <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_5" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
            <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_6" mtbwt:BuildTrackingParticipant.Importance="Low" />
            <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="Delete Test Results Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_7" mtbwt:BuildTrackingParticipant.Importance="Low" Recursive="[True]" />
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_8" mtbwt:BuildTrackingParticipant.Importance="Low" />
          </Sequence>
        </If.Then>
      </If>
      <mtbwa:WriteBuildMessage DisplayName="Completed Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_6" Message="------------------- Build DONE -------------------" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
    </mtbwa:AgentScope>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetBuildDetail_1" sap:VirtualizedContainerService.HintSize="2833,22" />
      <sap2010:ViewStateData Id="UpdateBuildNumber_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_13" sap:VirtualizedContainerService.HintSize="464,146" />
      <sap2010:ViewStateData Id="Assign`1_27" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetBuildProperties_16" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_105" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_96" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Assign`1_28" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetBuildProperties_17" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_97" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="2833,1062">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetBuildAgent_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetBuildDirectory_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_25" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="WriteBuildWarning_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign`1_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="2811,1100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeleteDirectory_5" sap:VirtualizedContainerService.HintSize="687,22" />
      <sap2010:ViewStateData Id="DeleteWorkspace_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CreateWorkspace_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetWorkspace_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CreateWorkspace_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateWorkspace_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="440,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_53" sap:VirtualizedContainerService.HintSize="687,559" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="687,60" />
      <sap2010:ViewStateData Id="RetryRequests_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SyncWorkspace_2" sap:VirtualizedContainerService.HintSize="234,157" />
      <sap2010:ViewStateData Id="WriteBuildError_4" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="DeleteWorkspace_8" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_11" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CreateWorkspace_6" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="RetryRequests_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SyncWorkspace_3" sap:VirtualizedContainerService.HintSize="234,157" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="256,529">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="687,384" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="2811,1269">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CopyDirectory_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="2811,497" />
      <sap2010:ViewStateData Id="RevertWorkspace_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_7" sap:VirtualizedContainerService.HintSize="464,146" />
      <sap2010:ViewStateData Id="CopyDirectory_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_37" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="486,518">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ConvertWorkspaceItem_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MSBuild_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetBuildProperties_9" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="OpenWorkItem_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_9" sap:VirtualizedContainerService.HintSize="222,146" />
      <sap2010:ViewStateData Id="If_58" sap:VirtualizedContainerService.HintSize="464,294" />
      <sap2010:ViewStateData Id="GetApprovedRequests_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="RetryRequests_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="RevertWorkspace_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_10" sap:VirtualizedContainerService.HintSize="464,146" />
      <sap2010:ViewStateData Id="Rethrow_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="486,809">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="418,435" />
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="1602,583" />
      <sap2010:ViewStateData Id="Assign`1_26" sap:VirtualizedContainerService.HintSize="1070,22" />
      <sap2010:ViewStateData Id="FindMatchingFiles_1" sap:VirtualizedContainerService.HintSize="1030,22" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="1030,60" />
      <sap2010:ViewStateData Id="DownloadFile_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ConvertWorkspaceItem_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MSTest_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_103" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MSTest_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_93" sap:VirtualizedContainerService.HintSize="883,418" />
      <sap2010:ViewStateData Id="InvokeMethod_35" sap:VirtualizedContainerService.HintSize="218,134" />
      <sap2010:ViewStateData Id="If_95" sap:VirtualizedContainerService.HintSize="464,282" />
      <sap2010:ViewStateData Id="ForEach`1_14" sap:VirtualizedContainerService.HintSize="883,430" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="883,60" />
      <sap2010:ViewStateData Id="InvokeMethod_36" sap:VirtualizedContainerService.HintSize="534,134" />
      <sap2010:ViewStateData Id="InvokeMethod_37" sap:VirtualizedContainerService.HintSize="218,134" />
      <sap2010:ViewStateData Id="ForEach`1_16" sap:VirtualizedContainerService.HintSize="287,282" />
      <sap2010:ViewStateData Id="Sequence_108" sap:VirtualizedContainerService.HintSize="309,406">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_98" sap:VirtualizedContainerService.HintSize="534,554" />
      <sap2010:ViewStateData Id="Sequence_109" sap:VirtualizedContainerService.HintSize="556,852">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_99" sap:VirtualizedContainerService.HintSize="883,1000" />
      <sap2010:ViewStateData Id="InvokeProcess_36" sap:VirtualizedContainerService.HintSize="883,264" />
      <sap2010:ViewStateData Id="Sequence_104" sap:VirtualizedContainerService.HintSize="905,2456">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_85" sap:VirtualizedContainerService.HintSize="1030,2604" />
      <sap2010:ViewStateData Id="Sequence_97" sap:VirtualizedContainerService.HintSize="1052,2890">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildError_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_86" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_15" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetApprovedRequests_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="486,453">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_13" sap:VirtualizedContainerService.HintSize="1056,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="1070,3117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_99" sap:VirtualizedContainerService.HintSize="1092,3303">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_2" sap:VirtualizedContainerService.HintSize="1122,3451" />
      <sap2010:ViewStateData Id="WriteBuildWarning_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_87" sap:VirtualizedContainerService.HintSize="1347,3599" />
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="1377,3747" />
      <sap2010:ViewStateData Id="WriteBuildWarning_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_82" sap:VirtualizedContainerService.HintSize="1602,3895" />
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="1624,4642">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="1654,4790" />
      <sap2010:ViewStateData Id="SetBuildProperties_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_59" sap:VirtualizedContainerService.HintSize="1654,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_60" sap:VirtualizedContainerService.HintSize="1654,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_61" sap:VirtualizedContainerService.HintSize="1265,208" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="1676,5658">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssociateChangesetsAndWorkItems_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_11" sap:VirtualizedContainerService.HintSize="222,146" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="244,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_62" sap:VirtualizedContainerService.HintSize="469,418" />
      <sap2010:ViewStateData Id="If_63" sap:VirtualizedContainerService.HintSize="594,4214" />
      <sap2010:ViewStateData Id="Parallel_5" sap:VirtualizedContainerService.HintSize="2424,5704" />
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="2811,5909" />
      <sap2010:ViewStateData Id="FindMatchingFiles_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetImpactedTests_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_102" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_89" sap:VirtualizedContainerService.HintSize="464,1788" />
      <sap2010:ViewStateData Id="FindMatchingFiles_3" sap:VirtualizedContainerService.HintSize="609,22" />
      <sap2010:ViewStateData Id="IndexSources_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteBuildError_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="If_90" sap:VirtualizedContainerService.HintSize="609,435" />
      <sap2010:ViewStateData Id="PublishSymbols_1" sap:VirtualizedContainerService.HintSize="444,22" />
      <sap2010:ViewStateData Id="InvokeMethod_34" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Catch`1_16" sap:VirtualizedContainerService.HintSize="400,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="414,270" />
      <sap2010:ViewStateData Id="ForEach`1_15" sap:VirtualizedContainerService.HintSize="444,418" />
      <sap2010:ViewStateData Id="SharedResourceScope_1" sap:VirtualizedContainerService.HintSize="466,604" />
      <sap2010:ViewStateData Id="WriteBuildError_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="470,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="484,831" />
      <sap2010:ViewStateData Id="If_91" sap:VirtualizedContainerService.HintSize="609,979" />
      <sap2010:ViewStateData Id="InvokeForReason_12" sap:VirtualizedContainerService.HintSize="631,1640" />
      <sap2010:ViewStateData Id="If_92" sap:VirtualizedContainerService.HintSize="756,1788" />
      <sap2010:ViewStateData Id="Parallel_6" sap:VirtualizedContainerService.HintSize="2811,1834" />
      <sap2010:ViewStateData Id="CheckInGatedChanges_1" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_55" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="531,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="CreateDirectory_5" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="CreateDirectory_3" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="CopyDirectory_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_16" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_100" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CopyDirectory_17" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_18" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_19" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_20" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_101" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_88" sap:VirtualizedContainerService.HintSize="469,480" />
      <sap2010:ViewStateData Id="CopyDirectory_6" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="InvokeMethod_30" sap:VirtualizedContainerService.HintSize="469,132" />
      <sap2010:ViewStateData Id="CopyDirectory_15" sap:VirtualizedContainerService.HintSize="418,22" />
      <sap2010:ViewStateData Id="InvokeMethod_28" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Catch`1_12" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="418,359" />
      <sap2010:ViewStateData Id="InvokeProcess_33" sap:VirtualizedContainerService.HintSize="418,264" />
      <sap2010:ViewStateData Id="WriteBuildMessage_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_34" sap:VirtualizedContainerService.HintSize="418,271" />
      <sap2010:ViewStateData Id="InvokeMethod_29" sap:VirtualizedContainerService.HintSize="418,134" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="469,1334">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_8" sap:VirtualizedContainerService.HintSize="469,134" />
      <sap2010:ViewStateData Id="InvokeMethod_19" sap:VirtualizedContainerService.HintSize="469,134" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="531,2870">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeProcess_35" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="WriteBuildWarning_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_56" sap:VirtualizedContainerService.HintSize="531,428" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="553,3896">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_64" sap:VirtualizedContainerService.HintSize="678,4044" />
      <sap2010:ViewStateData Id="InvokeProcess_15" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="CopyDirectory_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="222,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_65" sap:VirtualizedContainerService.HintSize="678,598" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="700,4806">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildMessage_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="2811,4954" />
      <sap2010:ViewStateData Id="DeleteWorkspace_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_54" sap:VirtualizedContainerService.HintSize="2811,480" />
      <sap2010:ViewStateData Id="WriteBuildMessage_6" sap:VirtualizedContainerService.HintSize="2811,22" />
      <sap2010:ViewStateData Id="AgentScope_1" sap:VirtualizedContainerService.HintSize="2833,16469" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="2855,17757">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TfsBuild.Process_1" sap:VirtualizedContainerService.HintSize="2895,17837" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>