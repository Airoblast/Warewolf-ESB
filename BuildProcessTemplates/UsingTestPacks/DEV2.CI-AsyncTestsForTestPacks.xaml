<Activity mc:Ignorable="sads sap sap2010" x:Class="TfsBuild.Process" this:Process.BuildSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.BuildSettings()]" this:Process.TestSpecs="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec(&quot;**\*test*.dll&quot;))]" this:Process.BuildNumberFormat="[&quot;$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)&quot;]" this:Process.SolutionSpecificBuildOutputs="[False]" this:Process.CleanWorkspace="[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" this:Process.RunCodeAnalysis="[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]" this:Process.SourceAndSymbolServerSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]" this:Process.AgentSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]" this:Process.AssociateChangesetsAndWorkItems="[True]" this:Process.CreateWorkItem="[True]" this:Process.MSBuildPlatform="[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]" this:Process.MSBuildMultiProc="[True]" this:Process.PerformTestImpactAnalysis="[True]" this:Process.CreateLabel="[True]" this:Process.DisableTests="[False]" this:Process.Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]" this:Process.SupportedReasons="All" this:Process.BuildProcessVersion="11.0" this:Process.WorkspaceNameSuffix="TestRunWorkspace" this:Process.DeleteWorkspaceAtTheEnd="True" this:Process.BranchID="DEV" this:Process.TestResultsStagingDirectory="\\RSAKLFSVRGENDEV\TestResultFiles" this:Process.DoResultDeployment="True" this:Process.BuildStagingDirectory="\\rsaklfsvrtfsbld\Automated Builds\TestRunStaging" this:Process.UseTestPack="True" this:Process.StartServer="True" this:Process.StartStudio="True"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common"
 xmlns:mt1="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Client"
 xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client"
 xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtc="clr-namespace:Microsoft.TeamFoundation.Client;assembly=Microsoft.TeamFoundation.Client"
 xmlns:mtlwa="clr-namespace:Microsoft.TeamFoundation.Lab.Workflow.Activities;assembly=Microsoft.TeamFoundation.Lab.Workflow.Activities"
 xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration"
 xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
 xmlns:mtvc1="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualStudio.VisualBasic.LanguageService"
 xmlns:mv1="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.LanguageService"
 xmlns:mv2="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.Editor"
 xmlns:mv3="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic"
 xmlns:mv4="clr-namespace:Microsoft.VisualBasic;assembly=System"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:mvc="clr-namespace:Microsoft.VisualBasic.CompilerServices;assembly=Microsoft.VisualBasic"
 xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:s1="clr-namespace:System;assembly=System"
 xmlns:s2="clr-namespace:System;assembly=System.Core"
 xmlns:s3="clr-namespace:System;assembly=System.ComponentModel.Composition"
 xmlns:s4="clr-namespace:System;assembly=System.ServiceModel"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.Core"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel"
 xmlns:sd="clr-namespace:System.Diagnostics;assembly=System"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:si1="clr-namespace:System.IO;assembly=System.ServiceModel"
 xmlns:si2="clr-namespace:System.IO;assembly=WindowsBase"
 xmlns:si3="clr-namespace:System.IO;assembly=System.Core"
 xmlns:si4="clr-namespace:System.IO;assembly=System"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core"
 xmlns:sw="clr-namespace:System.Web;assembly=System.Web"
 xmlns:sw1="clr-namespace:System.Web;assembly=System"
 xmlns:this="clr-namespace:TfsBuild"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BuildSettings" Type="InArgument(mtbwa:BuildSettings)" />
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)" />
    <x:Property Name="SolutionSpecificBuildOutputs" Type="InArgument(x:Boolean)" />
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)" />
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)" />
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)" />
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)" />
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)" />
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)" />
    <x:Property Name="MSBuildMultiProc" Type="InArgument(x:Boolean)" />
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)" />
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)" />
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)" />
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection" />
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason" />
    <x:Property Name="BuildProcessVersion" Type="x:String" />
    <x:Property Name="WorkspaceNameSuffix" Type="InArgument(x:String)" />
    <x:Property Name="DeleteWorkspaceAtTheEnd" Type="InArgument(x:Boolean)" />
    <x:Property Name="BranchID" Type="InArgument(x:String)" />
    <x:Property Name="TestResultsStagingDirectory" Type="InArgument(x:String)" />
    <x:Property Name="DoResultDeployment" Type="InArgument(x:Boolean)" />
    <x:Property Name="SpecifiedChangeSet" Type="InArgument(x:String)" />
    <x:Property Name="BuildStagingDirectory" Type="InArgument(x:String)" />
    <x:Property Name="TestPackID" Type="InArgument(x:String)" />
    <x:Property Name="UseTestPack" Type="InArgument(x:Boolean)" />
    <x:Property Name="MachineName" Type="InArgument(x:String)" />
    <x:Property Name="TestNamesList" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="StartServer" Type="InArgument(x:Boolean)" />
    <x:Property Name="StartStudio" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.MSBuildArguments>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata Category="#300 Advanced" Description="Enable MSBuid Multi-proc to build your solutions' projects in parallel, when possible, using all available processors on the build server." DisplayName="MSBuild Multi-Proc" ParameterName="MSBuildMultiProc" />
      <mtbw:ProcessParameterMetadata Category="#300 Advanced" Description="True will put build outputs into folders based on the solution name. False will put all build outputs into the same folder." DisplayName="Solution Specific Build Outputs" ParameterName="SolutionSpecificBuildOutputs" />
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <sap2010:WorkflowViewState.IdRef>TfsBuild.Process_1</sap2010:WorkflowViewState.IdRef>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence DisplayName="Unit, Integration, Acceptance and UI Test Run" sap2010:WorkflowViewState.IdRef="Sequence_48">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail" />
      <Variable x:TypeArguments="x:String" Name="BuildDirectory" />
      <Variable x:TypeArguments="x:String" Name="BinariesDirectory" />
      <Variable x:TypeArguments="x:String" Name="SourcesDirectory" />
      <Variable x:TypeArguments="x:String" Name="WorkspaceName" />
      <Variable x:TypeArguments="x:String" Name="DropLocation" />
      <Variable x:TypeArguments="x:String" Name="BuildNumber" />
    </Sequence.Variables>
    <mtbwa:GetBuildDetail DisplayName="Get the Build" sap2010:WorkflowViewState.IdRef="GetBuildDetail_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDetail]" />
    <mtbwa:WriteBuildMessage DisplayName="Write Requested By" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_2" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;RequestedBy: '&quot; + BuildDetail.RequestedBy + &quot;'&quot;]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
    <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat.Replace(&quot;$(BuildDefinitionName)&quot;, &quot;$(BuildDefinitionName)_For Test Pack &quot; &amp; TestPackID)]" DisplayName="Update Build Number" sap2010:WorkflowViewState.IdRef="UpdateBuildNumber_1" Result="[BuildNumber]" />
    <Sequence DisplayName="Update Drop Location" sap2010:WorkflowViewState.IdRef="Sequence_3" mtbwt:BuildTrackingParticipant.Importance="Low">
      <If Condition="[(Not String.IsNullOrEmpty(BuildDetail.DropLocationRoot)) AndAlso (BuildDetail.Reason And Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered) = BuildDetail.Reason]" DisplayName="If Build Reason is Triggered" sap2010:WorkflowViewState.IdRef="If_1" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1" mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Assign`1_1" mtbwt:BuildTrackingParticipant.Importance="None" To="[DropLocation]" Value="[BuildDropProvider.CombinePaths(BuildDetail.DropLocationRoot, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" />
            <mtbwa:SetBuildProperties DisplayName="Set Drop Location" DropLocation="[DropLocation]" sap2010:WorkflowViewState.IdRef="SetBuildProperties_1" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
          </Sequence>
        </If.Then>
      </If>
      <If Condition="[(Not String.IsNullOrEmpty(PrivateDropLocation)) AndAlso BuildDetail.Reason = Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset]" DisplayName="If Build Reason is ValidateShelveset" sap2010:WorkflowViewState.IdRef="If_2" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2" mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Assign`1_2" mtbwt:BuildTrackingParticipant.Importance="None" To="[DropLocation]" Value="[BuildDropProvider.CombinePaths(PrivateDropLocation, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" />
            <mtbwa:SetBuildProperties DisplayName="Set Drop Location for Private Build" DropLocation="[DropLocation]" sap2010:WorkflowViewState.IdRef="SetBuildProperties_2" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <If Condition="[Not (MachineName Is Nothing)]" DisplayName="If there is a machine name defined" sap2010:WorkflowViewState.IdRef="If_88">
      <If.Then>
        <Assign DisplayName="Assign to agent machine name" sap2010:WorkflowViewState.IdRef="Assign_21">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AgentSettings.Name]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[MachineName]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <mtbwa:AgentScope DataToIgnore="" DisplayName="Run On Agent" sap2010:WorkflowViewState.IdRef="AgentScope_1" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent" />
        <Variable x:TypeArguments="mtvc:Workspace" Name="Workspace" />
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName" />
        <Variable x:TypeArguments="x:String" Name="TestResultsStagingDirectoryWithNewFileName" />
        <Variable x:TypeArguments="x:String" Name="logFileDropLocation" />
        <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="TestNames" />
        <Variable x:TypeArguments="scg:List(x:String)" Name="assemblyNames" />
      </mtbwa:AgentScope.Variables>
      <Sequence DisplayName="Initialize Variables" sap2010:WorkflowViewState.IdRef="Sequence_5" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:GetBuildAgent DisplayName="Get the Agent" sap2010:WorkflowViewState.IdRef="GetBuildAgent_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildAgent]" />
        <mtbwa:GetBuildDirectory DisplayName="Get the Build Directory" sap2010:WorkflowViewState.IdRef="GetBuildDirectory_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDirectory]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Workspace Name" sap2010:WorkflowViewState.IdRef="Assign`1_3" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[String.Format(&quot;{0}_{1}&quot;, BuildAgent.ServiceHost.Name, WorkspaceNameSuffix)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Sources Directory" sap2010:WorkflowViewState.IdRef="Assign`1_4" mtbwt:BuildTrackingParticipant.Importance="Low" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\Sources&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Binaries Directory" sap2010:WorkflowViewState.IdRef="Assign`1_5" mtbwt:BuildTrackingParticipant.Importance="Low" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\Binaries&quot;, BuildDirectory)]" />
        <If Condition="[Not BuildSettings.HasPlatformConfigurations]" DisplayName="If Not BuildSettings.HasPlatformConfigurations" sap2010:WorkflowViewState.IdRef="If_3" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <AddToCollection x:TypeArguments="mtbwa:PlatformConfiguration" Collection="[BuildSettings.PlatformConfigurations]" DisplayName="Use Default Platform Configuration" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" mtbwt:BuildTrackingParticipant.Importance="Low" Item="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" />
          </If.Then>
        </If>
        <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="If WorkspaceName &gt; MaxSize" sap2010:WorkflowViewState.IdRef="If_4" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4" mtbwt:BuildTrackingParticipant.Importance="None">
              <mtbwa:WriteBuildWarning DisplayName="Write Workspace Size Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_1" Message="[String.Format(&quot;The workspace name '{0}' exceeds the maximum allowed limit of '{1}' characters. Truncating it to match the maximum limit.&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
              <Assign x:TypeArguments="x:String" DisplayName="Truncate WorkspaceName to MaxSize" sap2010:WorkflowViewState.IdRef="Assign`1_7" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Initialize Workspace" sap2010:WorkflowViewState.IdRef="Sequence_43" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_7" mtbwt:BuildTrackingParticipant.Importance="Low" />
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" sap2010:WorkflowViewState.IdRef="If_46" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Delete Workspace and Sources Directory" sap2010:WorkflowViewState.IdRef="Sequence_42" mtbwt:BuildTrackingParticipant.Importance="Low">
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_3" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_8" mtbwt:BuildTrackingParticipant.Importance="Low" />
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_1" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Delete Workspace and Sources Directory" mtbwt:BuildTrackingParticipant.Importance="Low">
              <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download Unit Test Results Cleaning Util" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\UnitTest\clean - TestResultsInEnvironment.bat&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/Cleaning Utils/UnitTest/clean - TestResultsInEnvironment.bat" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" sap2010:WorkflowViewState.IdRef="DownloadFile_10" />
              <mtbwa:InvokeProcess DisplayName="Clean UnitTestResults" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\UnitTest\clean - TestResultsInEnvironment.bat&quot;]">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
                <sap2010:WorkflowViewState.IdRef>InvokeProcess_51</sap2010:WorkflowViewState.IdRef>
              </mtbwa:InvokeProcess>
              <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download Integration Test Results Cleaning Util" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\IntegrationRun\clean - TestResultsInEnvironment.bat&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/Cleaning Utils/IntegrationRun/clean - TestResultsInEnvironment.bat" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" sap2010:WorkflowViewState.IdRef="DownloadFile_11" />
              <mtbwa:InvokeProcess DisplayName="Clean IntegrationTestResults" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\IntegrationRun\clean - TestResultsInEnvironment.bat&quot;]">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
                <sap2010:WorkflowViewState.IdRef>InvokeProcess_52</sap2010:WorkflowViewState.IdRef>
              </mtbwa:InvokeProcess>
              <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download Acceptance Testing Results Cleaning Util" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\Acceptance\clean - TestResultsInEnvironment.bat&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/Cleaning Utils/Acceptance/clean - TestResultsInEnvironment.bat" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" sap2010:WorkflowViewState.IdRef="DownloadFile_12" />
              <mtbwa:InvokeProcess DisplayName="Clean AcceptanceTestResults" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\Acceptance\clean - TestResultsInEnvironment.bat&quot;]">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
                <sap2010:WorkflowViewState.IdRef>InvokeProcess_53</sap2010:WorkflowViewState.IdRef>
              </mtbwa:InvokeProcess>
              <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download UI Test Results Cleaning Util" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\CodedUI\clean - TestResultsInEnvironment.bat&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/Cleaning Utils/CodedUI/clean - TestResultsInEnvironment.bat" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" sap2010:WorkflowViewState.IdRef="DownloadFile_13" />
              <mtbwa:InvokeProcess DisplayName="Clean UITestResults" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\CodedUI\clean - TestResultsInEnvironment.bat&quot;]">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
                <sap2010:WorkflowViewState.IdRef>InvokeProcess_54</sap2010:WorkflowViewState.IdRef>
              </mtbwa:InvokeProcess>
              <sap2010:WorkflowViewState.IdRef>Sequence_136</sap2010:WorkflowViewState.IdRef>
            </Sequence>
          </If.Then>
          <sap2010:WorkflowViewState.IdRef>If_109</sap2010:WorkflowViewState.IdRef>
        </If>
        <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download Kill ENV util" sap2010:WorkflowViewState.IdRef="DownloadFile_4" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\CodedUI\exit.bat&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/CodedUI/exit.bat" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" />
        <mtbwa:InvokeProcess DisplayName="Ensure ENV Killed" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\CodedUI\exit.bat&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_18">
          <mtbwa:InvokeProcess.ErrorDataReceived>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
              </ActivityAction.Argument>
              <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_28" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[errOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            </ActivityAction>
          </mtbwa:InvokeProcess.ErrorDataReceived>
          <mtbwa:InvokeProcess.OutputDataReceived>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
              </ActivityAction.Argument>
              <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_29" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            </ActivityAction>
          </mtbwa:InvokeProcess.OutputDataReceived>
        </mtbwa:InvokeProcess>
      </Sequence>
      <If Condition="[CreateLabel]" DisplayName="If CreateLabel" sap2010:WorkflowViewState.IdRef="If_10" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <mtbwa:InvokeForReason DisplayName="Create and Set Label for non-Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_3" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
            <mtbwa:LabelWorkspace Comment="[&quot;Label Created by Team Build&quot;]" DisplayName="Create Label" sap2010:WorkflowViewState.IdRef="LabelWorkspace_1" Name="[LabelName]" Scope="[String.Format(&quot;$/{0}&quot;, BuildDetail.BuildDefinition.TeamProject)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Workspace="[Workspace]" />
            <mtbwa:SetBuildProperties DisplayName="Set Label on BuildDetail" sap2010:WorkflowViewState.IdRef="SetBuildProperties_3" mtbwt:BuildTrackingParticipant.Importance="Low" LabelName="[String.Format(&quot;{0}@$/{1}&quot;, LabelName, BuildDetail.BuildDefinition.TeamProject)]" PropertiesToSet="LabelName" />
          </mtbwa:InvokeForReason>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_1" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Not Labeling sources" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </If.Else>
      </If>
      <If Condition="[SpecifiedChangeSet Is Nothing]" DisplayName="If No Changeset Specified" sap2010:WorkflowViewState.IdRef="If_63">
        <If.Then>
          <Sequence DisplayName="Build Unit, Integration and CodedUI and start server" sap2010:WorkflowViewState.IdRef="Sequence_87">
            <mtbwa:MSBuild DisplayName="Build" sap2010:WorkflowViewState.IdRef="MSBuild_3" MaxProcesses="2" OutDir="C:\Builds\Binaries" Project="[SourcesDirectory &amp; &quot;\AllProjects.sln&quot;]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <mtbwa:CreateDirectory Directory="C:\Builds\Binaries\Services" DisplayName="Create Services Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" />
            <mtbwa:CreateDirectory Directory="C:\Builds\Binaries\Sources" DisplayName="Create Sources Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" />
            <mtbwa:CreateDirectory Directory="C:\Builds\Binaries\Webs" DisplayName="Create Webs Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" />
            <mtbwa:CreateDirectory Directory="C:\Builds\Binaries\Plugins" DisplayName="Create Plugins Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" />
            <mtbwa:CopyDirectory Destination="C:\Builds\Binaries\Services" DisplayName="Copy Services Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_1" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Services&quot;]" />
            <mtbwa:CopyDirectory Destination="C:\Builds\Binaries\Sources" DisplayName="Copy Sources Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_2" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Sources&quot;]" />
            <mtbwa:CopyDirectory Destination="C:\Builds\Binaries\Webs" DisplayName="Copy Webs Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_3" Source="[SourcesDirectory &amp; &quot;\Dev2.Server\bin\Debug\Webs&quot;]" />
            <mtbwa:CopyDirectory Destination="C:\Builds\Binaries\Plugins" DisplayName="Copy Plugins Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_4" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Plugins&quot;]" />
            <mtbwa:MSBuild DisplayName="Build Studio" sap2010:WorkflowViewState.IdRef="MSBuild_4" MaxProcesses="2" OutDir="C:\Builds\Binaries" Project="[SourcesDirectory &amp; &quot;\Studio.sln&quot;]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <mtbwa:CopyDirectory Destination="[BuildDirectory]" DisplayName="Copy To Unit Test Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_5" Source="C:\Builds\Binaries" />
            <InvokeMethod DisplayName="Start Server" sap2010:WorkflowViewState.IdRef="InvokeMethod_29" MethodName="Start" TargetType="sd:Process">
              <InArgument x:TypeArguments="x:String">C:\Builds\Binaries\Warewolf Server.exe</InArgument>
            </InvokeMethod>
            <Delay DisplayName="Wait for Server Start" Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <InvokeMethod DisplayName="Start Studio" sap2010:WorkflowViewState.IdRef="InvokeMethod_39" MethodName="Start" TargetType="sd:Process">
              <InArgument x:TypeArguments="x:String">C:\Builds\Binaries\Warewolf Studio.exe</InArgument>
            </InvokeMethod>
            <Delay DisplayName="Wait for Studio Start" Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_4" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
            <Sequence DisplayName="Get Binaries and Start Server and Studio" sap2010:WorkflowViewState.IdRef="Sequence_94">
              <TryCatch DisplayName="Try Download Build" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                <TryCatch.Try>
                  <InvokeMethod DisplayName="Get Zipped Build" sap2010:WorkflowViewState.IdRef="InvokeMethod_34" MethodName="Copy" TargetType="si:File">
                    <InArgument x:TypeArguments="x:String">["\\rsaklfsvrtfsbld\Automated Builds\TestRunStaging\" &amp; SpecifiedChangeSet &amp; ".zip"]</InArgument>
                    <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\" &amp; SpecifiedChangeSet &amp; ".zip"]</InArgument>
                  </InvokeMethod>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="si:IOException" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                    <ActivityAction x:TypeArguments="si:IOException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
                      </ActivityAction.Argument>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download clear unzip location util" sap2010:WorkflowViewState.IdRef="DownloadFile_5" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\All Async\clean.bat&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/Cleaning Utils/All Async/clean.bat" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" />
              <mtbwa:InvokeProcess DisplayName="Clear Unzip Location" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\All Async\clean.bat&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_39">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                    <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_31" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[errOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                    <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_32" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
              </mtbwa:InvokeProcess>
              <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download unzip util" sap2010:WorkflowViewState.IdRef="DownloadFile_6" LocalPath="[SourcesDirectory &amp; &quot;\BuildUtils\unzip.exe&quot;]" ServerPath="$/DEV2 SCRUM Project/BuildProcessTemplates/Utils/unzip.exe" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" />
              <mtbwa:InvokeProcess Arguments="[&quot;&quot;&quot;&quot; &amp; BuildDirectory &amp; &quot;\&quot; &amp; SpecifiedChangeSet &amp; &quot;.zip&quot; &amp; &quot;&quot;&quot; -d &quot;&quot;C:\Builds&quot;&quot;&quot;]" DisplayName="Unzip Build" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\unzip.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_40">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_92">
                      <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_33" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[errOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                      <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_7" Reason="Cannot download the build from staging" />
                    </Sequence>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
              </mtbwa:InvokeProcess>
              <mtbwa:InvokeProcess Arguments="[&quot;&quot;&quot;&quot; &amp; BuildDirectory &amp; &quot;\&quot; &amp; SpecifiedChangeSet &amp; &quot;.zip&quot; &amp; &quot;&quot;&quot; -d &quot;&quot;&quot; &amp; BuildDirectory &amp; &quot;&quot;&quot;&quot;]" DisplayName="Unzip Build" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\unzip.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_41">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_93">
                      <InvokeMethod DisplayName="Delete Zipped Build" sap2010:WorkflowViewState.IdRef="InvokeMethod_35" MethodName="Delete" TargetType="si:File">
                        <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\" &amp; SpecifiedChangeSet &amp; ".zip"]</InArgument>
                      </InvokeMethod>
                      <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_8" Reason="Cannot download the build from staging" />
                    </Sequence>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
              </mtbwa:InvokeProcess>
              <InvokeMethod DisplayName="Delete Zipped Build" sap2010:WorkflowViewState.IdRef="InvokeMethod_36" MethodName="Delete" TargetType="si:File">
                <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\" &amp; SpecifiedChangeSet &amp; ".zip"]</InArgument>
              </InvokeMethod>
              <If Condition="[StartServer]" DisplayName="If can start server" sap2010:WorkflowViewState.IdRef="If_105">
                <If.Then>
                  <Sequence DisplayName="Start and wait" sap2010:WorkflowViewState.IdRef="Sequence_133">
                    <InvokeMethod DisplayName="Start Server" sap2010:WorkflowViewState.IdRef="InvokeMethod_37" MethodName="Start" TargetType="sd:Process">
                      <InArgument x:TypeArguments="x:String">C:\Builds\Binaries\Warewolf Server.exe</InArgument>
                    </InvokeMethod>
                    <Delay DisplayName="Wait for Server Start" Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_3" />
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[StartStudio]" DisplayName="If can start studio" sap2010:WorkflowViewState.IdRef="If_106">
                <If.Then>
                  <Sequence DisplayName="Start and wait" sap2010:WorkflowViewState.IdRef="Sequence_134">
                    <InvokeMethod DisplayName="Start Studio" sap2010:WorkflowViewState.IdRef="InvokeMethod_43" MethodName="Start" TargetType="sd:Process">
                      <InArgument x:TypeArguments="x:String">C:\Builds\Binaries\Warewolf Studio.exe</InArgument>
                    </InvokeMethod>
                    <Delay DisplayName="Wait for Studio Start" Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_5" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[UseTestPack]" DisplayName="If can use test pack" sap2010:WorkflowViewState.IdRef="If_84">
        <If.Then>
          <If Condition="[Not (TestPackID Is Nothing)]" DisplayName="If Has Test Pack ID" sap2010:WorkflowViewState.IdRef="If_83">
            <If.Then>
              <Sequence DisplayName="Get Test Names" sap2010:WorkflowViewState.IdRef="Sequence_126">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Default="True" Name="CanMoveNext" />
                </Sequence.Variables>
                <InvokeMethod DisplayName="Read Test Pack" sap2010:WorkflowViewState.IdRef="InvokeMethod_56" MethodName="ReadLines" TargetType="si:File">
                  <InvokeMethod.Result>
                    <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[TestNames]</OutArgument>
                  </InvokeMethod.Result>
                  <InArgument x:TypeArguments="x:String">[BinariesDirectory &amp; "\TestPacks\" &amp; TestPackID &amp; ".testpack"]</InArgument>
                </InvokeMethod>
                <Assign DisplayName="Init TestNamesList" sap2010:WorkflowViewState.IdRef="Assign_33">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(x:String)">[TestNamesList]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(TestNames)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <mtbwa:WriteBuildWarning sap2010:WorkflowViewState.IdRef="WriteBuildWarning_18" Message="No test pack ID is defined, no test pack will be used" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            </If.Else>
          </If>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage sap2010:WorkflowViewState.IdRef="WriteBuildMessage_37" Message="[&quot;Not usinng test pack, the ID was : &quot; &amp; TestPackID &amp; &quot; (test packs have been disabled in the build definition for testing)&quot;]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </If.Else>
      </If>
      <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="If DropLocation is Set" sap2010:WorkflowViewState.IdRef="If_81" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Assign x:TypeArguments="x:String" DisplayName="Initialize LogFile Drop Location" sap2010:WorkflowViewState.IdRef="Assign`1_26" mtbwt:BuildTrackingParticipant.Importance="Low" To="[logFileDropLocation]" Value="[BuildDropProvider.CombinePaths(DropLocation, &quot;logs&quot;)]" />
        </If.Then>
      </If>
      <If Condition="[Not DisableTests]" DisplayName="If test are not disabled" sap2010:WorkflowViewState.IdRef="If_108">
        <If.Then>
          <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap2010:WorkflowViewState.IdRef="ForEach`1_18" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
            <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
              </ActivityAction.Argument>
              <If Condition="[Not TestSpecs Is Nothing]" DisplayName="If Not TestSpecs Is Nothing" sap2010:WorkflowViewState.IdRef="If_76" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <ParallelForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="ParallelForEachTestSpec" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1" Values="[TestSpecs]">
                    <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="For a TestSpec" sap2010:WorkflowViewState.IdRef="Sequence_128">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="TestResultsDirectory" />
                          <Variable x:TypeArguments="s:String[]" Name="ResultFileNames" />
                          <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                        </Sequence.Variables>
                        <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap2010:WorkflowViewState.IdRef="Assign`1_28" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                        <TryCatch DisplayName="Try Run Tests" sap2010:WorkflowViewState.IdRef="TryCatch_3" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <Sequence DisplayName="Run MSTest for test spec" sap2010:WorkflowViewState.IdRef="Sequence_127">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                              </Sequence.Variables>
                              <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap2010:WorkflowViewState.IdRef="FindMatchingFiles_4" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[BinariesDirectory &amp; testAssembly.AssemblyFileSpec]" Result="[testAssemblies]" />
                              <Assign DisplayName="Initialize Results Folder Name" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[TestResultsDirectory]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\" &amp; testAssembly.RunName]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap2010:WorkflowViewState.IdRef="If_104" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_130">
                                    <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap2010:WorkflowViewState.IdRef="If_103" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <Sequence DisplayName="Find Test Settings File And Run MSTest" sap2010:WorkflowViewState.IdRef="Sequence_129" mtbwt:BuildTrackingParticipant.Importance="Low">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                          </Sequence.Variables>
                                          <mtbwa:DownloadFile DeletionId="{x:Null}" DisplayName="Download test settings" sap2010:WorkflowViewState.IdRef="DownloadFile_8" LocalPath="[SourcesDirectory &amp; testAssembly.TestSettingsFileName.Substring(testAssembly.TestSettingsFileName.LastIndexOf(&quot;/&quot;), testAssembly.TestSettingsFileName.Length - testAssembly.TestSettingsFileName.LastIndexOf(&quot;/&quot;))]" ServerPath="[testAssembly.TestSettingsFileName]" Version="[Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest.DisplayString]" VersionControlServer="[Workspace.VersionControlServer]" />
                                          <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap2010:WorkflowViewState.IdRef="ConvertWorkspaceItem_1" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                          <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[If(platformConfiguration.IsEmpty, &quot;Debug&quot;, platformConfiguration.Configuration)]" sap2010:WorkflowViewState.IdRef="MSTest_10" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[If(platformConfiguration.IsEmpty, &quot;Mixed Platforms&quot;, platformConfiguration.Platform)]" RunTitle="[testAssembly.RunName]" SearchPathRoot="[BinariesDirectory]" TestContainers="[testAssemblies]" TestNames="[TestNamesList]" TestSettings="[localTestSettings]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[If(platformConfiguration.IsEmpty, &quot;Debug&quot;, platformConfiguration.Configuration)]" sap2010:WorkflowViewState.IdRef="MSTest_11" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[If(platformConfiguration.IsEmpty, &quot;Mixed Platforms&quot;, platformConfiguration.Platform)]" RunTitle="[testAssembly.RunName]" SearchPathRoot="[BinariesDirectory]" TestContainers="[testAssemblies]" TestNames="[TestNamesList]" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Handle Test Run Exception" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                                  </Sequence.Variables>
                                  <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="If testException is NOT TestFailureException" sap2010:WorkflowViewState.IdRef="If_87" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <If.Then>
                                      <mtbwa:WriteBuildError DisplayName="Write Test Failure Message" sap2010:WorkflowViewState.IdRef="WriteBuildError_3" Message="[testException.Message]" />
                                    </If.Then>
                                  </If>
                                  <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_6" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                  <mtbwa:GetApprovedRequests DisplayName="Get Requests Approved for Check In" sap2010:WorkflowViewState.IdRef="GetApprovedRequests_3" mtbwt:BuildTrackingParticipant.Importance="None" Result="[failedRequests]" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <Assign DisplayName="Generate Test Results File Name" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[TestResultsStagingDirectoryWithNewFileName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[TestResultsStagingDirectory &amp; "\" &amp; SpecifiedChangeSet &amp; "_" &amp; BuildDetail.RequestedFor.Replace(" ", ".") &amp; "_" &amp; BranchID &amp; "_" &amp; testAssembly.RunName.Replace("TestResults", "") &amp; ".trx"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[DoResultDeployment]" DisplayName="If can deploy results" sap2010:WorkflowViewState.IdRef="If_78">
                          <If.Then>
                            <Sequence DisplayName="Deploy Test Results" sap2010:WorkflowViewState.IdRef="Sequence_103">
                              <InvokeMethod DisplayName="Read Results Folder" sap2010:WorkflowViewState.IdRef="InvokeMethod_44" MethodName="GetFiles" TargetType="si:Directory">
                                <InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="s:String[]">[ResultFileNames]</OutArgument>
                                </InvokeMethod.Result>
                                <InArgument x:TypeArguments="x:String">[TestResultsDirectory]</InArgument>
                                <InArgument x:TypeArguments="x:String">*.trx</InArgument>
                              </InvokeMethod>
                              <If Condition="[ResultFileNames.Count = 1]" DisplayName="If there were any results" sap2010:WorkflowViewState.IdRef="If_77">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_102">
                                    <ForEach x:TypeArguments="x:String" DisplayName="ForEachTestResultFile" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[ResultFileNames]">
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="fileName" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_135">
                                          <If Condition="[File.Exists(TestResultsStagingDirectoryWithNewFileName)]" DisplayName="If test results file exists" sap2010:WorkflowViewState.IdRef="If_107">
                                            <If.Then>
                                              <mtbwa:InvokeProcess Arguments="[TestResultsStagingDirectoryWithNewFileName &amp; &quot; &quot; &amp; TestResultsStagingDirectoryWithNewFileName &amp; &quot; &quot;&quot;&quot; &amp; fileName &amp; &quot;&quot;&quot;&quot;]" DisplayName="Merge into existing test results file" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\TRXMerge.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_50">
                                                <mtbwa:InvokeProcess.ErrorDataReceived>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                                    </ActivityAction.Argument>
                                                  </ActivityAction>
                                                </mtbwa:InvokeProcess.ErrorDataReceived>
                                                <mtbwa:InvokeProcess.OutputDataReceived>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                                    </ActivityAction.Argument>
                                                  </ActivityAction>
                                                </mtbwa:InvokeProcess.OutputDataReceived>
                                              </mtbwa:InvokeProcess>
                                            </If.Then>
                                            <If.Else>
                                              <InvokeMethod DisplayName="Deploy Results File" sap2010:WorkflowViewState.IdRef="InvokeMethod_49" MethodName="Move" TargetType="si:File">
                                                <InArgument x:TypeArguments="x:String">[fileName]</InArgument>
                                                <InArgument x:TypeArguments="x:String">[TestResultsStagingDirectoryWithNewFileName]</InArgument>
                                              </InvokeMethod>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ForEach>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <mtbwa:WriteBuildWarning sap2010:WorkflowViewState.IdRef="WriteBuildWarning_13" Message="Number of test results found is not exactly 1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ParallelForEach>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildWarning DisplayName="Write Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_17" Message="No automated tests will be run for this build because the test specification is not present. Please check build definition for test specifications." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
            </ActivityAction>
          </ForEach>
        </If.Then>
      </If>
      <mtbwa:InvokeProcess DisplayName="Ensure ENV Killed" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\CodedUI\exit.bat&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_46">
        <mtbwa:InvokeProcess.ErrorDataReceived>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
            </ActivityAction.Argument>
            <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_35" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[errOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
          </ActivityAction>
        </mtbwa:InvokeProcess.ErrorDataReceived>
        <mtbwa:InvokeProcess.OutputDataReceived>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
            </ActivityAction.Argument>
            <mtbwa:WriteBuildMessage DisplayName="Write Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_36" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
          </ActivityAction>
        </mtbwa:InvokeProcess.OutputDataReceived>
      </mtbwa:InvokeProcess>
      <If Condition="[DoResultDeployment]" DisplayName="If Can Deploy Results" sap2010:WorkflowViewState.IdRef="If_102">
        <If.Then>
          <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_5">
            <TryCatch.Try>
              <Sequence DisplayName="Deploy Result Support Files" sap2010:WorkflowViewState.IdRef="Sequence_131">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="ResultFolderNames" />
                </Sequence.Variables>
                <InvokeMethod DisplayName="Get Support Directories" sap2010:WorkflowViewState.IdRef="InvokeMethod_57" MethodName="GetDirectories" TargetType="si:Directory">
                  <InvokeMethod.Result>
                    <OutArgument x:TypeArguments="s:String[]">[ResultFolderNames]</OutArgument>
                  </InvokeMethod.Result>
                  <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\UITestResults\UI"]</InArgument>
                </InvokeMethod>
                <ForEach x:TypeArguments="x:String" DisplayName="ForEachTestResultFile" sap2010:WorkflowViewState.IdRef="ForEach`1_19" Values="[ResultFolderNames]">
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="folderName" />
                    </ActivityAction.Argument>
                    <InvokeMethod DisplayName="Deploy Support Folder" sap2010:WorkflowViewState.IdRef="InvokeMethod_58" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
                      <InArgument x:TypeArguments="x:String">[folderName]</InArgument>
                      <InArgument x:TypeArguments="x:String">[TestResultsStagingDirectory &amp; "\Archive\UI\In"]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </InvokeMethod>
                  </ActivityAction>
                </ForEach>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="si:DirectoryNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                <ActivityAction x:TypeArguments="si:DirectoryNotFoundException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="si:DirectoryNotFoundException" Name="exception" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </If.Then>
      </If>
      <If Condition="[DeleteWorkspaceAtTheEnd]" DisplayName="If Can Delete Workspace At The End" sap2010:WorkflowViewState.IdRef="If_40">
        <If.Then>
          <Sequence DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="Sequence_31">
            <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_2" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
            <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_4" mtbwt:BuildTrackingParticipant.Importance="Low" />
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_10" mtbwt:BuildTrackingParticipant.Importance="Low" />
          </Sequence>
        </If.Then>
      </If>
    </mtbwa:AgentScope>
    <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="If Clean Test Run" sap2010:WorkflowViewState.IdRef="If_37">
      <If.Then>
        <mtbwa:WriteBuildMessage DisplayName="Inform Developer of Status" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_3" Message="******** Integration run, completed. Now on to CodedUI Test Run ********" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
          <Assign DisplayName="TestStatus = Failed" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="mtbc:BuildPhaseStatus">[BuildDetail.TestStatus]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="mtbc:BuildPhaseStatus">[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="BuildStatus = Failed" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="mtbc:BuildStatus">[BuildDetail.Status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="mtbc:BuildStatus">[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]</InArgument>
            </Assign.Value>
          </Assign>
          <mtbwa:WriteBuildMessage DisplayName="Inform Developer of Status" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_4" Message="******** Test run, FAILED. Aborting... ********" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </Sequence>
      </If.Else>
    </If>
    <mtbwa:WriteBuildMessage DisplayName="Show End Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_5" Message="******** END TEST RUN ********" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetBuildDetail_1" sap:VirtualizedContainerService.HintSize="1364,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_2" sap:VirtualizedContainerService.HintSize="1364,22" />
      <sap2010:ViewStateData Id="UpdateBuildNumber_1" sap:VirtualizedContainerService.HintSize="1364,22" />
      <sap2010:ViewStateData Id="Assign`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetBuildProperties_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Assign`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetBuildProperties_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="1364,876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_88" sap:VirtualizedContainerService.HintSize="1364,208" />
      <sap2010:ViewStateData Id="GetBuildAgent_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetBuildDirectory_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="WriteBuildWarning_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign`1_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="1342,1038">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeleteDirectory_7" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="DeleteWorkspace_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_46" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="CreateWorkspace_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="DownloadFile_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_51" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="DownloadFile_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_52" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="DownloadFile_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_53" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="DownloadFile_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_54" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="Sequence_136" sap:VirtualizedContainerService.HintSize="222,1548">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_109" sap:VirtualizedContainerService.HintSize="464,1696" />
      <sap2010:ViewStateData Id="DownloadFile_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_28" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_29" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_18" sap:VirtualizedContainerService.HintSize="464,278" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="1342,2720">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LabelWorkspace_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetBuildProperties_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_3" sap:VirtualizedContainerService.HintSize="222,208" />
      <sap2010:ViewStateData Id="WriteBuildMessage_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="1342,356" />
      <sap2010:ViewStateData Id="MSBuild_3" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CreateDirectory_3" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CopyDirectory_1" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CopyDirectory_2" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CopyDirectory_3" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CopyDirectory_4" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="MSBuild_4" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="CopyDirectory_5" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="InvokeMethod_29" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="InvokeMethod_39" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Delay_4" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="240,1234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_34" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="464,359" />
      <sap2010:ViewStateData Id="DownloadFile_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_31" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_32" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_39" sap:VirtualizedContainerService.HintSize="464,278" />
      <sap2010:ViewStateData Id="DownloadFile_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_33" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeProcess_40" sap:VirtualizedContainerService.HintSize="464,457" />
      <sap2010:ViewStateData Id="InvokeMethod_35" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="TerminateWorkflow_8" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="240,318">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeProcess_41" sap:VirtualizedContainerService.HintSize="464,567" />
      <sap2010:ViewStateData Id="InvokeMethod_36" sap:VirtualizedContainerService.HintSize="464,132" />
      <sap2010:ViewStateData Id="InvokeMethod_37" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Delay_3" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="Sequence_133" sap:VirtualizedContainerService.HintSize="240,318">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_105" sap:VirtualizedContainerService.HintSize="464,466" />
      <sap2010:ViewStateData Id="InvokeMethod_43" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Delay_5" sap:VirtualizedContainerService.HintSize="218,22" />
      <sap2010:ViewStateData Id="Sequence_134" sap:VirtualizedContainerService.HintSize="240,318">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_106" sap:VirtualizedContainerService.HintSize="464,466" />
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="486,3213">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="508,3337">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_63" sap:VirtualizedContainerService.HintSize="1342,3485" />
      <sap2010:ViewStateData Id="InvokeMethod_56" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_126" sap:VirtualizedContainerService.HintSize="264,356">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_18" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_83" sap:VirtualizedContainerService.HintSize="489,504" />
      <sap2010:ViewStateData Id="WriteBuildMessage_37" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_84" sap:VirtualizedContainerService.HintSize="1342,652" />
      <sap2010:ViewStateData Id="Assign`1_26" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_81" sap:VirtualizedContainerService.HintSize="1342,208" />
      <sap2010:ViewStateData Id="Assign`1_28" sap:VirtualizedContainerService.HintSize="910,22" />
      <sap2010:ViewStateData Id="FindMatchingFiles_4" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="611,60" />
      <sap2010:ViewStateData Id="DownloadFile_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ConvertWorkspaceItem_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MSTest_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_129" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MSTest_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_103" sap:VirtualizedContainerService.HintSize="464,418" />
      <sap2010:ViewStateData Id="Sequence_130" sap:VirtualizedContainerService.HintSize="486,542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_104" sap:VirtualizedContainerService.HintSize="611,690" />
      <sap2010:ViewStateData Id="Sequence_127" sap:VirtualizedContainerService.HintSize="633,976">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildError_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_87" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetApprovedRequests_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_110" sap:VirtualizedContainerService.HintSize="486,453">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="637,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="910,1203">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="910,60" />
      <sap2010:ViewStateData Id="InvokeMethod_44" sap:VirtualizedContainerService.HintSize="763,132" />
      <sap2010:ViewStateData Id="InvokeProcess_50" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="InvokeMethod_49" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="If_107" sap:VirtualizedContainerService.HintSize="464,412" />
      <sap2010:ViewStateData Id="Sequence_135" sap:VirtualizedContainerService.HintSize="486,536">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="516,684" />
      <sap2010:ViewStateData Id="Sequence_102" sap:VirtualizedContainerService.HintSize="538,808">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_77" sap:VirtualizedContainerService.HintSize="763,956" />
      <sap2010:ViewStateData Id="Sequence_103" sap:VirtualizedContainerService.HintSize="785,1252">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_78" sap:VirtualizedContainerService.HintSize="910,1400" />
      <sap2010:ViewStateData Id="Sequence_128" sap:VirtualizedContainerService.HintSize="932,2929">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_1" sap:VirtualizedContainerService.HintSize="962,3077" />
      <sap2010:ViewStateData Id="WriteBuildWarning_17" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_76" sap:VirtualizedContainerService.HintSize="1187,3225" />
      <sap2010:ViewStateData Id="ForEach`1_18" sap:VirtualizedContainerService.HintSize="1217,3373" />
      <sap2010:ViewStateData Id="If_108" sap:VirtualizedContainerService.HintSize="1342,3521" />
      <sap2010:ViewStateData Id="WriteBuildMessage_35" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_36" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_46" sap:VirtualizedContainerService.HintSize="1342,278" />
      <sap2010:ViewStateData Id="InvokeMethod_57" sap:VirtualizedContainerService.HintSize="287,132" />
      <sap2010:ViewStateData Id="InvokeMethod_58" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="ForEach`1_19" sap:VirtualizedContainerService.HintSize="287,280" />
      <sap2010:ViewStateData Id="Sequence_131" sap:VirtualizedContainerService.HintSize="309,576">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,803" />
      <sap2010:ViewStateData Id="If_102" sap:VirtualizedContainerService.HintSize="1342,951" />
      <sap2010:ViewStateData Id="DeleteWorkspace_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_40" sap:VirtualizedContainerService.HintSize="1342,418" />
      <sap2010:ViewStateData Id="AgentScope_1" sap:VirtualizedContainerService.HintSize="1364,14111" />
      <sap2010:ViewStateData Id="WriteBuildMessage_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="WriteBuildMessage_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="264,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_37" sap:VirtualizedContainerService.HintSize="1040,494" />
      <sap2010:ViewStateData Id="WriteBuildMessage_5" sap:VirtualizedContainerService.HintSize="1040,22" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="1386,16181">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TfsBuild.Process_1" sap:VirtualizedContainerService.HintSize="1426,16261" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>