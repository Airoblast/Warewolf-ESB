<Activity mc:Ignorable="sads sap sap2010" x:Class="TfsBuild.Process" this:Process.BuildSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.BuildSettings()]" this:Process.TestSpecs="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec(&quot;**\*test*.dll&quot;))]" this:Process.BuildNumberFormat="[&quot;$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)&quot;]" this:Process.SolutionSpecificBuildOutputs="[False]" this:Process.CleanWorkspace="[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" this:Process.RunCodeAnalysis="[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]" this:Process.SourceAndSymbolServerSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]" this:Process.AgentSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]" this:Process.AssociateChangesetsAndWorkItems="[True]" this:Process.CreateWorkItem="[True]" this:Process.MSBuildPlatform="[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]" this:Process.PerformTestImpactAnalysis="[True]" this:Process.CreateLabel="[True]" this:Process.DisableTests="[False]" this:Process.Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]" this:Process.SupportedReasons="All" this:Process.BuildProcessVersion="11.0" this:Process.CleaningUtilFileName="clean.bat" this:Process.StagingDir="\\rsaklfsvrtfsbld\Automated Builds\DevMergeStaging" this:Process.WorkspaceNameSuffix="DevGate" this:Process.DeleteWorkspaceAtTheEnd="True" this:Process.BranchID="DEV" this:Process.TestRunStagingDir="\\rsaklfsvrtfsbld\Automated Builds\TestRunStaging" this:Process.NumberOfTestRunAgentsToQueueOn="5" this:Process.CreateTestPack="True"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common"
 xmlns:mt1="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Client"
 xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client"
 xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtlwa="clr-namespace:Microsoft.TeamFoundation.Lab.Workflow.Activities;assembly=Microsoft.TeamFoundation.Lab.Workflow.Activities"
 xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration"
 xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
 xmlns:mtvc1="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualStudio.VisualBasic.LanguageService"
 xmlns:mv1="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.LanguageService"
 xmlns:mv2="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.Editor"
 xmlns:mv3="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic"
 xmlns:mv4="clr-namespace:Microsoft.VisualBasic;assembly=System"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:mvc="clr-namespace:Microsoft.VisualBasic.CompilerServices;assembly=Microsoft.VisualBasic"
 xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:s1="clr-namespace:System;assembly=System"
 xmlns:s2="clr-namespace:System;assembly=System.Core"
 xmlns:s3="clr-namespace:System;assembly=System.ComponentModel.Composition"
 xmlns:s4="clr-namespace:System;assembly=System.ServiceModel"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.Core"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel"
 xmlns:sd="clr-namespace:System.Diagnostics;assembly=System"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:si1="clr-namespace:System.IO;assembly=System.ServiceModel"
 xmlns:si2="clr-namespace:System.IO;assembly=WindowsBase"
 xmlns:si3="clr-namespace:System.IO;assembly=System.Core"
 xmlns:si4="clr-namespace:System.IO;assembly=System"
 xmlns:sic="clr-namespace:System.IO.Compression;assembly=System"
 xmlns:sic1="clr-namespace:System.IO.Compression;assembly=System.IO.Compression.FileSystem.dll"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core"
 xmlns:st="clr-namespace:System.Text;assembly=mscorlib"
 xmlns:sw="clr-namespace:System.Web;assembly=System.Web"
 xmlns:sw1="clr-namespace:System.Web;assembly=System"
 xmlns:this="clr-namespace:TfsBuild"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BuildSettings" Type="InArgument(mtbwa:BuildSettings)" />
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)" />
    <x:Property Name="SolutionSpecificBuildOutputs" Type="InArgument(x:Boolean)" />
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)" />
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)" />
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)" />
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)" />
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)" />
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)" />
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)" />
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="GetVersion" Type="InArgument(x:String)" />
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)" />
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)" />
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection" />
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason" />
    <x:Property Name="BuildProcessVersion" Type="x:String" />
    <x:Property Name="CleaningUtilFileName" Type="InArgument(x:String)" />
    <x:Property Name="StagingDir" Type="InArgument(x:String)" />
    <x:Property Name="WorkspaceNameSuffix" Type="InArgument(x:String)" />
    <x:Property Name="DeleteWorkspaceAtTheEnd" Type="InArgument(x:Boolean)" />
    <x:Property Name="BranchID" Type="InArgument(x:String)" />
    <x:Property Name="TestRunStagingDir" Type="InArgument(x:String)" />
    <x:Property Name="NumberOfTestRunAgentsToQueueOn" Type="InArgument(x:Int32)" />
    <x:Property Name="CreateTestPack" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.MSBuildArguments>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.GetVersion>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata Category="#300 Advanced" Description="Enable MSBuid Multi-proc to build your solutions' projects in parallel, when possible, using all available processors on the build server." DisplayName="MSBuild Multi-Proc" ParameterName="MSBuildMultiProc" />
      <mtbw:ProcessParameterMetadata Category="#300 Advanced" Description="True will put build outputs into folders based on the solution name. False will put all build outputs into the same folder." DisplayName="Solution Specific Build Outputs" ParameterName="SolutionSpecificBuildOutputs" />
      <mtbw:ProcessParameterMetadata Category="Agents" DisplayName="Machine Names" ParameterName="MachineNames" />
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <sap2010:WorkflowViewState.IdRef>TfsBuild.Process_1</sap2010:WorkflowViewState.IdRef>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence DisplayName="Build and Wait" sap2010:WorkflowViewState.IdRef="Sequence_2" mtbwt:BuildTrackingParticipant.Importance="None">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail" />
      <Variable x:TypeArguments="x:String" Name="DropLocation" />
      <Variable x:TypeArguments="si:FileStream" Name="ChangeSetIDFileStream" />
      <Variable x:TypeArguments="x:String" Name="BuildNumber" />
    </Sequence.Variables>
    <mtbwa:GetBuildDetail DisplayName="Get the Build" sap2010:WorkflowViewState.IdRef="GetBuildDetail_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDetail]" />
    <mtbwa:WriteBuildMessage DisplayName="Write Requested By" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_1" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;RequestedBy: '&quot; + BuildDetail.RequestedBy + &quot;'&quot;]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
    <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="Update Build Number" sap2010:WorkflowViewState.IdRef="UpdateBuildNumber_1" Result="[BuildNumber]" />
    <If Condition="[Not (DropLocation Is Nothing)]" DisplayName="If there is a drop location" sap2010:WorkflowViewState.IdRef="If_68">
      <If.Then>
        <mtbwa:SetBuildProperties DisplayName="Set Drop Location" DropLocation="[DropLocation]" sap2010:WorkflowViewState.IdRef="SetBuildProperties_1" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
      </If.Then>
    </If>
    <mtbwa:AgentScope DataToIgnore="" DisplayName="Run On Agent" sap2010:WorkflowViewState.IdRef="AgentScope_1" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent" />
        <Variable x:TypeArguments="mtvc:Workspace" Name="Workspace" />
        <Variable x:TypeArguments="x:String" Name="BuildDirectory" />
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName" />
        <Variable x:TypeArguments="x:String" Name="WorkspaceName" />
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory" />
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory" />
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory" />
        <Variable x:TypeArguments="x:String" Name="buildItem" />
        <Variable x:TypeArguments="x:Int32" Name="TestStatusID" />
        <Variable x:TypeArguments="x:String" Name="TheShelveSet" />
        <Variable x:TypeArguments="x:String" Name="StudioErrorOutput" />
        <Variable x:TypeArguments="mtvc:Changeset" Name="ChangeSet" />
        <Variable x:TypeArguments="x:String" Name="ServerErrorOutput" />
        <Variable x:TypeArguments="x:String" Name="WaitForBuildIDs" />
      </mtbwa:AgentScope.Variables>
      <Sequence DisplayName="Initialize Variables" sap2010:WorkflowViewState.IdRef="Sequence_6" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:GetBuildAgent DisplayName="Get the Agent" sap2010:WorkflowViewState.IdRef="GetBuildAgent_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildAgent]" />
        <mtbwa:GetBuildDirectory DisplayName="Get the Build Directory" sap2010:WorkflowViewState.IdRef="GetBuildDirectory_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDirectory]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Workspace Name" sap2010:WorkflowViewState.IdRef="Assign`1_3" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[BuildAgent.ServiceHost.Name &amp; &quot;_&quot; &amp; WorkspaceNameSuffix]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Sources Directory" sap2010:WorkflowViewState.IdRef="Assign`1_4" mtbwt:BuildTrackingParticipant.Importance="Low" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\Sources&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Binaries Directory" sap2010:WorkflowViewState.IdRef="Assign`1_5" mtbwt:BuildTrackingParticipant.Importance="Low" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\Binaries&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Test Results Directory" sap2010:WorkflowViewState.IdRef="Assign`1_25" mtbwt:BuildTrackingParticipant.Importance="Low" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\TestResults&quot;, BuildDirectory)]" />
        <If Condition="[Not BuildSettings.HasPlatformConfigurations]" DisplayName="If Not BuildSettings.HasPlatformConfigurations" sap2010:WorkflowViewState.IdRef="If_3" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <AddToCollection x:TypeArguments="mtbwa:PlatformConfiguration" Collection="[BuildSettings.PlatformConfigurations]" DisplayName="Use Default Platform Configuration" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" mtbwt:BuildTrackingParticipant.Importance="Low" Item="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" />
          </If.Then>
        </If>
        <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="If WorkspaceName &gt; MaxSize" sap2010:WorkflowViewState.IdRef="If_4" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5" mtbwt:BuildTrackingParticipant.Importance="None">
              <mtbwa:WriteBuildWarning DisplayName="Write Workspace Size Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_1" Message="[String.Format(&quot;The workspace name '{0}' exceeds the maximum allowed limit of '{1}' characters. Truncating it to match the maximum limit.&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
              <Assign x:TypeArguments="x:String" DisplayName="Truncate WorkspaceName to MaxSize" sap2010:WorkflowViewState.IdRef="Assign`1_10" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Initialize Workspace" sap2010:WorkflowViewState.IdRef="Sequence_48" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_5" mtbwt:BuildTrackingParticipant.Importance="Low" />
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" sap2010:WorkflowViewState.IdRef="If_53" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Delete Workspace and Sources Directory" sap2010:WorkflowViewState.IdRef="Sequence_46" mtbwt:BuildTrackingParticipant.Importance="Low">
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_4" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_4" mtbwt:BuildTrackingParticipant.Importance="Low" />
              <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_3" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Get Existing Workspace" sap2010:WorkflowViewState.IdRef="Sequence_47">
              <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <TryCatch.Try>
                  <mtbwa:GetWorkspace sap2010:WorkflowViewState.IdRef="GetWorkspace_2" Name="[WorkspaceName]" Result="[Workspace]" ThrowIfNotFound="[True]" />
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="mtvc:WorkspaceNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                    <ActivityAction x:TypeArguments="mtvc:WorkspaceNotFoundException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="mtvc:WorkspaceNotFoundException" Name="exception" />
                      </ActivityAction.Argument>
                      <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_5" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
                <TryCatch.Finally>
                  <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_4" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                </TryCatch.Finally>
              </TryCatch>
            </Sequence>
          </If.Else>
        </If>
        <Assign DisplayName="Set ShelveSet" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[TheShelveSet]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["""" &amp; BuildDetail.ShelvesetName &amp; """"]</InArgument>
          </Assign.Value>
        </Assign>
        <TryCatch DisplayName="TryUnshelve" sap2010:WorkflowViewState.IdRef="TryCatch_8">
          <TryCatch.Try>
            <mtbwa:SyncWorkspace AllowUnmapped="True" AutoMerge="True" DisplayName="Sync Workspace" GetOptions="[Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Overwrite]" sap2010:WorkflowViewState.IdRef="SyncWorkspace_2" NoCIOption="False" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]">
              <mtbwa:SyncWorkspace.RequestsFailed>
                <ActivityAction x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                  </ActivityAction.Argument>
                  <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_4" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                </ActivityAction>
              </mtbwa:SyncWorkspace.RequestsFailed>
            </mtbwa:SyncWorkspace>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="mtbwa:NoShelvesetException" sap2010:WorkflowViewState.IdRef="Catch`1_7">
              <ActivityAction x:TypeArguments="mtbwa:NoShelvesetException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="mtbwa:NoShelvesetException" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Auto Refresh Workspace" sap2010:WorkflowViewState.IdRef="Sequence_66">
                  <mtbwa:WriteBuildError DisplayName="WriteWorkspaceError" sap2010:WorkflowViewState.IdRef="WriteBuildError_4" Message="There was a problem updating the workspace with the shelveset, deleting workspace and starting fresh. This will make no difference to the build except it will take a lot longer." />
                  <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_8" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
                  <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_11" mtbwt:BuildTrackingParticipant.Importance="Low" />
                  <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap2010:WorkflowViewState.IdRef="CreateWorkspace_6" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                  <mtbwa:SyncWorkspace AutoMerge="True" DisplayName="Sync Workspace" GetOptions="[Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Overwrite]" sap2010:WorkflowViewState.IdRef="SyncWorkspace_3" NoCIOption="False" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]">
                    <mtbwa:SyncWorkspace.RequestsFailed>
                      <ActivityAction x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                        </ActivityAction.Argument>
                        <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_5" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                      </ActivityAction>
                    </mtbwa:SyncWorkspace.RequestsFailed>
                  </mtbwa:SyncWorkspace>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </Sequence>
      <TryCatch DisplayName="Try Deploy Plugins Catch Unautherized Access" sap2010:WorkflowViewState.IdRef="TryCatch_10">
        <TryCatch.Try>
          <Sequence DisplayName="Deploy Plugins" sap2010:WorkflowViewState.IdRef="Sequence_64">
            <mtbwa:CopyDirectory Destination="[String.Format(&quot;{0}\CefSharp\locales&quot;, BinariesDirectory)]" DisplayName="Copy locales" sap2010:WorkflowViewState.IdRef="CopyDirectory_7" Source="[String.Format(&quot;{0}\Binaries\CefSharp\locales&quot;, SourcesDirectory)]" />
            <mtbwa:CopyDirectory Destination="[String.Format(&quot;{0}\CefSharp&quot;, BinariesDirectory)]" DisplayName="Copy CefSharp" sap2010:WorkflowViewState.IdRef="CopyDirectory_1" Source="[String.Format(&quot;{0}\Binaries\CefSharp&quot;, SourcesDirectory)]" />
            <mtbwa:CopyDirectory Destination="[String.Format(&quot;{0}\ActiveDirectory&quot;, BinariesDirectory)]" DisplayName="Copy Interop.ActiveDs" sap2010:WorkflowViewState.IdRef="CopyDirectory_9" Source="[String.Format(&quot;{0}\Binaries\ActiveDirectory&quot;, SourcesDirectory)]" />
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:UnauthorizedAccessException" sap2010:WorkflowViewState.IdRef="Catch`1_9">
            <ActivityAction x:TypeArguments="s:UnauthorizedAccessException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:UnauthorizedAccessException" Name="exception" />
              </ActivityAction.Argument>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <TryCatch DisplayName="Try Compile, Test, and Associate Changesets and Work Items" sap2010:WorkflowViewState.IdRef="TryCatch_4" mtbwt:BuildTrackingParticipant.Importance="Low">
        <TryCatch.Variables>
          <Variable x:TypeArguments="scg:IList(mtvc:Changeset)" Name="associatedChangesets" />
          <Variable x:TypeArguments="s:Exception" Name="compilationException" />
          <Variable x:TypeArguments="x:Boolean" Name="treatTestFailureAsBuildFailure" />
        </TryCatch.Variables>
        <TryCatch.Finally>
          <Sequence DisplayName="Revert Workspace and Copy Files to Drop Location" sap2010:WorkflowViewState.IdRef="Sequence_27" mtbwt:BuildTrackingParticipant.Importance="Low">
            <mtbwa:InvokeForReason DisplayName="Revert Workspace for Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_7" Reason="ValidateShelveset, CheckInShelveset">
              <mtbwa:RevertWorkspace DisplayName="Revert Workspace" sap2010:WorkflowViewState.IdRef="RevertWorkspace_1" Workspace="[Workspace]" />
            </mtbwa:InvokeForReason>
            <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="If DropLocation is Set" sap2010:WorkflowViewState.IdRef="If_37" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <mtbwa:CopyDirectory Destination="[DropLocation]" DisplayName="Drop Files to Drop Location" sap2010:WorkflowViewState.IdRef="CopyDirectory_2" Source="[BinariesDirectory]" />
              </If.Then>
            </If>
          </Sequence>
        </TryCatch.Finally>
        <TryCatch.Try>
          <Parallel DisplayName="Compile and Associate Changesets and Work Items" sap2010:WorkflowViewState.IdRef="Parallel_5">
            <Sequence DisplayName="Compile and Test" sap2010:WorkflowViewState.IdRef="Sequence_71">
              <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap2010:WorkflowViewState.IdRef="ForEach`1_12" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
                <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Compile and Test for Configuration" sap2010:WorkflowViewState.IdRef="Sequence_70" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="logFileDropLocation" />
                    </Sequence.Variables>
                    <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="If DropLocation is Set" sap2010:WorkflowViewState.IdRef="If_57" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <Assign x:TypeArguments="x:String" DisplayName="Initialize LogFile Drop Location" sap2010:WorkflowViewState.IdRef="Assign`1_20" mtbwt:BuildTrackingParticipant.Importance="Low" To="[logFileDropLocation]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BuildDropProvider.CombinePaths(DropLocation, &quot;logs&quot;), If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BuildDropProvider.CombinePaths(DropLocation, &quot;logs&quot;, platformConfiguration.Configuration), BuildDropProvider.CombinePaths(DropLocation, &quot;logs&quot;, platformConfiguration.Platform, platformConfiguration.Configuration)))]" />
                      </If.Then>
                    </If>
                    <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap2010:WorkflowViewState.IdRef="ForEach`1_11" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.ProjectsToBuild]">
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                        </ActivityAction.Argument>
                        <TryCatch DisplayName="Try to Compile the Project" sap2010:WorkflowViewState.IdRef="TryCatch_9" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <Sequence DisplayName="Compile the Projects" sap2010:WorkflowViewState.IdRef="Sequence_68" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="localProject" />
                              </Sequence.Variables>
                              <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap2010:WorkflowViewState.IdRef="ConvertWorkspaceItem_5" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[serverBuildProjectItem]" Result="[localProject]" Workspace="[Workspace]" />
                              <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Build All Projects" GenerateVSPropsFile="[True]" sap2010:WorkflowViewState.IdRef="MSBuild_6" LogFileDropLocation="[logFileDropLocation]" MaxProcesses="2" OutDir="[BinariesDirectory]" Platform="[platformConfiguration.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" ToolPlatform="[MSBuildPlatform]" Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Minimal]" />
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Handle Exception" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                                  </Sequence.Variables>
                                  <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="Set CompilationStatus to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_9" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                                  <If Condition="[CreateWorkItem]" DisplayName="If CreateWorkItem" sap2010:WorkflowViewState.IdRef="If_58" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <If.Then>
                                      <mtbwa:InvokeForReason DisplayName="Create Work Item for non-Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_9" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                        <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;This work item was created by TFS Build on a build failure.&quot;]" CustomFields="[New Dictionary(Of String, String) From { {&quot;System.Reason&quot;, &quot;Build Failure&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;Start the build using TFS Build&quot;}, {&quot;Priority&quot;, &quot;1&quot;}, {&quot;Severity&quot;, &quot;1 - Critical&quot;} }]" DisplayName="Create Work Item" sap2010:WorkflowViewState.IdRef="OpenWorkItem_2" Title="[String.Format(&quot;Build Failure in Build: {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;Bug&quot;]" />
                                      </mtbwa:InvokeForReason>
                                    </If.Then>
                                  </If>
                                  <mtbwa:GetApprovedRequests DisplayName="Get Requests Approved for Check In" sap2010:WorkflowViewState.IdRef="GetApprovedRequests_3" mtbwt:BuildTrackingParticipant.Importance="None" Result="[failedRequests]" />
                                  <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_6" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                                  <mtbwa:InvokeForReason DisplayName="Revert Workspace for Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_10" Reason="ValidateShelveset, CheckInShelveset">
                                    <mtbwa:RevertWorkspace DisplayName="Revert Workspace" sap2010:WorkflowViewState.IdRef="RevertWorkspace_3" Workspace="[Workspace]" />
                                  </mtbwa:InvokeForReason>
                                  <Rethrow DisplayName="Rethrow the exception so the build will stop" sap2010:WorkflowViewState.IdRef="Rethrow_2" mtbwt:BuildTrackingParticipant.Importance="Low" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </ActivityAction>
                    </ForEach>
                    <If Condition="[Not DisableTests]" DisplayName="If Not DisableTests" sap2010:WorkflowViewState.IdRef="If_79" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <Sequence DisplayName="Run Tests" sap2010:WorkflowViewState.IdRef="Sequence_89" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <If Condition="[Not TestSpecs Is Nothing]" DisplayName="If Not TestSpecs Is Nothing" sap2010:WorkflowViewState.IdRef="If_77" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="For Each TestSpec in TestSpecs" sap2010:WorkflowViewState.IdRef="ForEach`1_13" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[TestSpecs]">
                                <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                                  </ActivityAction.Argument>
                                  <TryCatch DisplayName="Try Run Tests" sap2010:WorkflowViewState.IdRef="TryCatch_11" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <TryCatch.Try>
                                      <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec]" DisplayName="If spec Is AgileTestPlatformSpec" sap2010:WorkflowViewState.IdRef="If_74" mtbwt:BuildTrackingParticipant.Importance="None">
                                        <If.Then>
                                          <Sequence DisplayName="Run Visual Studio Test Runner for Test Sources" sap2010:WorkflowViewState.IdRef="Sequence_83" mtbwt:BuildTrackingParticipant.Importance="Low">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="mtbwa:AgileTestPlatformSpec" Name="agileTestPlatformAssembly" />
                                              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="agileTestPlatformAssemblies" />
                                            </Sequence.Variables>
                                            <Assign x:TypeArguments="mtbwa:AgileTestPlatformSpec" DisplayName="Assign spec to agileTestPlatformAssembly" sap2010:WorkflowViewState.IdRef="Assign`1_21" mtbwt:BuildTrackingParticipant.Importance="Low" To="[agileTestPlatformAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec)]" />
                                            <mtbwa:FindMatchingFiles DisplayName="Find Visual Studio Test Platform Test Assemblies" sap2010:WorkflowViewState.IdRef="FindMatchingFiles_1" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, BinariesDirectory, agileTestPlatformAssembly.AssemblyFileSpec)]" Result="[agileTestPlatformAssemblies]" />
                                            <If Condition="[agileTestPlatformAssemblies.Count() &gt; 0]" DisplayName="If Visual Studio Test Platform Test Assemblies Found" sap2010:WorkflowViewState.IdRef="If_70" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <If Condition="[agileTestPlatformAssembly.HasRunSettingsFile]" DisplayName="If agileTestPlatformAssembly.HasRunSettingsFile" sap2010:WorkflowViewState.IdRef="If_69" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <If.Then>
                                                    <Sequence DisplayName="Find Run Settings File And Run Visual Studio Test Runner" sap2010:WorkflowViewState.IdRef="Sequence_82" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="x:String" Name="localRunSettings" />
                                                      </Sequence.Variables>
                                                      <mtbwa:GenerateRunSettings DisplayName="Generate Run Settings File" sap2010:WorkflowViewState.IdRef="GenerateRunSettings_1" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[localRunSettings]" RunSettingsForTestRun="[agileTestPlatformAssembly.RunSettingsForTestRun]" Workspace="[Workspace]" />
                                                      <mtbwa:RunTests OnTestCompleted="{x:Null}" OnTestRunCompleted="{x:Null}" DisableAutoFakes="False" DisplayName="Run Visual Studio Test Runner for Test Sources" ExecutionPlatform="[agileTestPlatformAssembly.ExecutionPlatform]" ExecutionTimeout="0" Flavor="[platformConfiguration.Configuration]" sap2010:WorkflowViewState.IdRef="RunTests_1" Platform="[platformConfiguration.Platform]" RunName="[agileTestPlatformAssembly.RunName]" RunSettings="[localRunSettings]" TestCaseFilter="[agileTestPlatformAssembly.TestCaseFilter]" TestSources="[agileTestPlatformAssemblies]" TreatTestAdapterErrorsAsWarnings="[False]" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <mtbwa:RunTests OnTestCompleted="{x:Null}" OnTestRunCompleted="{x:Null}" DisableAutoFakes="False" DisplayName="Run Visual Studio Test Runner for Test Sources" ExecutionPlatform="[agileTestPlatformAssembly.ExecutionPlatform]" ExecutionTimeout="[0]" Flavor="[platformConfiguration.Configuration]" sap2010:WorkflowViewState.IdRef="RunTests_2" Platform="[platformConfiguration.Platform]" RunName="[agileTestPlatformAssembly.RunName]" TestCaseFilter="[agileTestPlatformAssembly.TestCaseFilter]" TestSources="[agileTestPlatformAssemblies]" TreatTestAdapterErrorsAsWarnings="[False]">
                                                      <mtbwa:RunTests.RunSettings>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                        </InArgument>
                                                      </mtbwa:RunTests.RunSettings>
                                                    </mtbwa:RunTests>
                                                  </If.Else>
                                                </If>
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="If spec Is TestMetadataFileSpec" sap2010:WorkflowViewState.IdRef="If_73" mtbwt:BuildTrackingParticipant.Importance="None">
                                            <If.Then>
                                              <Sequence DisplayName="Run MSTest for Metadata File" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile" />
                                                  <Variable x:TypeArguments="x:String" Name="localTestMetadata" />
                                                </Sequence.Variables>
                                                <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="Assign spec to testMetadataFile" sap2010:WorkflowViewState.IdRef="Assign`1_22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" />
                                                <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap2010:WorkflowViewState.IdRef="ConvertWorkspaceItem_6" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" />
                                                <mtbwa:MSTest Category="[testMetadataFile.CategoryFilter]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]" DisplayName="Run MSTest for Metadata File" Flavor="[platformConfiguration.Configuration]" sap2010:WorkflowViewState.IdRef="MSTest_1" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" RunTitle="[testMetadataFile.RunName]" SearchPathRoot="[BinariesDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" TestSettings="[String.Empty]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Run MSTest for Test Assemblies" sap2010:WorkflowViewState.IdRef="Sequence_87" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                                                  <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                                                  <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor" />
                                                  <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform" />
                                                </Sequence.Variables>
                                                <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap2010:WorkflowViewState.IdRef="Assign`1_23" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                                                <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap2010:WorkflowViewState.IdRef="FindMatchingFiles_2" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, BinariesDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" />
                                                <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap2010:WorkflowViewState.IdRef="If_72" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <If.Then>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_86">
                                                      <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap2010:WorkflowViewState.IdRef="If_71" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <If.Then>
                                                          <Sequence DisplayName="Find Test Settings File And Run MSTest" sap2010:WorkflowViewState.IdRef="Sequence_85" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                                            </Sequence.Variables>
                                                            <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap2010:WorkflowViewState.IdRef="ConvertWorkspaceItem_7" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                                            <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[platformConfiguration.Configuration]" sap2010:WorkflowViewState.IdRef="MSTest_2" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" RunTitle="[testAssembly.RunName]" SearchPathRoot="[BinariesDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" />
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[platformConfiguration.Configuration]" sap2010:WorkflowViewState.IdRef="MSTest_3" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" RunTitle="[testAssembly.RunName]" SearchPathRoot="[BinariesDirectory]" TestContainers="[testAssemblies]" />
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </If.Else>
                                      </If>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Handle Test Run Exception" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests" />
                                            </Sequence.Variables>
                                            <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="If testException is NOT TestFailureException" sap2010:WorkflowViewState.IdRef="If_75" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <mtbwa:WriteBuildError DisplayName="Write Test Failure Message" sap2010:WorkflowViewState.IdRef="WriteBuildError_5" Message="[testException.Message]" />
                                              </If.Then>
                                            </If>
                                            <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_13" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                            <If Condition="[spec.FailBuildOnFailure]" DisplayName="If spec.FailBuildOnFailure" sap2010:WorkflowViewState.IdRef="If_76" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <Assign x:TypeArguments="x:Boolean" DisplayName="Set treatTestFailureAsBuildFailure to True" sap2010:WorkflowViewState.IdRef="Assign`1_24" mtbwt:BuildTrackingParticipant.Importance="Low" To="[treatTestFailureAsBuildFailure]" Value="[True]" />
                                              </If.Then>
                                            </If>
                                            <mtbwa:GetApprovedRequests DisplayName="Get Requests Approved for Check In" sap2010:WorkflowViewState.IdRef="GetApprovedRequests_4" mtbwt:BuildTrackingParticipant.Importance="None" Result="[failedRequests]" />
                                            <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Mark Requests for Retry" sap2010:WorkflowViewState.IdRef="RetryRequests_7" mtbwt:BuildTrackingParticipant.Importance="Low" Requests="[failedRequests]" />
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </ActivityAction>
                              </ForEach>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <If Condition="[(Not TestSpecs Is Nothing) And (TestSpecs.Count &gt; 0)]" DisplayName="If TestSpecs Is Not Nothing or Empty" sap2010:WorkflowViewState.IdRef="If_78" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <If.Then>
                            <mtbwa:WriteBuildWarning DisplayName="Write Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_7" Message="No automated tests will be run for this build because tests have been disabled for this build definition. To enable these tests, edit this build definition and set the Disable Tests process parameter to false." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                          </If.Then>
                        </If>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ForEach>
              <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If CompilationStatus = Unknown" sap2010:WorkflowViewState.IdRef="If_59" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="Set CompilationStatus to Succeeded" sap2010:WorkflowViewState.IdRef="SetBuildProperties_10" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                </If.Then>
              </If>
              <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If TestStatus = Unknown" sap2010:WorkflowViewState.IdRef="If_60" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Succeeded" sap2010:WorkflowViewState.IdRef="SetBuildProperties_11" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" />
                </If.Then>
              </If>
              <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="If TreatTestFailureAsBuildFailure And (TestStatus = Failed)" sap2010:WorkflowViewState.IdRef="If_61" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap2010:WorkflowViewState.IdRef="SetBuildProperties_12" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                </If.Then>
              </If>
            </Sequence>
            <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="If AssociateChangesetsAndWorkItems" sap2010:WorkflowViewState.IdRef="If_63" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <If Condition="[CreateLabel]" DisplayName="If CreateLabel and AssociateChangesetsAndWorkItems" sap2010:WorkflowViewState.IdRef="If_62" mtbwt:BuildTrackingParticipant.Importance="Low">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72">
                      <mtbwa:InvokeForReason DisplayName="Associate Changesets and Work Items for non-Shelveset Builds" sap2010:WorkflowViewState.IdRef="InvokeForReason_11" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                        <mtbwa:AssociateChangesetsAndWorkItems DisplayName="Associate Changesets and Work Items" sap2010:WorkflowViewState.IdRef="AssociateChangesetsAndWorkItems_2" Result="[associatedChangesets]" />
                      </mtbwa:InvokeForReason>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildWarning DisplayName="Write Associate Changesets and Work Items Warning" sap2010:WorkflowViewState.IdRef="WriteBuildWarning_6" Message="Cannot Associate Changesets and Work Items because the Label Sources option is set to False." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
              </If.Then>
            </If>
          </Parallel>
        </TryCatch.Try>
      </TryCatch>
      <If Condition="[BuildDetail.CompilationStatus = BuildPhaseStatus.Succeeded And BuildDetail.TestStatus = BuildPhaseStatus.Succeeded]" DisplayName="If Compiled Successfully" sap2010:WorkflowViewState.IdRef="If_43">
        <If.Then>
          <Sequence DisplayName="Checkin and Deploy" sap2010:WorkflowViewState.IdRef="Sequence_34">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="TestRunBuildID" />
              <Variable x:TypeArguments="mtbc:IBuildInformationNode" Name="BuildIDsInformationNode" />
              <Variable x:TypeArguments="x:Int32" Name="AgentCounter" />
              <Variable x:TypeArguments="x:String" Name="SpecifiedChangesetID" />
            </Sequence.Variables>
            <If Condition="[Not (TheShelveSet Is Nothing)]" DisplayName="If there is a shelveset" sap2010:WorkflowViewState.IdRef="If_64">
              <If.Then>
                <Sequence DisplayName="Checkin, stage for tests and queue test builds" sap2010:WorkflowViewState.IdRef="Sequence_78">
                  <Sequence DisplayName="Check in" sap2010:WorkflowViewState.IdRef="Sequence_74">
                    <mtbwa:CheckInGatedChanges DisplayName="Check In Gated Changes" sap2010:WorkflowViewState.IdRef="CheckInGatedChanges_1" IgnoreErrors="False" Result="[ChangeSet]" />
                    <If Condition="[ChangeSet Is Nothing]" DisplayName="If Nothing Checked In" sap2010:WorkflowViewState.IdRef="If_55">
                      <If.Then>
                        <Assign DisplayName="Get SourceGetVersion Changeset ID" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[SpecifiedChangesetID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[BuildDetail.SourceGetVersion]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Get Checkin Changeset ID" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[SpecifiedChangesetID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ChangeSet.ChangesetId.ToString()]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                  <If Condition="[NumberOfTestRunAgentsToQueueOn &gt; 0]" DisplayName="If can make test packs" sap2010:WorkflowViewState.IdRef="If_67">
                    <If.Then>
                      <Sequence DisplayName="Create Test Packs and Wait" sap2010:WorkflowViewState.IdRef="Sequence_81">
                        <mtbwa:InvokeProcess Arguments="[SourcesDirectory &amp; &quot; &quot; &amp; NumberOfTestRunAgentsToQueueOn &amp; &quot; &quot; &amp; BinariesDirectory &amp; &quot;\TestPacks&quot;]" DisplayName="Call to Test Pack Constructor" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\TestPackBuilderExe\TestPackBuilderExe.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_24">
                          <mtbwa:InvokeProcess.ErrorDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </mtbwa:InvokeProcess.ErrorDataReceived>
                          <mtbwa:InvokeProcess.OutputDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </mtbwa:InvokeProcess.OutputDataReceived>
                        </mtbwa:InvokeProcess>
                        <While DisplayName="Verify test pack was created" sap2010:WorkflowViewState.IdRef="While_2" Condition="[Not (FileIO.FileSystem.FileExists(BinariesDirectory &amp; &quot;\TestPacks\0.testpack&quot;))]">
                          <Delay DisplayName="Wait for Test Pack" Duration="00:00:00.1000000" sap2010:WorkflowViewState.IdRef="Delay_1" />
                        </While>
                      </Sequence>
                    </If.Then>
                  </If>
                  <Sequence DisplayName="Stage Binaries" sap2010:WorkflowViewState.IdRef="Sequence_56">
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\Services&quot;]" DisplayName="Create Services Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory + &quot;\Sources&quot;]" DisplayName="Create Sources Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\Webs&quot;]" DisplayName="Create Webs Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" />
                    <mtbwa:CreateDirectory Directory="[BinariesDirectory &amp; &quot;\Plugins&quot;]" DisplayName="Create Plugins Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" />
                    <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Services&quot;]" DisplayName="Copy Services Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_4" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Services&quot;]" />
                    <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Sources&quot;]" DisplayName="Copy Sources Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_5" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Sources&quot;]" />
                    <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Webs&quot;]" DisplayName="Copy Webs Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_6" Source="[SourcesDirectory &amp; &quot;\Dev2.Server\bin\Debug\Webs&quot;]" />
                    <mtbwa:CopyDirectory Destination="[BinariesDirectory &amp; &quot;\Plugins&quot;]" DisplayName="Copy Plugins Dir into Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_8" Source="[SourcesDirectory &amp; &quot;\BPM Resources\Plugins&quot;]" />
                    <mtbwa:CopyDirectory Destination="C:\Binaries" DisplayName="Create C:\Binaries" sap2010:WorkflowViewState.IdRef="CopyDirectory_11" Source="[BinariesDirectory]" />
                    <mtbwa:InvokeProcess Arguments="[&quot; -9 -r &quot;&quot;&quot; &amp; BuildDirectory &amp; &quot;\DevMergeStaging&quot; &amp; &quot;&quot;&quot; &quot;&quot;C:\Binaries&quot;&quot;&quot;]" DisplayName="Zip C:\Binaries" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\zip.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_12">
                      <mtbwa:InvokeProcess.ErrorDataReceived>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </mtbwa:InvokeProcess.ErrorDataReceived>
                      <mtbwa:InvokeProcess.OutputDataReceived>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </mtbwa:InvokeProcess.OutputDataReceived>
                    </mtbwa:InvokeProcess>
                    <mtbwa:InvokeProcess DisplayName="Clean Local Staging" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\clean - Local Staging.bat&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_16">
                      <mtbwa:InvokeProcess.ErrorDataReceived>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </mtbwa:InvokeProcess.ErrorDataReceived>
                      <mtbwa:InvokeProcess.OutputDataReceived>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                          </ActivityAction.Argument>
                          <mtbwa:WriteBuildMessage DisplayName="WriteOutput" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_7" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </ActivityAction>
                      </mtbwa:InvokeProcess.OutputDataReceived>
                    </mtbwa:InvokeProcess>
                    <InvokeMethod DisplayName="Create Staging Directory" sap2010:WorkflowViewState.IdRef="InvokeMethod_22" MethodName="CreateDirectory" TargetType="si:Directory">
                      <InArgument x:TypeArguments="x:String">[TestRunStagingDir]</InArgument>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="ChangeSet Specific Stage" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Copy" TargetType="si:File">
                      <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\DevMergeStaging.zip"]</InArgument>
                      <InArgument x:TypeArguments="x:String">["\\rsaklfsvrtfsbld\Automated Builds\TestRunStaging\" &amp; SpecifiedChangesetID &amp; ".zip"]</InArgument>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="Delete Zip" sap2010:WorkflowViewState.IdRef="InvokeMethod_19" MethodName="Delete" TargetType="si:File">
                      <InArgument x:TypeArguments="x:String">[BuildDirectory &amp; "\DevMergeStaging.zip"]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                  <If Condition="[(BranchID = &quot;DEV&quot;) Or (BranchID = &quot;Release&quot;) Or (BranchID = &quot;Testing&quot;)]" DisplayName="If Can Queue Test Builds" sap2010:WorkflowViewState.IdRef="If_56">
                    <If.Then>
                      <Sequence DisplayName="Queue All CI Test Builds and Queue Wait for All Builds" sap2010:WorkflowViewState.IdRef="Sequence_76">
                        <Assign DisplayName="Init Count" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[AgentCounter]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                        </Assign>
                        <While DisplayName="While count is less than total" sap2010:WorkflowViewState.IdRef="While_1" Condition="[AgentCounter &lt;= NumberOfTestRunAgentsToQueueOn - 1]">
                          <Sequence DisplayName="Queue Next CI Test Build For Test Pack" sap2010:WorkflowViewState.IdRef="Sequence_73">
                            <mtbwa:InvokeProcess Arguments="[&quot;&quot;&quot;http://rsaklfsvrgendev:8080/tfs/&quot;&quot; &quot;&quot;DEV2 SCRUM Project&quot;&quot; &quot;&quot;CI Test Run - &quot; &amp; BranchID &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; BuildDetail.RequestedBy &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; SpecifiedChangesetID &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; AgentCounter &amp; &quot;&quot;&quot;&quot;]" DisplayName="Queue Async Unit, Integration and Coded UI for Test Pack" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\QueueBuild\QueueCIBuildForTestPack.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_23" Result="[TestRunBuildID]">
                              <mtbwa:InvokeProcess.ErrorDataReceived>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </mtbwa:InvokeProcess.ErrorDataReceived>
                              <mtbwa:InvokeProcess.OutputDataReceived>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </mtbwa:InvokeProcess.OutputDataReceived>
                            </mtbwa:InvokeProcess>
                            <Assign DisplayName="Add Build ID to List" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[WaitForBuildIDs]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[WaitForBuildIDs &amp; "," &amp; TestRunBuildID]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Increment Count" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[AgentCounter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[AgentCounter + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </While>
                        <mtbwa:InvokeProcess Arguments="[&quot;&quot;&quot;http://rsaklfsvrgendev:8080/tfs/&quot;&quot; &quot;&quot;DEV2 SCRUM Project&quot;&quot; &quot;&quot;Waiting to Send CI Report&quot;&quot; &quot;&quot;&quot; &amp; BuildDetail.RequestedBy &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; SpecifiedChangesetID &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; BranchID &amp; &quot;&quot;&quot; &quot;&quot;&quot; &amp; WaitForBuildIDs &amp; &quot;&quot;&quot;&quot;]" DisplayName="Queue Wait" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\QueueBuild\QueueCIWaitForBuildIDs.exe&quot;]" sap2010:WorkflowViewState.IdRef="InvokeProcess_25" Result="[TestRunBuildID]">
                          <mtbwa:InvokeProcess.ErrorDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </mtbwa:InvokeProcess.ErrorDataReceived>
                          <mtbwa:InvokeProcess.OutputDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </mtbwa:InvokeProcess.OutputDataReceived>
                        </mtbwa:InvokeProcess>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <mtbwa:WriteBuildWarning sap2010:WorkflowViewState.IdRef="WriteBuildWarning_5" Message="No Test Builds Will Be Queued for this definition, to enable this feature edit the build definition process parameters." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[Not StagingDir Is Nothing]" DisplayName="If can do dev merge staging" sap2010:WorkflowViewState.IdRef="If_65">
              <If.Then>
                <Sequence DisplayName="Dev Merge Staging" sap2010:WorkflowViewState.IdRef="Sequence_79">
                  <mtbwa:InvokeProcess DisplayName="Clear Staging" FileName="[SourcesDirectory &amp; &quot;\BuildUtils\Cleaning Utils\&quot; + CleaningUtilFileName]" sap2010:WorkflowViewState.IdRef="InvokeProcess_15">
                    <mtbwa:InvokeProcess.ErrorDataReceived>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                        </ActivityAction.Argument>
                      </ActivityAction>
                    </mtbwa:InvokeProcess.ErrorDataReceived>
                    <mtbwa:InvokeProcess.OutputDataReceived>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                        </ActivityAction.Argument>
                      </ActivityAction>
                    </mtbwa:InvokeProcess.OutputDataReceived>
                  </mtbwa:InvokeProcess>
                  <mtbwa:CopyDirectory Destination="[StagingDir]" DisplayName="Do DevMergeStaging" sap2010:WorkflowViewState.IdRef="CopyDirectory_12" Source="[BinariesDirectory]" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage DisplayName="Inform Developer of Status" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_10" Message="******** Gated Test Run Failed, Check-in Aborted. ********" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </If.Else>
      </If>
      <If Condition="[DeleteWorkspaceAtTheEnd]" DisplayName="If Can Delete Workspace At The End" sap2010:WorkflowViewState.IdRef="If_54">
        <If.Then>
          <Sequence DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="Sequence_50">
            <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap2010:WorkflowViewState.IdRef="DeleteWorkspace_5" mtbwt:BuildTrackingParticipant.Importance="Low" Name="[WorkspaceName]" />
            <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_6" mtbwt:BuildTrackingParticipant.Importance="Low" />
            <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="Delete Test Results Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_7" mtbwt:BuildTrackingParticipant.Importance="Low" Recursive="[True]" />
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap2010:WorkflowViewState.IdRef="DeleteDirectory_8" mtbwt:BuildTrackingParticipant.Importance="Low" />
          </Sequence>
        </If.Then>
      </If>
      <mtbwa:WriteBuildMessage DisplayName="Completed Message" sap2010:WorkflowViewState.IdRef="WriteBuildMessage_6" Message="------------------- Build DONE -------------------" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
    </mtbwa:AgentScope>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetBuildDetail_1" sap:VirtualizedContainerService.HintSize="3213,22" />
      <sap2010:ViewStateData Id="WriteBuildMessage_1" sap:VirtualizedContainerService.HintSize="3213,22" />
      <sap2010:ViewStateData Id="UpdateBuildNumber_1" sap:VirtualizedContainerService.HintSize="3213,22" />
      <sap2010:ViewStateData Id="SetBuildProperties_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_68" sap:VirtualizedContainerService.HintSize="3213,208" />
      <sap2010:ViewStateData Id="GetBuildAgent_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetBuildDirectory_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_25" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="WriteBuildWarning_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign`1_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="3191,1100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeleteDirectory_5" sap:VirtualizedContainerService.HintSize="687,22" />
      <sap2010:ViewStateData Id="DeleteWorkspace_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CreateWorkspace_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetWorkspace_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CreateWorkspace_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateWorkspace_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="440,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_53" sap:VirtualizedContainerService.HintSize="687,559" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="687,60" />
      <sap2010:ViewStateData Id="RetryRequests_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SyncWorkspace_2" sap:VirtualizedContainerService.HintSize="234,157" />
      <sap2010:ViewStateData Id="WriteBuildError_4" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="DeleteWorkspace_8" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_11" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CreateWorkspace_6" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="RetryRequests_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SyncWorkspace_3" sap:VirtualizedContainerService.HintSize="234,157" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="256,489">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="687,384" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="3191,1269">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CopyDirectory_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyDirectory_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="3191,497" />
      <sap2010:ViewStateData Id="RevertWorkspace_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_7" sap:VirtualizedContainerService.HintSize="464,146" />
      <sap2010:ViewStateData Id="CopyDirectory_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_37" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="486,518">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign`1_20" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_57" sap:VirtualizedContainerService.HintSize="2351,208" />
      <sap2010:ViewStateData Id="ConvertWorkspaceItem_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MSBuild_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetBuildProperties_9" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="OpenWorkItem_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_9" sap:VirtualizedContainerService.HintSize="222,146" />
      <sap2010:ViewStateData Id="If_58" sap:VirtualizedContainerService.HintSize="464,294" />
      <sap2010:ViewStateData Id="GetApprovedRequests_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="RetryRequests_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="RevertWorkspace_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_10" sap:VirtualizedContainerService.HintSize="464,146" />
      <sap2010:ViewStateData Id="Rethrow_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="486,809">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="418,435" />
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="2351,583" />
      <sap2010:ViewStateData Id="Assign`1_21" sap:VirtualizedContainerService.HintSize="740,22" />
      <sap2010:ViewStateData Id="FindMatchingFiles_1" sap:VirtualizedContainerService.HintSize="740,22" />
      <sap2010:ViewStateData Id="GenerateRunSettings_1" sap:VirtualizedContainerService.HintSize="284,22" />
      <sap2010:ViewStateData Id="RunTests_1" sap:VirtualizedContainerService.HintSize="284,212" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="306,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RunTests_2" sap:VirtualizedContainerService.HintSize="284,212" />
      <sap2010:ViewStateData Id="If_69" sap:VirtualizedContainerService.HintSize="615,546" />
      <sap2010:ViewStateData Id="If_70" sap:VirtualizedContainerService.HintSize="740,694" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="762,942">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign`1_22" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ConvertWorkspaceItem_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MSTest_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign`1_23" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="FindMatchingFiles_2" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="ConvertWorkspaceItem_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MSTest_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MSTest_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_71" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="486,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_72" sap:VirtualizedContainerService.HintSize="611,628" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="633,876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_73" sap:VirtualizedContainerService.HintSize="880,1024" />
      <sap2010:ViewStateData Id="If_74" sap:VirtualizedContainerService.HintSize="1667,1172" />
      <sap2010:ViewStateData Id="WriteBuildError_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_75" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_13" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign`1_24" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_76" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="GetApprovedRequests_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="RetryRequests_7" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="486,763">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="1671,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_11" sap:VirtualizedContainerService.HintSize="1685,1399" />
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="1715,1547" />
      <sap2010:ViewStateData Id="If_77" sap:VirtualizedContainerService.HintSize="1840,1695" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="1862,1819">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_78" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="If_79" sap:VirtualizedContainerService.HintSize="2351,1967" />
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="2373,2962">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="2403,3110" />
      <sap2010:ViewStateData Id="SetBuildProperties_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_59" sap:VirtualizedContainerService.HintSize="2403,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_60" sap:VirtualizedContainerService.HintSize="2403,208" />
      <sap2010:ViewStateData Id="SetBuildProperties_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_61" sap:VirtualizedContainerService.HintSize="2403,208" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="2425,3978">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssociateChangesetsAndWorkItems_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeForReason_11" sap:VirtualizedContainerService.HintSize="222,146" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="244,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_62" sap:VirtualizedContainerService.HintSize="469,418" />
      <sap2010:ViewStateData Id="If_63" sap:VirtualizedContainerService.HintSize="594,3978" />
      <sap2010:ViewStateData Id="Parallel_5" sap:VirtualizedContainerService.HintSize="3173,4024" />
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="3191,4229" />
      <sap2010:ViewStateData Id="CheckInGatedChanges_1" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_55" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="711,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeProcess_24" sap:VirtualizedContainerService.HintSize="464,264" />
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,218" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="486,646">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_67" sap:VirtualizedContainerService.HintSize="711,794" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CreateDirectory_3" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CopyDirectory_4" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CopyDirectory_5" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CopyDirectory_6" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CopyDirectory_8" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="CopyDirectory_11" sap:VirtualizedContainerService.HintSize="234,22" />
      <sap2010:ViewStateData Id="InvokeProcess_12" sap:VirtualizedContainerService.HintSize="234,264" />
      <sap2010:ViewStateData Id="WriteBuildMessage_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeProcess_16" sap:VirtualizedContainerService.HintSize="234,271" />
      <sap2010:ViewStateData Id="InvokeMethod_22" sap:VirtualizedContainerService.HintSize="234,132" />
      <sap2010:ViewStateData Id="InvokeMethod_8" sap:VirtualizedContainerService.HintSize="234,132" />
      <sap2010:ViewStateData Id="InvokeMethod_19" sap:VirtualizedContainerService.HintSize="234,132" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="711,1773">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeProcess_23" sap:VirtualizedContainerService.HintSize="242,264" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="264,588">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="464,746" />
      <sap2010:ViewStateData Id="InvokeProcess_25" sap:VirtualizedContainerService.HintSize="464,264" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="486,1274">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildWarning_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_56" sap:VirtualizedContainerService.HintSize="711,1422" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="733,4627">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_64" sap:VirtualizedContainerService.HintSize="858,4775" />
      <sap2010:ViewStateData Id="InvokeProcess_15" sap:VirtualizedContainerService.HintSize="200,264" />
      <sap2010:ViewStateData Id="CopyDirectory_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="222,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_65" sap:VirtualizedContainerService.HintSize="858,598" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="880,5537">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteBuildMessage_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="3191,5685" />
      <sap2010:ViewStateData Id="DeleteWorkspace_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteDirectory_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_54" sap:VirtualizedContainerService.HintSize="3191,480" />
      <sap2010:ViewStateData Id="WriteBuildMessage_6" sap:VirtualizedContainerService.HintSize="3191,22" />
      <sap2010:ViewStateData Id="AgentScope_1" sap:VirtualizedContainerService.HintSize="3213,13646" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="3235,14204">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TfsBuild.Process_1" sap:VirtualizedContainerService.HintSize="3275,14284" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>