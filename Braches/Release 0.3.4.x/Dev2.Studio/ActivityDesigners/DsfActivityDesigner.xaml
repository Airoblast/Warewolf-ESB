<sap:ActivityDesigner x:Class="Unlimited.Applications.BusinessDesignStudio.Activities.DsfActivityDesigner"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                      xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"
                      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                      xmlns:local="clr-namespace:Dev2.Studio.AppResources.Behaviors"
                      MouseLeave="DsfActivityDesigner_OnMouseLeave"
                      MouseEnter="DsfActivityDesigner_OnMouseEnter" 
                      xmlns:customControls="clr-namespace:Dev2.Studio.CustomControls"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:behavior="clr-namespace:Dev2.CustomControls.Behavior;assembly=Dev2.CustomControls"
                      xmlns:adorners="clr-namespace:Dev2.Activities.Adorners;assembly=Dev2.Activities.Designers"
                      xmlns:ui="clr-namespace:Dev2.UI;assembly=Dev2.Intellisense"
                      xmlns:behaviors="clr-namespace:Dev2.Studio.AppResources.Behaviors;assembly=Dev2.CustomControls"
                      Name="ADesigner"                      
                      MinWidth="250"
                      PreviewMouseDoubleClick="DsfActivityDesigner_OnPreviewMouseDoubleClick"
                      PreviewDragEnter="DsfActivityDesigner_OnPreviewDragEnter">
    
                      <!--GotKeyboardFocus="DsfActivityDesigner_OnGotKeyboardFocus"
                      PreviewTextInput="DsfActivityDesigner_OnPreviewTextInput"                     
                      MouseMove="DsfActivityDesigner_OnMouseMove"-->
    <i:Interaction.Behaviors>
        <behavior:ActualSizeBindingBehavior x:Name="ActualSizeBindingBehavior" HorizontalOffset="1"/>
        <local:ActivityDesignerAugmentationBehavior x:Name="DesignerAugmentationBehavior"
                                                    DataContext="{Binding ElementName=ADesigner}"
                                                    SupressConnectorNodes="{Binding IsAdornerOpen, Mode=TwoWay}">
            <local:ActivityDesignerAugmentationBehavior.TopTemplate>
                <DataTemplate>
                    <Grid Visibility="{Binding ShowAdorners, Converter={StaticResource BoolToVisibilityConverterPositive}}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!--<Border Grid.Row="0" Margin="245,0,0,0" HorizontalAlignment="Stretch" BorderBrush="#FFE5C365" BorderThickness="0,1,1,0" CornerRadius="0,3,0,0" Background="#FFFFE8A6" VerticalAlignment="Stretch" MouseDown="UIElement_OnMouseDown" />-->
                        <!-- The name of this border is extremely important due to hack to get adorners margin right-->
                        <Border Grid.Row="0"
                                x:Name="AdornerBorder"
                                HorizontalAlignment="Stretch" 
                                BorderBrush="{Binding (local:ActivityDesignerAugmentationBehavior.TitleBarBorderBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" 
                                BorderThickness="0,1,1,0" CornerRadius="0,3,0,0" 
                                Background="{Binding (local:ActivityDesignerAugmentationBehavior.TitleBarBackground), Mode=OneWay, RelativeSource={RelativeSource Self}}" 
                                VerticalAlignment="Stretch" MouseLeftButtonDown="UIElement_OnMouseLeftButtonDown" 
                                MouseLeftButtonUp="UIElement_OnMouseLeftButtonUp" 
                                PreviewMouseMove="UIElement_OnPreviewMouseMove" />
                        <StackPanel Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal"        
                                    Background="{Binding (local:ActivityDesignerAugmentationBehavior.TitleBarBackground), Mode=OneWay, RelativeSource={RelativeSource Self}}" 
                                    Margin="0,1,1,0" Height="20">
                            <Button Command="{Binding DataContext.OpenParentCommand}" ToolTip="Edit" 
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    IsEnabled="{Binding DataContext.IsEditable, Mode=TwoWay}"
                                    PreviewMouseMove="UIElement_OnPreviewMouseMove" 
                                    PreviewMouseLeftButtonDown="UIElement_OnPreviewMouseLeftButtonDown" 
                                    PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                                    AutomationProperties.AutomationId="{Binding ServiceName, Source={RelativeSource Self}, StringFormat=[UI_{0}__EditBtn_AutoID]}">
                                <Image Source="/Images/ServicePropertyEdit-32.png" Width="15" Height="15"/>
                                </Button>
                            <adorners:AdornerToggleButton  x:Name="OpenMappingsToggle"  IsChecked="{Binding DataContext.ShowMapping,Mode=TwoWay}"                             
                                                           IsEnabled="{Binding DataContext.IsEditable, Mode=TwoWay}"
                                    PreviewMouseLeftButtonDown="UIElement_OnPreviewMouseLeftButtonDown" 
                                    PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                                    PreviewMouseMove="UIElement_OnPreviewMouseMove" 
                                    Checked="OpenMappingsToggle_OnChecked"
                                    Unchecked="OpenMappingsToggle_OnChecked"  
                                    AutomationProperties.AutomationId="{Binding ServiceName, Source={RelativeSource Self}, StringFormat=[UI_{0}_OpenMappingBtn_AutoID]}">
                                <Grid>
                                    <Image Source="/Images/ServiceExpandMapping-32.png" Width="15" Height="15" 
                                           ToolTip="Open Mappings"                              
                                           Visibility="{Binding IsChecked, ElementName=OpenMappingsToggle, Converter={StaticResource BoolToVisibilityConverterNegative}}"/>
                                    <Image Source="/Images/ServiceCollapseMapping-32.png" Width="15" Height="15" 
                                           ToolTip="Close Mappings"       
                                           Visibility="{Binding  IsChecked, ElementName=OpenMappingsToggle, Converter={StaticResource BoolToVisibilityConverterPositive}}"/>
                                </Grid>
                            </adorners:AdornerToggleButton>
                            <!--<Button Command="{Binding DataContext.OpenWizardCommand}" Visibility="{Binding Path=DataContext.HasWizard,Converter={StaticResource BoolToVisConverter}}" ToolTip="Wizard"
                                    PreviewMouseMove="UIElement_OnPreviewMouseMove" PreviewMouseLeftButtonDown="UIElement_OnPreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Image Source="/Images/ServiceWizard-32.png" Width="15" Height="15"/>
                                    <AutomationProperties.AutomationId>
                                        <MultiBinding StringFormat="[UI_{0}_OpenWizardBtn_AutoID]">
                                            <Binding Path="ServiceName" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </AutomationProperties.AutomationId>
                                </Button>-->
                            <!--<Button Command="{Binding DataContext.OpenSettingsCommand}" ToolTip="Settings"
                                    PreviewMouseMove="UIElement_OnPreviewMouseMove" PreviewMouseLeftButtonDown="UIElement_OnPreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Image Source="/Images/ServiceSettings-32.png" Width="15" Height="15"/>
                                    <AutomationProperties.AutomationId>
                                        <MultiBinding StringFormat="[UI_{0}_OpenSettingsBtn_AutoID]">
                                            <Binding Path="ServiceName" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </AutomationProperties.AutomationId>
                                </Button>-->
                            <!--<Button Command="{Binding DataContext.OpenHelpCommand}" Visibility="{Binding Path=DataContext.HasHelpLink, Converter={StaticResource BoolToVisConverter}}" ToolTip="Help"
                                    PreviewMouseMove="UIElement_OnPreviewMouseMove" PreviewMouseLeftButtonDown="UIElement_OnPreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Image Source="/Images/ServiceHelp-32.png" Width="15" Height="15"/>
                                    <AutomationProperties.AutomationId>
                                        <MultiBinding StringFormat="[UI_{0}_OpenHelpBtn_AutoID]">
                                            <Binding Path="ServiceName" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </AutomationProperties.AutomationId>
                                </Button>-->
                            </StackPanel>

                        <ContentControl x:Name="resizeContent"
                                        MinHeight="250"   
                                        MinWidth="300"
                                        Width="300"
                                        Grid.Row="1" Padding="5" 
                                        Visibility="{Binding Path=IsChecked, ElementName=OpenMappingsToggle,
                                            Converter={StaticResource BoolToVisibilityConverterPositive}}" 
                                        Loaded="ResizeContent_OnLoaded">
                            <Border x:Name="contentHost" HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="0,0,3,3" Background="White" 
                                    BorderThickness="1"
                                    BorderBrush="{Binding (local:ActivityDesignerAugmentationBehavior.TitleBarBorderBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="7" />
                                    </Grid.RowDefinitions>
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="7"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Grid Grid.Column="1" Grid.Row="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Content="Inputs" Style="{StaticResource Dev2HeadingLabelStyle}"></Label>
                                        <DataGrid x:Name="inputMappings" Style="{StaticResource DesignSurfaceDataGrid}" 
                                                  Grid.Row="1" ItemsSource="{Binding Path=DataContext.DataMappingViewModel.Inputs}">
                                            <DataGrid.Columns>
                                                <DataGridTemplateColumn Header="From data or variable" Width="*" MinWidth="125" IsReadOnly="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <ui:IntellisenseTextBox AllowUserInsertLine="False" Text="{Binding Path=MapsTo, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" KeyUp="InputTxt_KeyUp">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="KeyDown">
                                                                        <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsNew" Value="False"></ei:ChangePropertyAction>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                                <ui:IntellisenseTextBox.Style>
                                                                    <Style TargetType="ui:IntellisenseTextBox" BasedOn="{StaticResource {x:Type ui:IntellisenseTextBox}}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=IsNew}"
                                                                                         Value="True">
                                                                                <Setter Property="Control.Background"
                                                                                        Value="{StaticResource WarningBrush}"></Setter>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Path=RequiredMissing}"
                                                                                         Value="True">
                                                                                <Setter Property="Control.BorderBrush"
                                                                                        Value="{StaticResource ErrorBrush}"></Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>                                                                   
                                                                </ui:IntellisenseTextBox.Style>
                                                            </ui:IntellisenseTextBox>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="To service" Width="SizeToCells" MinWidth="65" IsReadOnly="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=DisplayName}" TextTrimming="CharacterEllipsis">
                                                                <TextBlock.ToolTip>
                                                                    <ToolTip Content="{Binding Path=DisplayName}" />
                                                                </TextBlock.ToolTip>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                    <customControls:SimpleGridSplitter Background="LightGray" Margin="0,2,0,0" Height="7" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                                    <Grid Grid.Column="1" Grid.Row="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Content="Outputs" Style="{StaticResource Dev2HeadingLabelStyle}"></Label>
                                        <DataGrid x:Name="outputMappings" Style="{StaticResource DesignSurfaceDataGrid}" 
                                                  Grid.Row="1" ItemsSource="{Binding Path=DataContext.DataMappingViewModel.Outputs}">
                                            <DataGrid.Columns>
                                                <DataGridTemplateColumn Header="From service" Width="SizeToCells" MinWidth="90" IsReadOnly="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=DisplayName}" TextTrimming="CharacterEllipsis">
                                                                <TextBlock.ToolTip>
                                                                    <ToolTip Content="{Binding Path=DisplayName}" />
                                                                </TextBlock.ToolTip>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="To variable" Width="*" MinWidth="125"  IsReadOnly="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <ui:IntellisenseTextBox AllowUserInsertLine="False" WrapInBrackets="True" Text="{Binding Path=Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" KeyUp="OutputTxt_KeyUp"></ui:IntellisenseTextBox>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>

                                    <Thumb Grid.ColumnSpan="3" Grid.RowSpan="4" 
                                           Height="10" Width="10"
                                           HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                           Style="{StaticResource BottomRightResizeThumbStyle}" >
                                        <i:Interaction.Behaviors>
                                            <behaviors:ThumbResizeBehavior TargetElement="{Binding ElementName=resizeContent}" />
                                        </i:Interaction.Behaviors>
                                    </Thumb>

                                    <!--<Canvas Grid.RowSpan="3" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="False" Height="10" Width="10">
                                        <Border Background="Pink" Height="10" Width="10" Canvas.Left="7" Canvas.Top="7"></Border>

                                    </Canvas>-->
                                </Grid>
                            </Border>
                        </ContentControl>
                    </Grid>
                </DataTemplate>
            </local:ActivityDesignerAugmentationBehavior.TopTemplate>
            <!--<local:ActivityDesignerAugmentationBehavior.BottomTemplate>
                <DataTemplate>
                    <Border Padding="3" CornerRadius="0,0,3,3" Background="White" VerticalAlignment="Center" Margin="0,-3,0,0" Visibility="{Binding DataContext.ShowAdorners, Converter={StaticResource BoolToVisibilityConverterPositive}}" BorderBrush="{Binding (local:ActivityDesignerAugmentationBehavior.TitleBarBorderBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" BorderThickness="1">
                        <ItemsControl Grid.IsSharedSizeScope="True"  ItemsSource="{Binding Path=DataContext.Errors}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="A"/>
                                            <ColumnDefinition SharedSizeGroup="B"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Image Width="16" Height="16" Grid.Column="0" Source="{Binding Path=ErrorType, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ErrorTypeToImageConverter}}">
                                        </Image>
                                        <Button Grid.Column="1" Style="{StaticResource LinkButton}" Command="{Binding Path=FixAction}" Content="{Binding Path=UserErrorMessage, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </DataTemplate>
            </local:ActivityDesignerAugmentationBehavior.BottomTemplate>-->
        </local:ActivityDesignerAugmentationBehavior>
    </i:Interaction.Behaviors>
    <sap:ActivityDesigner.Icon>
        <DrawingBrush>
            <DrawingBrush.Drawing>
                <ImageDrawing ImageSource="{Binding IconPath,Mode=OneWay}">
                    <ImageDrawing.Rect>
                        <Rect Location="0,0" Size="16,16" ></Rect>
                    </ImageDrawing.Rect>
                </ImageDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
    </sap:ActivityDesigner.Icon>
    <sap:ActivityDesigner.Resources>
        
    </sap:ActivityDesigner.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <ItemsControl Grid.Column="0" Grid.IsSharedSizeScope="True"  ItemsSource="{Binding Path=Properties}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,-4,0,-4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A"/>
                            <ColumnDefinition SharedSizeGroup="B"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Margin="0,0,-2,0" Content="{Binding Path=Key,UpdateSourceTrigger=PropertyChanged}">
                        </Label>
                        <Label Grid.Column="1" Content="{Binding Path=Value,UpdateSourceTrigger=PropertyChanged}">
                        </Label>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <ContentControl Grid.Column="1"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
            <ContentControl.ToolTip>
                <ItemsControl ItemsSource="{Binding Path=Errors}"
                              ItemTemplate="{StaticResource ErrorListTemplate}" />
            </ContentControl.ToolTip>
            <Grid>
                <Image Source="{Binding Path=WorstError,Converter={StaticResource ErrorTypeToImageConverter}}"
                       Visibility="{Binding Path=IsWorstErrorReadOnly, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                       Height="16"
                       Width="16"
                       Margin="0,0,4,4">
                </Image>
                <Button Command="{Binding Path=FixErrorsCommand}"
                        Visibility="{Binding Path=IsWorstErrorReadOnly, Converter={StaticResource BoolToVisibilityConverterNegative}}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.ToolTip>
                        <ItemsControl ItemsSource="{Binding Path=Errors}"
                                      ItemTemplate="{StaticResource ErrorListTemplate}" />
                    </Button.ToolTip>
                    <Image Source="{Binding Path=WorstError,Converter={StaticResource ErrorTypeToImageConverter}}"
                           Height="16"
                           Width="16">
                    </Image>
                </Button>
                <AutomationProperties.AutomationId>
                    <MultiBinding StringFormat="[UI_{0}_FixBtn_AutoID]">
                        <Binding Path="ServiceName"
                                 RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </AutomationProperties.AutomationId>
            </Grid>
        </ContentControl>
    </Grid>
</sap:ActivityDesigner>
