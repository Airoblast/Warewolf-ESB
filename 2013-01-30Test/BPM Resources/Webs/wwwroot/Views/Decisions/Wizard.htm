<div id="container">
    <div class="float-left">
        <div id="header">
            <h1>Decision Flow</h1>
        </div>
        <div id="body">
            <form id="mainForm">
                <div id="mainFormError" class="error" style="display: none; text-align: left; margin-top: 1em; margin-left: 1em; float: left; ">
                    <img src="images/warning.gif" alt="Warning!" width="24" height="24" class="icon" />
                    <span id="Dev2Msg">You missed some fields.The have been highlighted below.</span>
                </div>
                <div class="decision-form">
                    <div>
						<div class="field">
							<label class="wideLabel">&nbsp; Evaluates a statement to True or False</label>
						</div>
					
						<div class="button-bar">
							<!--<span style="font-size:18px; float:left; margin-left:20px;">
								If: 
							</span>-->
							<button name="addRow" id="addRow" data-bind="click: addRow" title="Add a new statement" style="color:#009;"> Add Statement </button>
						</div>
						
						<!-- KO Template -->
						<div class="decision-wrapper scrollable" id="decisionView">							
							<div data-bind="template: { foreach: data.TheStack  }" id="decisionList" style="width:100%;">
								<div id="decisionRow">
									&nbsp; If :
									<input type="text" name="Col1" id="Col1" data-bind="value: Col1, visible: PopulatedColumnCnt > 0" class="veryShortField required"/>
									
									<select data-bind="options: $parent.data.decisionFunctions, value: EvaluationFn,optionsText: 'displayValue', optionsValue: 'optionValue', optionsCaption: 'Choose...', event:{ change: $parent.rowChanged}" class="shortField required">
									</select>
									
									<input type="text" name="Col2" id="Col2" data-bind="value : Col2, visible: PopulatedColumnCnt == 2" class="veryShortField required" /> 
									
									<span data-bind="visible: PopulatedColumnCnt == 3">
										<input type="text" name="Col2a" id="Col2a" data-bind="value: Col2" class="veryShortField required" />
										And
										<input type="text" name="Col3" id="Col3" data-bind="value: Col3" class="veryShortField required" />
									</span>
									
									<span class="floatRight" >
										<!-- data-bind="click: $parent.removeRow, visible: $index() >= 1" -->
										<button name="removeRow" id="removeRow" data-bind="click: $parent.removeRow, visible: $parent.ShowDelete($index())" title="Remove this statement" > 
											<img src="Images/cross.png" height="14" width="14" /> 
										</button>
									</span>
								</div>
							</div>
							
						</div>

						<div style="margin-top:20px; width:100%; float:left;">
							<div style="margin-left:-89px;">
								<label for="trueArmText" name="trueArm" id="trueArm" > True arm text </label>
								<input type="text" name="trueArmText" id="trueArmText" class="veryShortField" data-bind="value: data.TrueArmText" />
							</div>
							
							<div style="margin-left:-85px;">
								<label for="falseArmText" name="falseArm" id="falseArm" >False arm text</label>
								<input type="text" name="falseArmText" id="falseArmText" class="veryShortField" data-bind="value: data.FalseArmText"/>
							</div>
							
						</div>
						
						<div class="button-bar">
							<span style="float:left; width:290px;">
								<input type="checkbox" name="Mode" id="Mode" class="decision-mode" data-bind="checked: data.IsAnd, click: toggleMode"/>
								<label class="decision-mode-text">Require All decisions to be True</label>
							</span>
							<span>
								<button tabindex="8" type="button" name="cancel" id="cancelButton" data-bind="click: cancel">Cancel</button>
								<button tabindex="7" type="submit" name="save" id="saveButton" data-bind="click: save">Done</button>
							</span>
						</div>
						
						
					</div>
            </form>
        </div>
    </div>
</div>
<div id="saveDialogContainer">
</div>

<script type="text/javascript">

	function AppViewModel() {
		var self = this;
		var $mainForm = $("#mainForm");
		var $decisionView = $("#decisionView");

		// set title
		document.title = "Decision Flow";
		
		self.data = {
		
			/* Injected Data */
			Mode : ko.observable("AND"),
			TrueArmText : ko.observable("True"),
			FalseArmText : ko.observable("False"),
			IsAnd : ko.observable(true),
			TheStack : ko.observableArray([]),
			
			/* End Injected	Data */
			
			/* The data here must match the server's decision functions */
			decisionFunctions : ko.observableArray([
				
				{ displayValue : "There Is An Error", optionValue : "IsError", columnCount : 0 },
				{ displayValue : "There Is No Error", optionValue : "IsNotError", columnCount : 0 },
				
				{ displayValue : "Is Numeric", optionValue : "IsNumeric", columnCount : 1 },
				{ displayValue : "Is Not Numeric", optionValue : "IsNotNumeric", columnCount : 1 },
				{ displayValue : "Is Text", optionValue : "IsText", columnCount : 1 },
				{ displayValue : "Is Not Text", optionValue : "IsNotText", columnCount : 1 },
				{ displayValue : "Is Alphanumeric", optionValue : "IsAlphanumeric", columnCount : 1 },
				{ displayValue : "Is Not Alphanumeric", optionValue : "IsNotAlphanumeric", columnCount : 1 },
				{ displayValue : "Is XML", optionValue : "IsXML", columnCount : 1 },
				{ displayValue : "Is Not XML", optionValue : "IsNotXML", columnCount : 1 },
				{ displayValue : "Is Date", optionValue : "IsDate", columnCount : 1 },
				{ displayValue : "Is Not Date", optionValue : "IsNotDate", columnCount : 1 },
				{ displayValue : "Is Email", optionValue : "IsEmail", columnCount : 1 },
				{ displayValue : "Is Not Email", optionValue : "IsNotEmail", columnCount : 1 },
				
				
				{ displayValue : "Is RegEx", optionValue : "IsRegEx", columnCount : 2 },
				{ displayValue : "Is Equal", optionValue : "IsEqual", columnCount : 2 },
				{ displayValue : "Is Not Equal", optionValue : "IsNotEqual", columnCount : 2 },
				{ displayValue : "Is Less Than", optionValue : "IsLessThan", columnCount : 2 },
				{ displayValue : "Is Less Than or Equal", optionValue : "IsLessThanOrEqual", columnCount : 2 },
				{ displayValue : "Is Greater Than", optionValue : "IsGreaterThan", columnCount : 2 },
				{ displayValue : "Is Greater Than or Equal", optionValue : "IsGreaterThanOrEqual", columnCount : 2 },
				
				
				{ displayValue : "Starts With", optionValue : "IsStartsWith", columnCount : 2 },
				{ displayValue : "Ends With", optionValue : "IsEndsWith", columnCount : 2 },
				{ displayValue : "Contains", optionValue : "IsContains", columnCount : 2 },
				
				{ displayValue : "Is Between", optionValue : "IsBetween", columnCount : 3 },
			])
		}
		
		self.ShowDelete = function(idx){
			var result = false;
			
			if(self.data.TheStack().length > 1 && idx >=0){
				result = true;
			}
			
			return result;
		};
	 	 
		self.addRow = function() {
			// Default Row ;)
			self.data.TheStack.push({ Col1: '', Col2: '',  Col3: '', PopulatedColumnCnt : 0, EvaluationFn : 'IsNotError' });
			
			// Find the element and select it. -- decisionRow
			var $span =  $("#decisionRow:last-child");
			
			//var $li = $span.parent();
			//self.selectResourcePathElement($span);
			$decisionView.scrollTo($span, 280); // height of container
			
			// apply jquery-ui themes
			$("input[type=submit], a, button").button();
			
		};
	 
		self.removeRow = function() {
			
			// always keep at least one ;)
			//if(self.data.TheStack().length > 1){
				self.data.TheStack.remove(this);
			//}
			
		};
		
		self.rowChanged = function(elm){
			
			var idx = self.data.TheStack().indexOf(elm);
			var val = elm.EvaluationFn;
			
			// find function element to use ;)
			var cnt = ko.utils.arrayFirst(self.data.decisionFunctions(), function(item){
				return elm.EvaluationFn === item.optionValue;
			});
			
			self.data.TheStack.splice(idx,1, {Col1: elm.Col1, Col2: elm.Col2,  Col3: elm.Col3, PopulatedColumnCnt : cnt.columnCount, EvaluationFn : val});
			
			// apply jquery-ui themes
			$("input[type=submit], a, button").button();
			
		};
				
		self.toggleMode = function(){
			
			if(!self.data.IsAnd()){
				self.data.Mode("OR");
				self.data.IsAnd(false);
			}else{
				self.data.Mode("AND");
				self.data.IsAnd(true);
			}		
			
			return true;
		};
		
		self.save = function(){
			if(!$mainForm.validate().form()){
				return;
			}
			
			var dlID = window.location.search;			
			var jsonData = ko.toJSON(self.data);

			//alert(jsonData);
			
			$.post("Service/WebModel/SaveModel" + dlID, jsonData, function (result) {
				
				$("#Dev2Msg").html(result.message);

				Dev2Awesomium.Close();
				return true;
				
            });
		};
		
		self.cancel = function () {
            Dev2Awesomium.Cancel();
            return true;
        };
		
		self.AddDecision = function(data){
			self.data.TheStack.push(data);
			// apply jquery-ui themes
			$("input[type=submit], a, button").button();
		}
		
		self.Load = function(){
			var dlID = window.location.search; //.replace("postdlid", "dlid");
		
			var request = $.ajax({
				url: "Service/WebModel/FetchDecisionModel" + dlID,
				type: "post"
			});
			
			request.done(function(response, textStatus, json){
				
				if(response.TheStack != undefined){
					// load decisions
					for(var i = 0; i < response.TheStack.length; i++){
						vm.AddDecision({ Col1: response.TheStack[i].Col1, Col2: response.TheStack[i].Col2,  Col3: response.TheStack[i].Col3, PopulatedColumnCnt : response.TheStack[i].PopulatedColumnCount, EvaluationFn : response.TheStack[i].EvaluationFn });
					
					}
					
					// set Stack data
					self.data.Mode(response.Mode);
					
					if(response.Mode == "AND"){
						self.data.IsAnd(true);
					}else{
						self.data.IsAnd(false);
					}

					// set the arms
					self.data.TrueArmText(response.TrueArmText); 
					
					self.data.FalseArmText(response.FalseArmText);
					
				}else{
				
					// Add a decision
					vm.AddDecision({ Col1: '', Col2: '',  Col3: '', PopulatedColumnCnt : 0, EvaluationFn : 'IsNotError' });
				}
			});
			
			request.fail(function(response, textStatus, json){
				alert("An error occured : " + JSON.stringify(response));
			});
			
			
		}
		
		self.Load();

	}
	 
	 var vm = new AppViewModel();
		
	 ko.applyBindings(vm);	
		
</script>

