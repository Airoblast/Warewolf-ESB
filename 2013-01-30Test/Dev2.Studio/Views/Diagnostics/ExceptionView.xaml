<Window x:Class="Dev2.Studio.Views.Diagnostics.ExceptionView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Dev2.Studio.AppResources.Behaviors"
        xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
        Title="An unhandled exception has been encountered" 
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        WindowStartupLocation="CenterScreen"
        Height="420"
        Width="680"
        Icon="{Binding ErrorIcon}"
        SizeToContent="Manual">
    <i:Interaction.Behaviors>
        <local:WindowCloseBehviour CloseIndicator="{Binding CloseRequested}" />
    </i:Interaction.Behaviors>
    <Window.Resources>
        <HierarchicalDataTemplate x:Key="ExceptionItemTemplate"  ItemsSource="{Binding Exception}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Error :" Margin="5"/>
                <TextBlock Grid.Column="1" 
				Text="{Binding Message}" 
				TextWrapping="Wrap"	
				MaxWidth="{Binding Width, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
				Margin="5"/>
            </Grid>
        </HierarchicalDataTemplate>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Border Grid.Column="1" x:Name="circle" HorizontalAlignment="Center"
                                            BorderThickness="1" BorderBrush="DarkGray" VerticalAlignment="Center"
                                            CornerRadius="10">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Path Grid.Column="0" x:Name="arrow" Margin="5,0,0,0"
                                                  Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center"
                                                  SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2"
                                                  VerticalAlignment="Center" />
                                            <Label Grid.Column="1" Margin="0" Content="View Trace" />
                                        </Grid>
                                    </Border>
                                </Grid>
                                <ContentPresenter Grid.Column="0" HorizontalAlignment="Left" Margin="4,0,0,0"
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="True"
                                                  VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="circle" Value="#FF3C7FB1" />
                                <Setter Property="Stroke" TargetName="arrow" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="circle" Value="#FF526C7B" />
                                <Setter Property="BorderThickness" TargetName="circle" Value="1.5" />
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1"
                                       StrokeDashArray="1 2" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates" />
                                <VisualStateGroup x:Name="FocusStates" />
                                <VisualStateGroup x:Name="CheckStates" />
                                <VisualStateGroup x:Name="ValidationStates" />
                            </VisualStateManager.VisualStateGroups>
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" x:Name="circle" HorizontalAlignment="Center"
                                        BorderThickness="1" BorderBrush="DarkGray" VerticalAlignment="Center"
                                        CornerRadius="10">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Path Grid.Column="0" x:Name="arrow" Margin="5,0,0,0"
                                              Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center"
                                              SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2"
                                              VerticalAlignment="Center" />
                                        <Label x:Name="TraceLabel" Grid.Column="1" Margin="0" Padding="5,1,5,1"
                                               Content="View Trace" />
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Column="0" HorizontalAlignment="Left" Margin="0"
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="True"
                                                  VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                <Setter Property="Content" TargetName="TraceLabel" Value="Hide Trace" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="circle" Value="#FF3C7FB1" />
                                <Setter Property="Stroke" TargetName="arrow" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="circle" Value="#FF526C7B" />
                                <Setter Property="BorderThickness" TargetName="circle" Value="1.5" />
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExceptionExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates" />
                                <VisualStateGroup x:Name="FocusStates" />
                                <VisualStateGroup x:Name="ExpansionStates" />
                                <VisualStateGroup x:Name="ExpandDirectionStates" />
                                <VisualStateGroup x:Name="ValidationStates" />
                            </VisualStateManager.VisualStateGroups>
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              Content="{TemplateBinding Header}" DockPanel.Dock="Top"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}"
                                              Style="{StaticResource ExpanderDownHeaderStyle}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" Visibility="Collapsed"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="Style" TargetName="HeaderSite"
                                        Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Down">
                                <Setter Property="Style" TargetName="HeaderSite"
                                        Value="{StaticResource ExpanderDownHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid x:Name="LayoutRoot" cal:Bind.Model="{Binding .}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TreeView ItemTemplate="{DynamicResource ExceptionItemTemplate}"
                  ItemsSource="{Binding Exception}"
                  VerticalContentAlignment="Stretch"
                  Margin="10"
                  HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto" />

        <Expander Style="{DynamicResource ExceptionExpanderStyle}" Grid.Row="1" Margin="10,5">
            <ScrollViewer MaxHeight="250" VerticalScrollBarVisibility="Auto">
                <TextBlock Text="{Binding StackTrace}"
                           TextWrapping="WrapWithOverflow" ScrollViewer.CanContentScroll="True" />
            </ScrollViewer>
        </Expander>
        <Button x:Name="SendReport"
                Grid.Row="3" 
                HorizontalAlignment="Right" Content="Send Report" MinWidth="100" Margin="10,0,10,10" />
    </Grid>
</Window>