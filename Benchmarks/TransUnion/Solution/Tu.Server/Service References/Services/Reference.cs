//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Tu.Rules;

namespace Tu.Services {
    using System.Runtime.Serialization;
    using System;
       
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.IRulesService")]
    public interface IRulesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRulesService/IsValid", ReplyAction="http://tempuri.org/IRulesService/IsValidResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValidationResult))]
        ValidationResult IsValid(string ruleName, string fieldName, object fieldValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRulesService/IsValid", ReplyAction="http://tempuri.org/IRulesService/IsValidResponse")]
        System.Threading.Tasks.Task<ValidationResult> IsValidAsync(string ruleName, string fieldName, object fieldValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRulesServiceChannel : Tu.Services.IRulesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RulesServiceClient : System.ServiceModel.ClientBase<Tu.Services.IRulesService>, Tu.Services.IRulesService {
        
        public RulesServiceClient() {
        }
        
        public RulesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RulesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RulesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RulesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ValidationResult IsValid(string ruleName, string fieldName, object fieldValue) {
            return base.Channel.IsValid(ruleName, fieldName, fieldValue);
        }
        
        public System.Threading.Tasks.Task<ValidationResult> IsValidAsync(string ruleName, string fieldName, object fieldValue) {
            return base.Channel.IsValidAsync(ruleName, fieldName, fieldValue);
        }
    }
}
