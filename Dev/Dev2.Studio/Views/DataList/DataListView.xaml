<UserControl x:Class="Dev2.Studio.Views.DataList.DataListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Models="clr-namespace:Dev2.Studio.Core.Models.DataList;assembly=Dev2.Studio.Core"
             xmlns:behaviors="clr-namespace:Dev2.Studio.AppResources.Behaviors"
             xmlns:aprop="clr-namespace:Dev2.Studio.AppResources.AttachedProperties" 
             xmlns:ap="clr-namespace:Dev2.Studio.AppResources.AttachedProperties"
             ap:UIElementTitleProperty.Title="Data List View"        
             LostKeyboardFocus="UserControl_LostKeyboardFocus">
    <i:Interaction.Behaviors>
        <behaviors:UserControlFocusNextAndPreviousBehaviour/>
    </i:Interaction.Behaviors>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="2" />
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox x:Name="Filtertxt" Grid.Column="0" BorderBrush="#ccc" Text="{Binding Path=SearchText,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     HorizontalAlignment="Stretch">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="AutomationProperties.AutomationId" Value="UI_DataListSearchtxt_AutoID"/>
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource SearchHint}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Button Grid.Column="1" AutomationProperties.AutomationId="UI_AddRemovebtn_AutoID" Command="{Binding FindUnusedAndMissingCommand}" ToolTip="Updates the Data List to used variables only" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                    Margin="5,0,0,0">
                <Image Source="/images/AddIcon.png" Height="14" Width="14" />
            </Button>
            <Button Grid.Column="2" AutomationProperties.AutomationId="UI_Sortbtn_AutoID" Command="{Binding SortCommand}" ToolTip="Sorts the items alphabeticaly" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                    Margin="5,0,5,0">
                <Image Source="/images/Sorting.png" Height="18" Width="18" />
            </Button>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Row="0">

        </StackPanel>
        <Rectangle Grid.Row="1" Fill="LightGray"/>
        <TreeView Grid.Row="2" AllowDrop="True" KeyboardNavigation.TabNavigation="Cycle" IsTabStop="False" ItemsSource="{Binding Path=BaseCollection}" 
                  Name="scalarExplorer" BorderThickness="0" HorizontalContentAlignment="Left" Grid.IsSharedSizeScope="True">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type Models:DataListItemModel}" ItemsSource="{Binding Path=Children}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="37" SharedSizeGroup="B" />
                            <ColumnDefinition Width="37" SharedSizeGroup="C" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="NameTxt" Grid.Column="0" LostFocus="Nametxt_FocusLost" TextChanged="Nametxt_TextChanged" HorizontalAlignment="Stretch" MinWidth="75"
                                aprop:FocusAttachedProperty.IsFocused="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.ErrorMessage, UpdateSourceTrigger=PropertyChanged}" 
                                Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IsEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="AutomationProperties.AutomationId">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="[UI_This{0}_Parent{1}_AutoID]">
                                                <Binding Path="DataContext.Name" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="DataContext.Parent.DisplayName" RelativeSource="{RelativeSource Self}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Background" Value="{StaticResource DataListItemName}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.HasError, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                            <Setter Property="BorderBrush" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                            <i:Interaction.Behaviors>
                                <behaviors:TextboxSelectAllOnFocusBehavior/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <!--IsThreeState="{Binding IsRecordset}"-->
                        <CheckBox IsTabStop="False" Grid.Column="1" HorizontalAlignment="Center"
                                  IsChecked="{Binding Input}" VerticalAlignment="Center" Checked="Inputcbx_OnChecked" Unchecked="Inputcbx_OnChecked"/>
                        <!--<CheckBox IsTabStop="False" Grid.Column="1" HorizontalAlignment="Center" Visibility="{Binding IsRecordset, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                  IsChecked="{Binding RecordsetInput}" VerticalAlignment="Center" Checked="Inputcbx_OnChecked" Unchecked="Inputcbx_OnChecked"
                                  IsThreeState="True"/>-->

                        <CheckBox IsTabStop="False" Grid.Column="2" HorizontalAlignment="Center"
                                  IsChecked="{Binding Output}" VerticalAlignment="Center" Checked="Outputcbx_OnChecked" Unchecked="Outputcbx_OnChecked"/>
                        <!--<CheckBox IsTabStop="False" Grid.Column="2" HorizontalAlignment="Center" Visibility="{Binding IsRecordset, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                  IsChecked="{Binding RecordsetOutput}" VerticalAlignment="Center" Checked="Outputcbx_OnChecked" Unchecked="Outputcbx_OnChecked"
                                  IsThreeState="True"/>-->                        
                        
                        <TextBox x:Name="DescriptionTxt" IsTabStop="False" MinWidth="75" Grid.Column="3"
                                Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IsEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=DataContext.Description,RelativeSource={RelativeSource Self},Converter={StaticResource StringToAutomationIdConverter} }"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Background" Value="{StaticResource DataListItemDescription}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type Models:DataListHeaderItemModel}" ItemsSource="{Binding Path=Children}">
                    <StackPanel>
                        <Border Background="#eeeeee" Margin="2,2,2,2">
                            <Label Content="{Binding DisplayName}" Height="23" FontWeight="Bold"/>
                        </Border>
                        <Grid Margin="20,0,0,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition SharedSizeGroup="B" />
                                <ColumnDefinition SharedSizeGroup="C" />
                                <ColumnDefinition SharedSizeGroup="A" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Name" FontWeight="Bold"/>
                            <TextBlock Grid.Column="1" Text="Input" HorizontalAlignment="Center" FontWeight="Bold"/>
                            <TextBlock Grid.Column="2" Text="Ouput" HorizontalAlignment="Center" FontWeight="Bold"/>
                        </Grid>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeStyle}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="Visibility" Value="{Binding IsVisable, Converter={StaticResource BoolToVisConverter}}"/>
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontWeight" Value="UltraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>
