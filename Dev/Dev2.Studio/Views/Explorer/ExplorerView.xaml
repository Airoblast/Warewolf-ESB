<UserControl x:Class="Dev2.Studio.Views.Explorer.ExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ap="clr-namespace:Dev2.Studio.AppResources.AttachedProperties"
             xmlns:NavigationViews="clr-namespace:Dev2.Studio.Views.Navigation"         
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"                     
             xmlns:local="clr-namespace:Dev2.Studio.AppResources.Behaviors" 
             xmlns:Dev2="clr-namespace:Dev2.UI"
             xmlns:navigation="clr-namespace:Dev2.Studio.ViewModels.Navigation"
    Name="Explorer">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition  Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>


            <Dev2:ConnectControl Grid.ColumnSpan="2" Margin="5"
                                 LabelText="Connect:" 
                                 EnvironmentChangedCommand="{Binding EnvironmentChangedCommand}"
                                 ConnectButtonAutomationID="UI_ExplorerConnectBtn_AutoID"
                                 ServerComboBoxAutomationID="UI_ExplorerServerCbx_AutoID"/>

        <NavigationViews:NavigationView x:Name="TheNavigationView" DataContext="{Binding NavigationViewModel}" Grid.Row="1" Grid.ColumnSpan="2">
            <NavigationViews:NavigationView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <!--<EventSetter Event="TreeViewItem.DragOver" Handler="treeView_DragOver" />
                    <EventSetter Event="TreeViewItem.Drop" Handler="treeView_Drop" />
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="treeView_MouseMove" />
                    <EventSetter Event="TreeViewItem.PreviewMouseDown" Handler="treeView_MouseDown" />-->
                    <Setter Property="Visibility" Value="{Binding IsFiltered, Converter={StaticResource BoolToVisibilityConverterNegative}, Mode=OneWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=DataContext.DisplayName,RelativeSource={RelativeSource Self},Converter={StaticResource StringToAutomationIdConverter}}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontWeight" Value="UltraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </NavigationViews:NavigationView.ItemContainerStyle>
            <NavigationViews:NavigationView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type navigation:AbstractTreeViewModel}" ItemsSource="{Binding Path=Children}">

                    <Border IsHitTestVisible="True">
                        <Border.Resources>
                        </Border.Resources>
                        <Border.ContextMenu>
                            <ContextMenu Visibility="{Binding HasExecutableCommands, Converter={StaticResource BoolToVisConverter}}">
                                <ContextMenu.Resources>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="AutomationProperties.AutomationId" Value="UI_ExplorerContextMenu_AutoID" />
                                    </Style>
                                </ContextMenu.Resources>
                    
                                <MenuItem Header="Connect" Command="{Binding ConnectCommand}" Visibility="{Binding CanConnect, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Disconnect" Command="{Binding DisconnectCommand}" Visibility="{Binding CanDisconnect, Converter={StaticResource BoolToVisConverter}}" AutomationProperties.AutomationId="UI_ExplorerContextMenuDisconnectItem_AutoID" />
                                <MenuItem Header="File" Visibility="{Binding HasFileMenu, Converter={StaticResource BoolToVisConverter}}" AutomationProperties.AutomationId="UI_RibbonApplicationMenu_File" >
                                    <MenuItem Header="New Workflow" Command="{Binding Path=NewResourceCommand}" CommandParameter="Workflow" AutomationProperties.AutomationId="UI_RibbonApplicationMenu_New" />
                                    <MenuItem Header="New Service" >
                                        <!--                                <MenuItem Header="Remote Workflow" />-->
                                        <MenuItem Header="Database Procedure"  Command="{Binding Path=NewResourceCommand}"
                                             CommandParameter="DatabaseService"/>
                                        <MenuItem Header="Plugin"  Command="{Binding Path=NewResourceCommand}"
                                             CommandParameter="ResourceService"/>
                                    </MenuItem>
                                    <MenuItem Header="Add Source"  Command="{Binding Path=NewResourceCommand}"
                                             CommandParameter="Source">
                                        <MenuItem Header="Remote Warewolf" Command="{Binding Path=NewResourceCommand}"
                                             CommandParameter="Server"/>
                                        <MenuItem Header="Database" Command="{Binding Path=NewResourceCommand}"
                                             CommandParameter="DbSource"/>
                                        <MenuItem Header="Plugin" Command="{Binding Path=NewResourceCommand}"
                                             CommandParameter="ResourceSource"/>
                                    </MenuItem>
                                </MenuItem>
                                <MenuItem Header="Build" Command="{Binding BuildCommand}" Visibility="{Binding CanBuild, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Deploy" Command="{Binding DeployCommand}" Visibility="{Binding CanDeploy, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Show Dependencies" Command="{Binding ShowDependenciesCommand}" Visibility="{Binding CanShowDependencies, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Debug" Command="{Binding DebugCommand}" Visibility="{Binding CanDebug, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Run" Command="{Binding RunCommand}" Visibility="{Binding CanRun, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Edit" Command="{Binding EditCommand}" Visibility="{Binding CanEdit, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Manual Edit" Command="{Binding ManualEditCommand}" Visibility="{Binding CanManualEdit, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Delete" Command="{Binding DeleteCommand}" Visibility="{Binding CanDelete, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Create Wizard" Command="{Binding CreateWizardCommand}" Visibility="{Binding CanCreateWizard, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Edit Wizard" Command="{Binding EditWizardCommand}" Visibility="{Binding CanEditWizard, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Help" Command="{Binding HelpCommand}" Visibility="{Binding CanHelp, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Remove" Command="{Binding RemoveCommand}" Visibility="{Binding CanRemove, Converter={StaticResource BoolToVisConverter}}" />

                                <MenuItem Header="Properties" Command="{Binding ShowPropertiesCommand}" Visibility="{Binding CanShowProperties, Converter={StaticResource BoolToVisConverter}}" />
                            </ContextMenu>
                        </Border.ContextMenu>
                        <StackPanel Orientation="Horizontal" AllowDrop="True">                       
                            <i:Interaction.Behaviors>
                                <local:NavigationItemViewModelMouseDownBehavior SetActiveEnvironmentOnClick="True" OpenOnDoubleClick="True" SelectOnClick="True" />
                                <local:NavigationItemViewModelDragDropBehavior />
                            </i:Interaction.Behaviors>
                            <TextBlock Width="3"/>
                            <Image Width="24" Height="24" Margin="0,0,0,0">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource NavigationViewModelToImageConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="IconPath"/>
                                            <Binding Path="."/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <ContentControl Content="{Binding}">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type navigation:ResourceTreeViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding DisplayName}" Padding="3,0,0,0" Foreground="{Binding IsConnected, Converter={StaticResource BoolToDisabledFontColorConverter}}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type navigation:AbstractTreeViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding DisplayName}" Padding="3,0,0,0" Foreground="{Binding IsConnected, Converter={StaticResource BoolToDisabledFontColorConverter}}" />
                                            <TextBlock Text=" (" Visibility="{Binding ChildrenCount, Converter={StaticResource IntToVisibilityConverter}}"/>
                                            <TextBlock Text="{Binding ChildrenCount, Mode=OneWay}" Visibility="{Binding ChildrenCount, Converter={StaticResource IntToVisibilityConverter}}"/>
                                            <TextBlock Text=")" Visibility="{Binding ChildrenCount, Converter={StaticResource IntToVisibilityConverter}}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentControl.Resources>
                            </ContentControl>
                        </StackPanel>
                    </Border>
                </HierarchicalDataTemplate>

            </NavigationViews:NavigationView.ItemTemplate>           
        </NavigationViews:NavigationView>
    </Grid>
</UserControl>
