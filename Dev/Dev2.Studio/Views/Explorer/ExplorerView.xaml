<UserControl x:Class="Dev2.Studio.Views.Explorer.ExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:navigationViews="clr-namespace:Dev2.Studio.Views.Navigation"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:Dev2.Studio.AppResources.Behaviors"
             xmlns:dev2="clr-namespace:Dev2.UI"
             xmlns:customControls2="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
             xmlns:behavior="clr-namespace:Dev2.CustomControls.Behavior;assembly=Dev2.CustomControls"
             xmlns:behavior2="clr-namespace:Dev2.CustomControls.Behavior"
             xmlns:help="clr-namespace:Dev2.Help"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:explorer="clr-namespace:Dev2.Studio.ViewModels.Explorer"
             xmlns:explorer2="clr-namespace:Dev2.Models;assembly=Dev2.Studio.Core"
    xmlns:connections="clr-namespace:Dev2.CustomControls.Connections"
    AllowDrop="False"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance explorer:ExplorerViewModel}"
             Name="Explorer">

    <UserControl.InputBindings>
        <KeyBinding Command="{Binding NavigationViewModel.RenameCommand}"
                    Key="F2" />
    </UserControl.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="24" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition  Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <connections:ConnectControl DataContext="{Binding ConnectControlViewModel}"
                             Grid.ColumnSpan="2"
                             Margin="2,2,2,0"
                             EditButtonAutomationID="UI_ExplorerEditBtn_AutoID"
                             ConnectButtonAutomationID="UI_ExplorerConnectBtn_AutoID"
                             ServerComboBoxAutomationID="UI_ExplorerServerCbx_AutoID"/>

        <navigationViews:NavigationView x:Name="TheNavigationView"
                                        DataContext="{Binding DataContext.NavigationViewModel, ElementName=Explorer}"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="2"
                                        AutomationProperties.AutomationId="UI_NavigationViewUserControl_AutoID">
            
            <navigationViews:NavigationView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}"
                       BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <!--<Setter Property="Visibility"
                            Value="{Binding IsFiltered, Converter={StaticResource BoolToVisibilityConverterNegative}, Mode=OneWay}" />-->
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExplorerExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsExplorerSelected, Mode=TwoWay}" />

                    <!-- This is a hack. Need to rethink how to get this behavior attached properly-->
                    <Setter Property="behavior:AttachBehavior.BehaviorType"
                            Value="{x:Type behavior2:BringIntoViewWhenSelectedBehavior}" />

                    <Setter Property="AutomationProperties.AutomationId"
                            Value="{Binding Path=DataContext.DisplayName,
                        RelativeSource={RelativeSource Self},Converter={StaticResource StringToAutomationIdConverter}}" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="FontWeight"
                                    Value="UltraLight" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsConnected}"
                                     Value="False">
                            <Setter Property="ContentControl.Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </DataTrigger>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource NavigationViewModelPermissionToBooleanConverter}"
                                              ConverterParameter="Contribute">
                                    <Binding Path="Permissions" />
                                    <Binding Path="ResourceType" />
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="ContentControl.Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </navigationViews:NavigationView.ItemContainerStyle>

            <navigationViews:NavigationView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type explorer2:ExplorerItemModel}"
                                          ItemsSource="{Binding Path=Children}">
                    <Border IsHitTestVisible="True"
                            Background="{StaticResource BrushNearTransparent}">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <i:Interaction.Behaviors>
                            <local:NavigationItemViewModelMouseDownBehavior SetActiveEnvironmentOnClick="True"
                                                                            NavigationViewContextType="Explorer"
                                                                            OpenOnDoubleClick="True"
                                                                            SelectOnRightClick="True"
                                                                            DontAllowDoubleClick="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=navigationViews:NavigationView},Path=DataContext.IsFromActivityDrop}" />
                            <local:NavigationItemViewModelDragDropBehavior DontAllowDraging="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=navigationViews:NavigationView},Path=DataContext.IsFromActivityDrop}" />
                        </i:Interaction.Behaviors>

                        <Border.ContextMenu>
                            <!--Visibility="{Binding HasExecutableCommands, Converter={StaticResource BoolToVisConverter}}"-->
                            <ContextMenu>
                                <ContextMenu.Resources>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="HorizontalContentAlignment"
                                                Value="Left" />
                                        <Setter Property="VerticalContentAlignment"
                                                Value="Center" />
                                        <Setter Property="AutomationProperties.AutomationId"
                                                Value="UI_ExplorerContextMenu_AutoID" />
                                    </Style>
                                </ContextMenu.Resources>

                                <MenuItem Header="Connect"
                                          Command="{Binding ConnectCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Converter="{StaticResource MultipleBoolToVisibilityValueConverter}">
                                            <Binding Path="IsLocalHost"
                                                     Converter="{StaticResource BooleanInvertConverter}"/>
                                            <Binding Path="CanConnect" />
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                </MenuItem>
                                <MenuItem Header="Disconnect"
                                          Command="{Binding DisconnectCommand}"
                                          AutomationProperties.AutomationId="UI_ExplorerContextMenuDisconnectItem_AutoID">
                                    <MenuItem.Visibility>
                                        <MultiBinding Converter="{StaticResource MultipleBoolToVisibilityValueConverter}">
                                            <Binding Path="IsLocalHost"
                                                     Converter="{StaticResource BooleanInvertConverter}"/>
                                            <Binding Path="CanDisconnect" />
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                </MenuItem>
                                <MenuItem Header="Remove"
                                          Command="{Binding RemoveCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Converter="{StaticResource MultipleBoolToVisibilityValueConverter}">
                                            <Binding Path="IsLocalHost"
                                                     Converter="{StaticResource BooleanInvertConverter}" />
                                            <Binding Path="CanRemove" />
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                </MenuItem>
                                <!--<MenuItem Header="Refresh"
                                          Command="{Binding RefreshCommand}"
                                          Visibility="{Binding CanRefresh, Converter={StaticResource BoolToVisConverter}}"
                                          AutomationProperties.AutomationId="UI_ExplorerContextMenuRefreshItem_AutoID" />-->
                                <MenuItem Header="Open"
                                          Command="{Binding EditCommand}"
                                          Visibility="{Binding CanEdit, Converter={StaticResource BoolToVisConverter}}" />
                                <Separator Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="New Folder"
                                          Visibility="{Binding CanCreateNewFolder, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewFolderCommand}"/>
                                <MenuItem Header="New Workflow Service   (Ctrl+W)"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="Workflow" />
                                <MenuItem Header="New Database Procedure Service   (Ctrl+Shift+D)"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="DatabaseService" />
                                <MenuItem Header="New Plugin Service   (Ctrl+Shift+P)"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="ResourceService" />
                                <MenuItem Header="New Web Service   (Ctrl+Shift+W)"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="WebService" />
                                <Separator Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="New Remote Warewolf Source"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="Server" />
                                <MenuItem Header="New Database Source"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="DbSource" />
                                <MenuItem Header="New Plugin Source"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="ResourceSource" />
                                <MenuItem Header="New Web Source"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="WebSource" />
                                <MenuItem Header="New Email Source"
                                          Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}"
                                          Command="{Binding NewResourceCommand}"
                                          CommandParameter="EmailSource" />
                                <Separator Visibility="{Binding CanAddResoure, Converter={StaticResource BoolToVisConverter}}" />
                                <!--<MenuItem Header="Build"
                                          Command="{Binding BuildCommand}"
                                          Visibility="{Binding CanBuild, Converter={StaticResource BoolToVisConverter}}" />-->
                                <MenuItem Header="{Binding DeployTitle}"
                                          Command="{Binding DeployCommand}"
                                          Visibility="{Binding CanDeploy, Converter={StaticResource BoolToVisConverter}}" />
                                <!--<MenuItem Header="Duplicate" Command="{Binding DuplicateCommand}" Visibility="{Binding CanDuplicate, Converter={StaticResource BoolToVisConverter}}" />-->
                                <MenuItem Header="Rename   (F2)"
                                          Command="{Binding RenameCommand}"
                                          Visibility="{Binding CanRename, Converter={StaticResource BoolToVisConverter}}" />
                                <!--<MenuItem Header="Move/Rename" Command="{Binding MoveRenameCommand}" Visibility="{Binding CanMoveRename, Converter={StaticResource BoolToVisConverter}}" />-->
                                <MenuItem Header="Delete"
                                          Command="{Binding DeleteCommand}"
                                          Visibility="{Binding CanDelete, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Show Dependencies"
                                          Command="{Binding ShowDependenciesCommand}"
                                          Visibility="{Binding CanShowDependencies, Converter={StaticResource BoolToVisConverter}}" />
                                <MenuItem Header="Debug"
                                          Command="{Binding DebugCommand}"
                                          Visibility="{Binding CanDebug, Converter={StaticResource BoolToVisConverter}}" />
                                <!--<MenuItem Header="Manual Edit" Command="{Binding ManualEditCommand}" Visibility="{Binding CanManualEdit, Converter={StaticResource BoolToVisConverter}}" />-->

                            </ContextMenu>
                        </Border.ContextMenu>

                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal"
                                        AllowDrop="False">
                                <i:Interaction.Behaviors>
                                    <local:NavigationItemViewModelMouseDownBehavior SetActiveEnvironmentOnClick="True"
                                                                                    OpenOnDoubleClick="True"
                                                                                    SelectOnRightClick="True"
                                                                                    DontAllowDoubleClick="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                AncestorType=navigationViews:NavigationView},
                                                                                Path=DataContext.IsFromActivityDrop}" />
                                    <local:NavigationItemViewModelDragDropBehavior DontAllowDraging="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=navigationViews:NavigationView},Path=DataContext.IsFromActivityDrop}" />
                                </i:Interaction.Behaviors>

                                <customControls2:CircularProgressBar Width="18"
                                                                     Height="18"
                                                                     Margin="3,1,3,1"
                                                                     Visibility="{Binding IsRefreshing, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                                                     AutomationProperties.AutomationId="UI_IndicatorRefresh_AutoID" />

                                <StackPanel Orientation="Horizontal"
                                            Margin="3,1,0,1"
                                            Visibility="{Binding IsRefreshing, Converter={StaticResource BoolToVisibilityConverterNegative}}">
                                    <Image Width="17"
                                           Height="17">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource ExplorerItemModelToIconConverter}">
                                                <Binding Path="ResourceType"/>
                                                <Binding Path="IsExplorerExpanded"/>
                                            </MultiBinding>
                                        </Image.Source>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding RefreshCommand}"></i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Image>
                                    <Button Visibility="{Binding CanEdit, Converter={StaticResource BoolToVisConverter}}"
                                            ToolTip="{x:Static help:HelpTextResources.ExplorerSecurityToolTipView}"
                                            Style="{StaticResource AuthButtonStyle}">
                                        <Button.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                                          Command="{Binding EditCommand}" />
                                        </Button.InputBindings>
                                        <Image Style="{StaticResource AuthViewIconStyle}" />
                                    </Button>
                                    <Button Visibility="{Binding CanExecute, Converter={StaticResource BoolToVisConverter}}"
                                            ToolTip="{x:Static help:HelpTextResources.ExplorerSecurityToolTipExecute}"
                                            Style="{StaticResource AuthButtonStyle}">
                                        <Image Style="{StaticResource AuthExecuteIconStyle}" />
                                        <Button.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                                          Command="{Binding DebugCommand}" />
                                        </Button.InputBindings>
                                    </Button>
                                    <Image Style="{StaticResource AuthNoneIconStyle}"
                                           Visibility="{Binding Permissions, Converter={StaticResource NavigationViewModelPermissionVisibilityConverter}, ConverterParameter=None}"
                                           ToolTip="{x:Static help:HelpTextResources.ExplorerSecurityToolTipNone}" />
                                </StackPanel>

                                <ContentControl Content="{Binding}">
                                    <ContentControl.Resources>
                                    </ContentControl.Resources>
                                </ContentControl>

                            </StackPanel>

                            <Border Style="{StaticResource UnauthorizedTreeViewBorderStyle}"
                                    Visibility="{Binding IsAuthorized, Converter={StaticResource BoolToVisibilityConverterNegative}}">
                                <StackPanel Style="{StaticResource UnauthorizedTreeViewStackPanelStyle}">
                                    <Image Style="{StaticResource AuthNoneIconRibbonStyle}" />
                                    <TextBlock Style="{StaticResource UnauthorizedTreeViewTextBlockStyle}"
                                               Text="{x:Static help:HelpTextResources.ExplorerSecurityServerUnauthorized}"></TextBlock>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Border>
                </HierarchicalDataTemplate>
            </navigationViews:NavigationView.ItemTemplate>
        </navigationViews:NavigationView>
    </Grid>
</UserControl>
