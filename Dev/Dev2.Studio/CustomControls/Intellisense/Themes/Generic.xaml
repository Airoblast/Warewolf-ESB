<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Dev2.UI">
    
   <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
    <GradientStop Color="#ABADB3" Offset="0.05" />
    <GradientStop Color="#E2E3EA" Offset="0.07" />
    <GradientStop Color="#E3E9EF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBox_MouseOver" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#5794BF" Offset="0.05" />
        <GradientStop Color="#B7D5EA" Offset="0.07" />
        <GradientStop Color="#C7E2F1" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBox_Focused" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#3D7BAD" Offset="0.05" />
        <GradientStop Color="#A4C9E3" Offset="0.07" />
        <GradientStop Color="#B7D9ED" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="IntellisenseTextBox_ErrorForeground" Color="Red" />
    <SolidColorBrush x:Key="TextBox_DisabledBorder" Color="#ADB2B5" />
    <SolidColorBrush x:Key="TextBox_DisabledBackground" Color="#F4F4F4" />

    <DataTemplate x:Key="DefaultDefaultTextTemplate">
        <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" FontStyle="Italic" />
    </DataTemplate>

    <DataTemplate x:Key="DefaultItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="CakeA" />
                <ColumnDefinition SharedSizeGroup="CakeB" />
            </Grid.ColumnDefinitions>
            
            <TextBlock Grid.Column="0">
                <Run Text="{Binding Name, Mode=OneWay}" />
            </TextBlock>
            <TextBlock TextTrimming="CharacterEllipsis" Grid.Column="1" Padding="5,0,0,0" FontStyle="Italic">
                <Run Text="{Binding DropdownDescription, Mode=OneWay}"/>
            </TextBlock>
            <!--<StackPanel Orientation="Horizontal">
            </StackPanel>-->
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type local:IntellisenseTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="DefaultTextTemplate" Value="{StaticResource DefaultDefaultTextTemplate}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MaxHeight" Value="38.96" />
        <Setter Property="ItemTemplate" Value="{StaticResource DefaultItemTemplate}" />
        <Setter Property="AllowMultilinePaste" Value="True" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate >
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IntellisenseTextBox}">
                    <Grid x:Name="MainGrid">

                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" Background="{TemplateBinding Background}" />
                        <Border x:Name="MouseOverVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource TextBox_MouseOver}" CornerRadius="1" />
                        <Border x:Name="FocusVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource TextBox_Focused}" CornerRadius="1" />
                        <Grid>
                            <TextBlock x:Name="PART_CalculateModePrefix" Text="fx" VerticalAlignment="Top" Height="23" Padding="2,3,0,3" Visibility="Collapsed" Foreground="Gray" FontStyle="Italic"/>
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ContentPresenter x:Name="PART_DefaultTextHost"
                                    Content="{TemplateBinding DefaultText}"
                                    ContentTemplate="{TemplateBinding DefaultTextTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsHitTestVisible="False"
                                    Margin="{TemplateBinding Padding}"
                                    Visibility="Collapsed" />
                        
                        <Popup x:Name="PART_Popup" 
                               HorizontalOffset="1"
                               VerticalOffset="1"
                               AllowsTransparency="True"
                               StaysOpen="False"
                               Placement="Bottom"
                               Focusable="False"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               IsOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                               <Grid MinWidth="{Binding ActualWidth, ElementName=MainGrid}" MaxHeight="200">
                                     <Border x:Name="DropDownBorder" 
                                             BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                             BorderThickness="1" 
                                             Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                             <!--<ScrollViewer x:Name="DropDownScrollViewer">-->
                                    <ListBox x:Name="PART_ItemList" Grid.IsSharedSizeScope="True"
                                                                    VirtualizingStackPanel.IsVirtualizing="False"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                    VerticalContentAlignment="Stretch"
                                                                    HorizontalContentAlignment="Stretch"
                                                                    ItemsSource="{TemplateBinding ItemsSource}"
                                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                                                    ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                                    DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                                    SelectionMode="{TemplateBinding SelectionMode}"
                                                                    SelectedValue="{TemplateBinding SelectedValue}"
                                                                    SelectedItem="{TemplateBinding SelectedItem}"
                                                                    SelectedIndex="{TemplateBinding SelectedIndex}">
                                        <!--2012.0124: Ashley Lewis Bug 8103-->
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                <Style.Resources>
                                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#6495ED"/>
                                                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#6495ED"/>
                                                </Style.Resources>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                             <!--</ScrollViewer>-->
                                     </Border>
                               </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="PART_DefaultTextHost" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AllowUserCalculateMode" Value="True" />
                                <Condition Property="IsInCalculateMode" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="PART_CalculateModePrefix" Value="Visible" />
                                <Setter Property="Margin" TargetName="PART_ContentHost" Value="10,0,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBox_DisabledBorder}" />
                            <Setter TargetName="Border"  Property="Background" Value="{StaticResource TextBox_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="HasError" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource IntellisenseTextBox_ErrorForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
