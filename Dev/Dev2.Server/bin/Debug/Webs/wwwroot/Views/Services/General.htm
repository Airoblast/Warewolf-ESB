<div id="container">
    <div class="float-left">
        <div id="header">
            <h1> <\Type\> Service Details</h1>
        </div>
        <div id="body">
            <form id="mainForm">
                <div id="mainFormError" class="error" style="display: none; text-align: left; margin-top: 1em; margin-left: 1em; float: left; ">
                    <img src="images/warning.gif" alt="Warning!" width="24" height="24" class="icon" />
                    <span id="Dev2Msg">You missed some fields.The have been highlighted below.</span>
                </div>
                <div class="decision-form">
                    <div>
		
						
						<!-- KO Template -->
						<div class="dbservice-wrapper" id="decisionView">							
							<!--data-bind="template: { foreach: data.TheStack  }" -->
							<div id="sourceConfiguration" style="width:100%;">

								<div id="decisionRow">
									<label for="Name"> Name : </label>
									<input name="Name" id="Name" style="required" data-bind="value: data.name"/>
								</div>
								
								<div id="decisionRow">
									<label for="TypeOf"> Type of Work : </label>
									<select id="TypeOf" name="TypeOf" data-bind="options: data.typeOf,optionsText: 'theValue', optionsValue: 'theValue', optionsCaption: 'Choose...'" class="required">
									</select>
								</div>
								
								<div id="decisionRow">
									<label for="ServiceSource"> Source : </label>
									<select id="ServiceSource" name="ServiceSource" data-bind="options: data.sources ,optionsText: 'theValue', optionsValue: 'theValue', optionsCaption: 'Choose...'" class="required">
									</select>
									<button type="button" name="cancel" id="cancelButton" data-bind="click: cancel" title="Manage Sources" >...</button>
								</div>
								
								<div id="decisionRow">
									<label for="Category"> Category : </label>
									<input name="Category" id="Category" style="required" data-bind="value: data.category" />
								</div>
								
								<div id="decisionRow">
									<label for="Help"> Help Link : </label>
									<input name="Help" id="Help" data-bind="value: data.help" />
									<button type="button" name="cancel" id="cancelButton" data-bind="click: cancel" title="Select Icon" >...</button>
								</div>
								
								<div id="decisionRow">
									<label for="Icon"> Icon : </label>
									<input name="Icon" id="Icon" data-bind="value: data.icon" />
								</div>
								
								<div id="decisionRow">
									<label for="Description"> Description : </label>
									<input name="Description" id="Description" data-bind="value: data.description" />
								</div>
								
								<div id="decisionRow">
									<label for="Tags"> Tags : </label>
									<input name="Tags" id="Tags" data-bind="value: data.tags" />
								</div>
									
							</div>
							
						</div>
						
						<div class="button-bar">
							<span>
								<button tabindex="7" type="button" name="cancel" id="cancelButton" data-bind="click: cancel" style="float:left; margin-left:110px;">Cancel</button>
								<button tabindex="8" type="button" name="test" id="testButton" data-bind="click: test" style="float:right; margin-right:20px;">Go To Step 3</button>
								<button tabindex="8" type="button" name="test" id="testButton" data-bind="click: test" style="float:right; margin-right:10px;">Go To Step 2</button>	
								<button tabindex="9" type="submit" name="save" id="saveButton" data-bind="click: save" style="float:right;" >Done</button>
							</span>
						</div>
						
						
					</div>
            </form>
        </div>
    </div>
</div>
<div id="saveDialogContainer">
</div>

<script type="text/javascript">

	function AppViewModel() {
		var self = this;
		var $mainForm = $("#mainForm");
		var $decisionView = $("#dbSourceView");

		// set title
		document.title = "Service Details";
		
		self.data = {
		
			/* Injected Data */
			name : ko.observable("<<Name>>"),
			server : ko.observable("<<Server>>"),
			category : ko.observable("<<Category>>"),
			help : ko.observable("<<Help>>"),
			icon : ko.observable("<<Icon>>"),
			description : ko.observable("<<Description>>"),
			tags : ko.observable("<<Tags>>"),
			
			
			/* End Injected	Data */
			
			/* The data here must match the server's decision functions */
			sources : ko.observableArray([
				
				{ theValue : "testingDBSrc_1" },
				{ theValue : "testingDBSrc_2" }
			]),
			
			types : ko.observableArray([ { theValue : "SqlDatabase" }]),
			
			typeOf : ko.observableArray([ 
					{ theValue : "Database"}, 
					{ theValue : "Plugin"},
					{ theValue : "Workflow"}
			])
		}
		
	 	 
	 
		self.removeRow = function() {
			
			// always keep at least one ;)
			//if(self.data.TheStack().length > 1){
				self.data.TheStack.remove(this);
			//}
			
		};
		
		self.rowChanged = function(elm){
			
			var idx = self.data.TheStack().indexOf(elm);
			var val = elm.EvaluationFn;
			
			// find function element to use ;)
			var cnt = ko.utils.arrayFirst(self.data.decisionFunctions(), function(item){
				return elm.EvaluationFn === item.optionValue;
			});
			
			self.data.TheStack.splice(idx,1, {Col1: elm.Col1, Col2: elm.Col2,  Col3: elm.Col3, PopulatedColumnCnt : cnt.columnCount, EvaluationFn : val});
			
			// apply jquery-ui themes
			$("input[type=submit], a, button").button();
			
		};
				
		self.toggleMode = function(){
			
			if(!self.data.IsAnd()){
				self.data.Mode("OR");
				self.data.IsAnd(false);
			}else{
				self.data.Mode("AND");
				self.data.IsAnd(true);
			}		
			
			return true;
		};
		
		self.save = function(){
			if(!$mainForm.validate().form()){
				return;
			}
			
			var dlID = window.location.search;			
			var jsonData = ko.toJSON(self.data);

			//alert(jsonData);
			
			$.post("Service/WebModel/SaveModel" + dlID, jsonData, function (result) {
				
				$("#Dev2Msg").html(result.message);

				Dev2Awesomium.Close();
				return true;
				
            });
		};
		
		self.cancel = function () {
            Dev2Awesomium.Cancel();
            return true;
        };
		
		self.test = function () {
            alert("TODO : Test ");
        };
		
		self.AddDecision = function(data){
			self.data.TheStack.push(data);
			// apply jquery-ui themes
			$("input[type=submit], a, button").button();
		}
		
		self.Load = function(){
			var dlID = window.location.search; //.replace("postdlid", "dlid");
		
			var request = $.ajax({
				url: "Service/WebModel/FetchDecisionModel" + dlID,
				type: "post"
			});
			
			request.done(function(response, textStatus, json){
				
				/*if(response.TheStack != undefined){
					// load decisions
					for(var i = 0; i < response.TheStack.length; i++){
						vm.AddDecision({ Col1: response.TheStack[i].Col1, Col2: response.TheStack[i].Col2,  Col3: response.TheStack[i].Col3, PopulatedColumnCnt : response.TheStack[i].PopulatedColumnCount, EvaluationFn : response.TheStack[i].EvaluationFn });
					
					}
					
					// set Stack data
					self.data.Mode(response.Mode);
					
					if(response.Mode == "AND"){
						self.data.IsAnd(true);
					}else{
						self.data.IsAnd(false);
					}

					// set the arms
					self.data.TrueArmText(response.TrueArmText); 
					
					self.data.FalseArmText(response.FalseArmText);
					
				}else{
				
					// Add a decision
					vm.AddDecision({ Col1: '', Col2: '',  Col3: '', PopulatedColumnCnt : 0, EvaluationFn : 'IsNotError' });
				}*/
			});
			
			request.fail(function(response, textStatus, json){
				alert("An error occured : " + JSON.stringify(response));
			});
			
			
		}
		
		self.Load();

	}
	 
	 var vm = new AppViewModel();
		
	 ko.applyBindings(vm);	
		
</script>

