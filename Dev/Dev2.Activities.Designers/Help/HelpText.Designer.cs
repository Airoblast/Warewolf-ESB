//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev2.Activities.Help {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class HelpText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HelpText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dev2.Activities.Help.HelpText", typeof(HelpText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A positive or negative number that will add or subtract a portion of time from the Input. The drop down will dictate the unit of time. Level the field blank if you are not adding or subtracting time..
        /// </summary>
        public static string DateTimeAddTimeHelpText {
            get {
                return ResourceManager.GetString("DateTimeAddTimeHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Describe the dates format here using the short hand from the intellisense. eg. a date 23-July-1978 would be described dd-MM-yyyy. If you leave this field blank, it will use the system date time format - very handy when generating the date from the system..
        /// </summary>
        public static string DateTimeInputFormatHelpText {
            get {
                return ResourceManager.GetString("DateTimeInputFormatHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put the date you want to reformat or add/subtract from in here. You can use both variables and data eg [[Day]] July 1978, as the input if you want to hard code that part of the date. If you leave the Input blank, then the server time will be used by default. Using a * for recordset (eg. [[Recordset(*).Field]]) will process every record without needing to use a for each. Make sure you put a recordset field in the Result..
        /// </summary>
        public static string DateTimeInputHelpText {
            get {
                return ResourceManager.GetString("DateTimeInputHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Describe the dates output format here using the short hand from the intellisense. eg. a date 23-July-1978 would be described dd-MM-yyyy. If you leave this field blank, it will use the same format as the Input Format..
        /// </summary>
        public static string DateTimeOutputFormatHelpText {
            get {
                return ResourceManager.GetString("DateTimeOutputFormatHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Field.
        ///Only variables in [[Scalar]] or [[Recordset(*).Field]] format. If you use a recordset and do not specify an index/row number, a new record will be added..
        /// </summary>
        public static string DateTimeResultHelpText {
            get {
                return ResourceManager.GetString("DateTimeResultHelpText", resourceCulture);
            }
        }
    }
}
