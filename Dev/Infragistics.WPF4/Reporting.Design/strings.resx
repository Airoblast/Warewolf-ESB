<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="LC_Reporting Properties" xml:space="preserve">
    <value>Reporting Properties</value>
  </data>
  <data name="LD_EmbeddedVisualReportSection_P_SourceVisual" xml:space="preserve">
    <value>Returns the source visual that was passed into the constructor (read-only).</value>
  </data>
  <data name="LD_EmbeddedVisualReportSection_P_VisualPaginator" xml:space="preserve">
    <value>Returns the visual paginator that will be used inside the report section.</value>
  </data>
  <data name="LD_EmbeddedVisualReportSection_P_IsEndReached" xml:space="preserve">
    <value>Returns value to determinate if the report section is on last page.</value>
  </data>
  <data name="LD_EmbeddedVisualReportSection_E_PaginationEnded" xml:space="preserve">
    <value>Occurs after a pagination process has ended</value>
  </data>
  <data name="LD_EmbeddedVisualReportSection_E_PaginationStarted" xml:space="preserve">
    <value>Occurs after a pagination process has been started</value>
  </data>
  <data name="LD_EmbeddedVisualReportSection_E_PaginationStarting" xml:space="preserve">
    <value>Occurs before a pagination process is about to begin.</value>
  </data>
  <data name="LC_Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="LD_Report_P_PhysicalPageNumber" xml:space="preserve">
    <value>The physical page number of the current page being printed within the report (read-only).</value>
  </data>
  <data name="LD_Report_P_LogicalPageNumber" xml:space="preserve">
    <value>The logical page part number of the current page being printed (read-only).</value>
  </data>
  <data name="LD_Report_P_LogicalPagePartNumber" xml:space="preserve">
    <value>The logical page part number of the current page being printed (read-only).</value>
  </data>
  <data name="LD_Report_P_SectionPhysicalPageNumber" xml:space="preserve">
    <value>The physical page number of the current page being printed within this section (read-only).</value>
  </data>
  <data name="LD_Report_P_SectionLogicalPageNumber" xml:space="preserve">
    <value>The logical page number of the current page being printed within this section (read-only).</value>
  </data>
  <data name="LD_Report_P_SectionLogicalPagePartNumber" xml:space="preserve">
    <value>The logical page part number of the current page being printed (read-only).</value>
  </data>
  <data name="LD_Report_P_Sections" xml:space="preserve">
    <value>Returns a collection of ReportSection objects.</value>
  </data>
  <data name="LC_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="LD_Report_E_PrintProgress" xml:space="preserve">
    <value>Occurs as each page is printed or exported..</value>
  </data>
  <data name="LD_Report_E_PrintStart" xml:space="preserve">
    <value>Occurs when a printing or exporting operation is about to begin.</value>
  </data>
  <data name="LD_Report_E_PrintEnded" xml:space="preserve">
    <value>Occurs when a print or export operation ends.</value>
  </data>
  <data name="LD_ReportPagePresenter_P_Footer" xml:space="preserve">
    <value>Gets or sets the content of the footer.</value>
  </data>
  <data name="LD_ReportPagePresenter_P_FooterStringFormat" xml:space="preserve">
    <value>Returns/sets a composite string that specifies how to format the Footer property if it is displayed as a string.</value>
  </data>
  <data name="LD_ReportPagePresenter_P_FooterTemplate" xml:space="preserve">
    <value>The template used to display the footer content.</value>
  </data>
  <data name="LD_ReportPagePresenter_P_FooterTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the footer.</value>
  </data>
  <data name="LD_ReportPagePresenter_P_Section" xml:space="preserve">
    <value>The owning ReportSection (read-only.</value>
  </data>
  <data name="LD_ReportPagePresenter_P_LogicalPageNumber" xml:space="preserve">
    <value>The logical page number of this page within the report (read-only).</value>
  </data>
  <data name="LD_ReportPagePresenter_P_LogicalPagePartNumber" xml:space="preserve">
    <value>The logical page part number of this page (read-only).</value>
  </data>
  <data name="LD_ReportPagePresenter_P_PhysicalPageNumber" xml:space="preserve">
    <value>The physical page number of this page within the report (read-only).</value>
  </data>
  <data name="LD_ReportPagePresenter_P_SectionLogicalPageNumber" xml:space="preserve">
    <value>The logical page number of this page within this section (read-only).</value>
  </data>
  <data name="LD_ReportPagePresenter_P_SectionLogicalPagePartNumber" xml:space="preserve">
    <value>The logical page part number of this page (read-only).</value>
  </data>
  <data name="LD_ReportPagePresenter_P_SectionPhysicalPageNumber" xml:space="preserve">
    <value>The physical page number of this page within this section (read-only).</value>
  </data>
  <data name="LD_ReportProgressControl_P_Report" xml:space="preserve">
    <value>Returns/sets report object whose progress will be indicated.</value>
  </data>
  <data name="LD_XamReportPreview_P_DocumentViewer" xml:space="preserve">
    <value>Returns reference to DocumentViewer which is internaly used for preview.</value>
  </data>
  <data name="LD_XamReportPreview_P_IsContentVisible" xml:space="preserve">
    <value>Return/sets whether or not the contained DocumentViewer is visible.</value>
  </data>
  <data name="LD_XamReportPreview_P_Report" xml:space="preserve">
    <value>Returns the Report that is being previewed (read-only).</value>
  </data>
	<data name="XamReportPreviewAssetLibrary">
		<value>Infragistics</value>
	</data>
</root>