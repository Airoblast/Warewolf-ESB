<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SpellOptions_AllowAnyCase_Property" xml:space="preserve">
    <value>Gets/Sets whether to allow words spelt with any case, e.g. "africa" instead of "Africa." This is more relaxed than AllowMixedCase.</value>
  </data>
  <data name="SpellOptions_AllowCaseInsensitiveSuggestions_Property" xml:space="preserve">
    <value>Gets/Sets whether to allow suggestions for correctly spelled words with mixed case.</value>
  </data>
  <data name="SpellOptions_AllowMixedCase_Property" xml:space="preserve">
    <value>Gets/Sets whether to allow words spelt with mixed case, e.g. "MIxEd."</value>
  </data>
  <data name="SpellOptions_AllowWordsWithDigits_Property" xml:space="preserve">
    <value>Gets/Sets whether to Allow words with numbers in them (eg. A10 or 7-11).</value>
  </data>
  <data name="SpellOptions_AllowXml_Property" xml:space="preserve">
    <value>Gets/Sets whether to Allow XML/HTML tags, false by default.</value>
  </data>
  <data name="SpellOptions_CheckHyphenatedText_Property" xml:space="preserve">
    <value>Gets/Sets whether to check text with hyphenate.</value>
  </data>
  <data name="SpellOptions_IncludeUserDictionaryInSuggestions_Property" xml:space="preserve">
    <value>Gets/Sets whether the user dictionary should be used in finding suggestions for misspelt words.</value>
  </data>
  <data name="SpellOptions_LanguageParser_Property" xml:space="preserve">
    <value>Gets/Sets the language parser to use.</value>
  </data>
  <data name="SpellOptions_SeparateHyphenWords_Property" xml:space="preserve">
    <value>Gets/Sets whether the hyphenated text is treated as separate words.</value>
  </data>
  <data name="SpellOptions_SuggestionsMethod_Property" xml:space="preserve">
    <value>Gets/Sets the method by which suggestions are determined.</value>
  </data>
  <data name="DictionaryLoadProgressDialog_ProgressValue_Property" xml:space="preserve">
    <value>Returns a value representing the percentage of the downloding process that has been completed</value>
  </data>
  <data name="MessageDialog_MessageText_Property" xml:space="preserve">
    <value>Returns a value representing the text displaying to the user.</value>
  </data>
  <data name="BadWord_Suggestions_Property" xml:space="preserve">
    <value>List of potential corrections for the Infragistics.BadWord.</value>
  </data>
  <data name="BadWord_StartPosition_Property" xml:space="preserve">
    <value>Gets or sets the start position of the bad word in the text.</value>
  </data>
  <data name="BadWord_EndPosition_Property" xml:space="preserve">
    <value>Gets or sets the end position of the bad word in the text.</value>
  </data>
  <data name="BadWord_Word_Property" xml:space="preserve">
    <value>Gets or sets the current bad word.</value>
  </data>
  <data name="BadWord_ChangedTo_Property" xml:space="preserve">
    <value>Gets or sets the what the bad word should be changed to.</value>
  </data>
  <data name="BadWordValidationErrorEventArgs_BadWord_Property" xml:space="preserve">
    <value>Gest or sets the BadWord that it is misspelled.</value>
  </data>
  <data name="BadWordValidationErrorEventArgs_UserToken_Property" xml:space="preserve">
    <value>Gest or sets the BadWord that it is misspelled.</value>
  </data>
  <data name="SpellCheckCompletedEventArgs_BadWordsSummary_Property" xml:space="preserve">
    <value>Gest the summary of bad words found when spelling the text.</value>
  </data>
  <data name="SpellCheckDialog_CurrentBadWord_Property" xml:space="preserve">
    <value>Gets the current bad word, name is empty if there is no more bad words.</value>
  </data>
  <data name="PerformanceOptions_AllowCapitalizedWords_Property" xml:space="preserve">
    <value>Gets/Sets whether to Allow words with all capital letters.</value>
  </data>
  <data name="PerformanceOptions_CheckCompoundWords_Property" xml:space="preserve">
    <value>Gets/Sets whether to check for compound words.</value>
  </data>
  <data name="PerformanceOptions_ConsiderationRange_Property" xml:space="preserve">
    <value>Gets/Sets the factor for how close words need to be to be suggested.</value>
  </data>
  <data name="PerformanceOptions_SplitWordThreshold_Property" xml:space="preserve">
    <value>The value of the property determines the minimum size of each word in order for it to become a suggestion.</value>
  </data>
  <data name="PerformanceOptions_SuggestSplitWords_Property" xml:space="preserve">
    <value>Gets/Sets whether to look for connected words in suggestions.</value>
  </data>
  <data name="BadWord_Context_Property" xml:space="preserve">
    <value>A reference to the string that is currently being spell checked.</value>
  </data>
  <data name="WordOccurrence_StartPosition_Property" xml:space="preserve">
    <value>Gets the position of the start of this word in the main text.</value>
  </data>
  <data name="WordOccurrence_EndPosition_Property" xml:space="preserve">
    <value>Gets the position of the end of this word in the main text.</value>
  </data>
  <data name="WordOccurrence_Word_Property" xml:space="preserve">
    <value>Gets the string of this bad word.</value>
  </data>
  <data name="XamSpellCheckerAssetLibrary" xml:space="preserve">
    <value>Infragistics</value>
  </data>
  <data name="XamSpellCheckerSupportingControlsAssetLibrary" xml:space="preserve">
    <value>Infragistics/Control Parts/XamSpellChecker</value>
  </data>
  <data name="DialogStringResources_NotInDictionary_Property" xml:space="preserve">
    <value>Not in dictionary string.</value>
  </data>
  <data name="DialogStringResources_Context_Property" xml:space="preserve">
    <value>Context string.</value>
  </data>
  <data name="DialogStringResources_Loading_Property" xml:space="preserve">
    <value>Loading string.</value>
  </data>
  <data name="DialogStringResources_UseThisInstead_Property" xml:space="preserve">
    <value>Use this instead string.</value>
  </data>
  <data name="DialogStringResources_Change_Property" xml:space="preserve">
    <value>Change string.</value>
  </data>
  <data name="DialogStringResources_ChangeAll_Property" xml:space="preserve">
    <value>Change all string.</value>
  </data>
  <data name="DialogStringResources_Ignore_Property" xml:space="preserve">
    <value>Ignore string.</value>
  </data>
  <data name="DialogStringResources_IgnoreAll_Property" xml:space="preserve">
    <value>Ignore all string.</value>
  </data>
  <data name="DialogStringResources_Suggestions_Property" xml:space="preserve">
    <value>Suggestions string.</value>
  </data>
  <data name="DialogStringResources_PreviousField_Property" xml:space="preserve">
    <value>Previous field string.</value>
  </data>
  <data name="DialogStringResources_NextField_Property" xml:space="preserve">
    <value>Next field string.</value>
  </data>
  <data name="DialogStringResources_Ok_Property" xml:space="preserve">
    <value>Ok string.</value>
  </data>
  <data name="DialogStringResources_AddToDictionary_Property" xml:space="preserve">
    <value>Add to dictionary string.</value>
  </data>
  <data name="DialogStringResources_SpellCheckComplete_Property" xml:space="preserve">
    <value>Spellcheck complete string.,</value>
  </data>
  <data name="ToolboxTabName" xml:space="preserve">
    <value>NetAdvantage 10.1 Silverlight</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_CurrentBadWord_Property">
    <value>Gets the current bad word, name is empty if there is no more bad words.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_Properties">
    <value>XamSpellChecker Properties</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_SpellCheckDialog_Property">
    <value>Gets a reference to the spell checker controls Infragistics.Controls.Interactions.XamDialogWindow.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_DictionaryUri_Property">
    <value>Gets or sets the Uri that the dictionary is at.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_UserDictionaryUri_Property">
    <value>Gets or sets the Uri that the dictionary is at.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_DialogSettings_Property">
    <value>Gets a reference to the Infragistics.Controls.Interactions.XamSpellChecker.DialogSettings object that controls all the properties of the Infragistics.Controls.Interactions.XamSpellChecker.SpellCheckDialog.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_PerformanceOptions_Property">
    <value>Gets the options available for the spell checker engine.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_DictionaryLoadProgressDialogStyle_Property">
    <value>Gets or sets the style for the Infragistics.Controls.Interactions.DictionaryLoadProgressDialog</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_SpellOptions_Property">
    <value>Gets or sets the options that pertain to how the Infragistics.Controls.Interactions.XamSpellChecker returns it's results.</value>
  </data>
  <data xml:space="preserve" name="XamSpellChecker_SpellCheckTargets_Property">
    <value>A collection of System.Windows.Data.BindingBase's which are used to determine which editiable fields will be spell checked.</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerCommandSource_CommandType_Property">
    <value>Gets / Sets the XamSpellCheckerCommand which is to be executed by the command.</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerCommandSource_Properties">
    <value>XamSpellCheckerCommandSource Properties</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogCommandSource_CommandType_Property">
    <value>Gets / Sets the XamSpellCheckerCommand which is to be executed by the command.</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogCommandSource_Properties">
    <value>XamSpellCheckerDialogCommandSource Properties</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogSettings_CurrentWordBrush_Property">
    <value>Gets or sets the brush that is used to highlight the current word in the context.</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogSettings_Properties">
    <value>XamSpellCheckerDialogSettings Properties</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogSettings_SpellCheckDialogStyle_Property">
    <value>Gets or sets the style for the Infragistics.Controls.Interactions.XamSpellCheckerDialogWindow</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogSettings_Mode_Property">
    <value>Gets or sets the type of spell checking that will be performed (basically, will a dialog be displayed or not).</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogSettings_DialogStringResources_Property">
    <value>Contains all of the string resources used in the Infragistics.Controls.Interactions.XamSpellCheckerDialogWindow.</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogWindow_SpellChecker_Property">
    <value>Reference to the XamSpellChecker dialog window.</value>
  </data>
  <data xml:space="preserve" name="XamSpellCheckerDialogWindow_Properties">
    <value>XamSpellCheckerDialogWindow Properties</value>
  </data>
  <data xml:space="preserve" name="DictionaryLoadProgressDialog_SpellChecker_Property">
    <value>Gets the Infragistics.Controls.Interactions.XamSpellChecker that is associated with this Infragistics.Controls.Interactions.DictionaryLoadProgressDialog.</value>
  </data>
  <data xml:space="preserve" name="TargetElement_Value_Property">
    <value>Gets/Sets the Value associated with the element.</value>
  </data>
</root>