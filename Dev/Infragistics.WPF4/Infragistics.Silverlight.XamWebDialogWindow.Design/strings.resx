<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BoolPropertyChangedEventArgs_NewValue_Property" xml:space="preserve">
    <value>Identifies the NewValue property</value>
  </data>
  <data name="BoolPropertyChangedEventArgs_OldValue_Property" xml:space="preserve">
    <value>Identifies the OldValue property</value>
  </data>
  <data name="ClosedEventArgs_DialogResult_Property" xml:space="preserve">
    <value>Identifies the DialogResult property</value>
  </data>
  <data name="XamWebDialogWindowAssetLibrary" xml:space="preserve">
    <value>Infragistics</value>
  </data>
  <data name="XamWebDialogWindowSupportingControlsAssetLibrary" xml:space="preserve">
    <value>Infragistics/Control Parts/XamDialogWindow</value>
  </data>
  <data name="KeyboardSettings_HorizontalStep_Property" xml:space="preserve">
    <value>Gets/Sets how many pixels will be moved horizontally when the Left or Right arrow key is pressed while the Infragistics.Controls.Interactions.XamDialogWindow is active.</value>
  </data>
  <data name="KeyboardSettings_IsKeyNavigation_Property" xml:space="preserve">
    <value>Gets or sets a value indicating whether this instance is key movable.</value>
  </data>
  <data name="KeyboardSettings_VerticalStep_Property" xml:space="preserve">
    <value>Gets/Sets how many pixels will be moved vertically when the Up or Down arrow key is pressed while the Infragistics.Controls.Interactions.XamDialogWindow is active.</value>
  </data>
  <data name="MovedEventArgs_Left_Property" xml:space="preserve">
    <value>Gets or sets the Left coordinate property</value>
  </data>
  <data name="MovedEventArgs_Top_Property" xml:space="preserve">
    <value>Gets or sets the Top coordinate property</value>
  </data>
  <data name="MovingEventArgs_Left_Property" xml:space="preserve">
    <value>Gets or sets the Left coordinate property</value>
  </data>
  <data name="MovingEventArgs_Top_Property" xml:space="preserve">
    <value>Gets or sets the Top coordinate property</value>
  </data>
  <data name="WindowStateChangingEventArgs_NewWindowState_Property" xml:space="preserve">
    <value>Gets/Sets the new Infragistics.Controls.Interactions.WindowState of the window.</value>
  </data>
  <data name="WindowStateChangingEventArgs_OldWindowState_Property" xml:space="preserve">
    <value>Gets or sets the old state of the window.</value>
  </data>
  <data name="WindowStateChangedEventArgs_OldWindowState_Property" xml:space="preserve">
    <value>Gets or sets the old state of the window.</value>
  </data>
  <data name="CustomCursors_DiagonalResizeCursor_Property" xml:space="preserve">
    <value>Gets or sets the horizontal resize cursor.</value>
  </data>
  <data name="CustomCursors_HorizontalResizeCursor_Property" xml:space="preserve">
    <value>Gets or sets the horizontal resize cursor.</value>
  </data>
  <data name="CustomCursors_VerticalResizeCursor_Property" xml:space="preserve">
    <value>Gets or sets the vertical resize cursor.</value>
  </data>
  <data name="KeyboardSettings_AllowKeyboardNavigation_Property" xml:space="preserve">
    <value>Gets or sets a value indicating whether this instance is key movable.</value>
  </data>
  <data name="WindowStateChangingEventArgs_CurrentWindowState_Property" xml:space="preserve">
    <value>Gets/Sets the current Infragistics.Controls.Interactions.WindowState of the window.</value>
  </data>
  <data name="WindowStateChangedEventArgs_PreviousWindowState_Property" xml:space="preserve">
    <value>Gets/Sets the previous Infragistics.Controls.Interactions.WindowState of the window.</value>
  </data>
  <data name="WindowStateChangedEventArgs_NewWindowState_Property" xml:space="preserve">
    <value>Gets/Sets the new Infragistics.Controls.Interactions.WindowState of the window.</value>
  </data>
  <data name="DialogRootPanel_DialogWindow_Property" xml:space="preserve">
    <value>Gets the Infragistics.Controls.Interactions.XamDialogWindow that owns this panel.</value>
  </data>
  <data name="CustomCursors_RightDiagonalResizeCursor_Property" xml:space="preserve">
    <value>Gets or sets the horizontal resize cursor.</value>
  </data>
  <data name="ToolboxTabName" xml:space="preserve">
    <value>NetAdvantage 10.1 Silverlight</value>
  </data>
  <data name="XamDialogWindowCommandSource_CommandType_Property" xml:space="preserve">
    <value>Gets or sets the XamDialogWindowCommand which is to be executed by the command.</value>
  </data>
  <data name="XamDialogWindowCommandSource_Properties" xml:space="preserve">
    <value>XamDialogWindowCommandSource Properties</value>
  </data>
  <data name="XamDialogWindow_CloseButtonVisibility_Property" xml:space="preserve">
    <value>Gets/Sets whether the Close button is visible on the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_Properties" xml:space="preserve">
    <value>XamDialogWindow Properties</value>
  </data>
  <data name="XamDialogWindow_MaximizeButtonVisibility_Property" xml:space="preserve">
    <value>Gets/Sets whether the Maximize button is visible on the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_MinimizeButtonVisibility_Property" xml:space="preserve">
    <value>Gets/Sets whether the Minimize button is visible on the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_CustomCursors_Property" xml:space="preserve">
    <value>Gets/Sets the Infragistics.Controls.Interactions.XamDialogWindow.CustomCursors object that contains the cursors that will be used for the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_IsActive_Property" xml:space="preserve">
    <value>Gets or sets the IsActive property
 Property Is Active is true when the Instance of XamDialogWindow
 has got the focus and control goes to Active state,
 otherwise control is not in active state.</value>
  </data>
  <data name="XamDialogWindow_IsModal_Property" xml:space="preserve">
    <value>Gets or sets a value indicating whether this instance is modal.</value>
  </data>
  <data name="XamDialogWindow_ModalBackground_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.Media.Brush that is applied to the background of the nonclickable area behdind a Modal Dialog.</value>
  </data>
  <data name="XamDialogWindow_ModalBackgroundEffect_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.Media.Effects.Effect that is applied the nonclickable area behdind a Modal Dialog.</value>
  </data>
  <data name="XamDialogWindow_ModalBackgroundOpacity_Property" xml:space="preserve">
    <value>Gets/Sets the Opacity that is applied the nonclickable area behdind a Modal Dialog.</value>
  </data>
  <data name="XamDialogWindow_IsMoveable_Property" xml:space="preserve">
    <value>Gets or sets a value indicating whether XamDialogWindow instance is moveable.</value>
  </data>
  <data name="XamDialogWindow_IsResizable_Property" xml:space="preserve">
    <value>Gets or sets the IsResizable property
 When the property is true , Infragistics.Controls.Interactions.XamDialogWindow instance can be 
 resized via drag it resize area (Border)</value>
  </data>
  <data name="XamDialogWindow_KeyboardSettings_Property" xml:space="preserve">
    <value>Gets/Sets the settings that pertain to moving the Infragistics.Controls.Interactions.XamDialogWindow via the Keyboard.</value>
  </data>
  <data name="XamDialogWindow_Left_Property" xml:space="preserve">
    <value>Gets/Sets the X coordinate of the Infragistics.Controls.Interactions.XamDialogWindow.</value>
  </data>
  <data name="XamDialogWindow_Top_Property" xml:space="preserve">
    <value>Gets/Sets the Y coordinate of the Infragistics.Controls.Interactions.XamDialogWindow.</value>
  </data>
  <data name="XamDialogWindow_MinimizedHeaderTemplate_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.DataTemplate of the Infragistics.Controls.Interactions.XamDialogWindow's Header when the Infragistics.Controls.Interactions.XamDialogWindow.WindowState is set to Infragistics.Controls.Interactions.WindowState.Minimized.</value>
  </data>
  <data name="XamDialogWindow_MinimizedHeight_Property" xml:space="preserve">
    <value>Gets/Sets the Height of the Infragistics.Controls.Interactions.XamDialogWindow when Infragistics.Controls.Interactions.XamDialogWindow.WindowState is set to Infragistics.Controls.Interactions.WindowState.Minimized.</value>
  </data>
  <data name="XamDialogWindow_MinimizedPanel_Property" xml:space="preserve">
    <value>Gets or sets the MinimizedPanel property 
 MinimizedPanel is a Panel, used to arrange Infragistics.Controls.Interactions.XamDialogWindow 
 instances in minimized state</value>
  </data>
  <data name="XamDialogWindow_MinimizedWidth_Property" xml:space="preserve">
    <value>Gets or sets the MinimizedWidth
 Minimized width specifies the width of the Infragistics.Controls.Interactions.XamDialogWindow
 in minimized state</value>
  </data>
  <data name="XamDialogWindow_RestrictInContainer_Property" xml:space="preserve">
    <value>Gets/Sets whether the Dialog will be restricted to the element in the VisualTree that owns it.</value>
  </data>
  <data name="XamDialogWindow_StartupPosition_Property" xml:space="preserve">
    <value>Gets or sets the StartUpPosition property that refelect to position of the XamDialogWindow instance in Show method
 When it is ManualRelativeToApplication - instance uses values from Left and Top properties, relative to Application,
 When it is ManualRelativeToContainer - instance uses values from Left and Top properties, relative to ContainerPanel /Parent,
 when it is CenterContainer - instance is centered on the Canvas, 
 when it is CenterApplication is centered on the RootVisual, 
 when it is Default - instance uses Left=0 and Top = 0 in Show method
 otherwise it is collapsed</value>
  </data>
  <data name="XamDialogWindow_WindowState_Property" xml:space="preserve">
    <value>Gets/Sets whether the Infragistics.Controls.Interactions.XamDialogWindow is Maximized, Minimized, Hidden, or Normal.</value>
  </data>
  <data name="XamDialogWindow_Header_Property" xml:space="preserve">
    <value>Gets/Sets the content that will be displayed in the Header of this Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_HeaderTemplate_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.DataTemplate that will be applied to the Header of this Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_HeaderBackground_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.Media.Brush that will be applied to the Header of the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_HeaderForeground_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.Media.Brush that will be applied to the Foreground of the Header of the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_HeaderHorizontalContentAlignment_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.HorizontalAlignment that will be applied to the content of the Header of the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_HeaderVerticalContentAlignment_Property" xml:space="preserve">
    <value>Gets/Sets the System.Windows.VerticalAlignment that will be applied to the content of the Header of the Infragistics.Controls.Interactions.XamDialogWindow</value>
  </data>
  <data name="XamDialogWindow_HeaderIconTemplate_Property" xml:space="preserve">
    <value>Gets or sets the HeaderIconTemplate property
 HeaderIconTemplate is used like a DataTemplate for the image, placed in 
 XamDialogWindow title bar (drag area)</value>
  </data>
  <data name="XamDialogWindow_HeaderIconVisibility_Property" xml:space="preserve">
    <value>Gets or sets the HeaderIconVisibility property
 When property is Visible , Image is visible, otherwise Image is collapsed</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_CanMove_Property" xml:space="preserve">
    <value>Gets a value indicating whether the element can be moved.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_Properties" xml:space="preserve">
    <value>XamDialogWindowAutomationPeer Properties</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_CanResize_Property" xml:space="preserve">
    <value>Gets a value indicating whether the element can be resized.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_CanRotate_Property" xml:space="preserve">
    <value>Gets a value indicating whether the element can be rotated.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_InteractionState_Property" xml:space="preserve">
    <value>Gets the interaction state of the window.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_IsModal_Property" xml:space="preserve">
    <value>Gets a value indicating whether the window is modal.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_IsTopmost_Property" xml:space="preserve">
    <value>Gets a value indicating whether the window is the topmost element in the z-order of layout.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_Maximizable_Property" xml:space="preserve">
    <value>Gets a value indicating whether the window can be maximized.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_Minimizable_Property" xml:space="preserve">
    <value>Gets a value indicating whether the window can be minimized.</value>
  </data>
  <data name="XamDialogWindowAutomationPeer_VisualState_Property" xml:space="preserve">
    <value>Gets the visual state of the window.</value>
  </data>
</root>