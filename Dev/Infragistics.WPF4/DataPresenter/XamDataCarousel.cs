#region using ...

using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Documents;
using System.Windows.Shapes;
using System.Windows.Navigation;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Data;
using System.Windows.Input;
using System.Windows.Automation;
using System.Windows.Automation.Provider;
using System.Windows.Threading;
using System.Diagnostics;
//using System.Windows.Events;
using System.Collections;
using System.Collections.Specialized;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.Design.Serialization;
using System.Globalization;
using System.Reflection;
using System.Data;
using System.Xml;
using System.Windows.Markup;
//using Infragistics.Windows.Input;
using Infragistics.Shared;
using Infragistics.Windows.DataPresenter;
using Infragistics.Windows.Themes;
using Infragistics.Windows.Helpers;
using Infragistics.Windows.Resizing;
using Infragistics.Windows.Selection;
using Infragistics.Windows.Commands;
using Infragistics.Windows.Internal;
using Infragistics.Windows.Editors;
using Infragistics.Windows.Controls;
using Infragistics.Windows.DataPresenter.Events;
using Infragistics.Windows.Licensing;
using System.Windows.Automation.Peers;
using Infragistics.Windows.Automation.Peers;
using System.Text;

#endregion //using ...	
    
namespace Infragistics.Windows.DataPresenter
{
	/// <summary>
    /// A <see cref="DataPresenterBase"/> derived control that uses a <see cref="CarouselView"/> and an associated <see cref="CarouselViewPanel"/> to arrange <see cref="DataRecord"/>s along a user defined path.  
	/// </summary>
    /// <remarks>
    /// <p class="body">The XamDataCarousel is essentially a <see cref="XamDataPresenter"/> that implements a single view i.e., a <see cref="CarouselView"/>.  It contains the same functionality
    /// as a <see cref="XamDataPresenter"/> that has its <see cref="XamDataPresenter.View"/> property set to an instance of a <see cref="CarouselView"/>, without the ability to dynamically switch between views.</p>
    /// <p class="body">If you need the layout flexibility and visual effects provided by a <see cref="CarouselView"/> and don't need the ability to dynamically switch to other views, you should use the
    /// XamDataCarousel rather than the <see cref="XamDataPresenter"/>.  It's a bit more convenient to use than the <see cref="XamDataPresenter"/> since it exposes a <see cref="XamDataCarousel.ViewSettings"/> property
    /// of type <see cref="Infragistics.Windows.Controls.CarouselViewSettings"/> directly off the control for easy manipulation of the properties that control all aspects of Carousel
    /// layout and visual effects.</p>
    /// <p class="body">Refer to the <see cref="Infragistics.Windows.Controls.CarouselViewSettings"/> topic for detailed information on all available properties.</p>
	/// <p class="body">Refer to the <a href="xamData_TheoryOfOperation.html">Theory of Operation</a> topic in the Developer's Guide for an explanation of how this control operates.</p>
    /// <p class="body">Refer to the <a href="WPF_Working_with_xamDataGrid_xamDataCarousel_and_xamDataPresenter_Styling_Points.html">Working with xamDataGrid, xamDataCarousel and xamDataPresenter Styling Points</a> topic in the Developer's Guide for an explanation of how to style the control.</p>
	/// <p class="body">Refer to the <a href="xamCarousel_Terms_Architecture.html">Carousel Architecture Overview</a> topic in the Developer's Guide for an explanation of how Carousel presentation works.</p>
	/// </remarks>
    /// <seealso cref="DataPresenterBase"/>
    /// <seealso cref="XamDataPresenter"/>
    /// <seealso cref="XamDataPresenter.View"/>
    /// <seealso cref="CarouselView"/>
    /// <seealso cref="DataRecord"/>
    [ContentProperty("DataItems")]
	[TemplatePart(Name = "PART_ContentSiteGrid", Type = typeof(Grid))]
	
	//[ToolboxItem(true)]
	
	//[System.Drawing.ToolboxBitmap(typeof(XamDataCarousel), AssemblyVersion.ToolBoxBitmapFolder + "XamDataCarousel.bmp")]
	//[Description("A DataPresenterBase derived control that uses a CarouselView and an associated CarouselViewPanel to arrange its items along a user defined path.  The XamDataCarousel uses elements generated by the XamDataPresenterBase to display each item in the list.")]
	// AS 4/15/10 The base class has this set to false so DataPresenterBase doesn't show up but we need to set it back to true for the derived controls that should show up.
	[DesignTimeVisible(true)]	// JM 02-18-10 - DO NOT MOVE TO DESIGN ASSEMBLY!!!
	public class XamDataCarousel : DataPresenterBase
	{
		#region Member Variables

		private UltraLicense							_license = null;
		private CarouselViewSettings					_viewSettings = null;

		#endregion //Member Variables	
    
		#region Constructor

		static XamDataCarousel()
		{
			FrameworkElement.DefaultStyleKeyProperty.OverrideMetadata(typeof(XamDataCarousel), new FrameworkPropertyMetadata(typeof(XamDataCarousel)));

			//			KeyboardNavigation.DirectionalNavigationProperty.OverrideMetadata(typeof(DataPresenterBase), new FrameworkPropertyMetadata(KeyboardNavigationMode.Cycle));


			// Load our commands.  (Since our commands are defined as statics and static initializers are not called
			// until the class is accessed, call the convenience method 'LoadCommands' which will access the class
			// and force the loading of our static commands and register command bindings)
			DataPresenterCommands.LoadCommands();
		}

		/// <summary>
		/// Creates an instance of a XamDataCarousel control.
		/// </summary>
		public XamDataCarousel()
		{
			// verify and cache the license
			//
			// Wrapped in a try/catch for a FileNotFoundException.
			// When the assembly is loaded dynamically, VS seems 
			// to be trying to reload a copy of Shared even though 
			// one is in memory. This generates a FileNotFoundException
			// when the dll is not in the gac and not in the AppBase
			// for the AppDomain.
			//
			// AS 11/7/07 BR21903
			// Always do the license checks.
			//
			//if (DesignerProperties.GetIsInDesignMode(this))
			{
				try
				{
					// We need to pass our type into the method since we do not want to pass in 
					// the derived type.
					this._license = LicenseManager.Validate(typeof(XamDataCarousel), this) as UltraLicense;
				}
				catch (System.IO.FileNotFoundException) { }
			}


			// Create our view and set it on DataPresenterBase.
			this.CurrentViewInternal = new CarouselView();
		}

		#endregion //Constructor

		#region Base class overrides

			#region OnInitialized

		/// <summary>
		/// Called after the element has been initialized.
		/// </summary>
		protected override void OnInitialized(EventArgs e)
		{
			base.OnInitialized(e);

			// Set the ViewSettings dependency property using the CLR property which will do a lazy create of the object.
            // JJD 1/2/07 
            // Check for design mode first
            // If we are in design mode don't sync ViewSettings
            if (DesignerProperties.GetIsInDesignMode(this) == false)
                this.SetValue(XamDataCarousel.ViewSettingsProperty, this.ViewSettings);

			// Bind the current view's ViewSettings property to our ViewSettings property.
			this.CurrentViewInternal.SetBinding(CarouselView.ViewSettingsProperty, Utilities.CreateBindingObject(XamDataCarousel.ViewSettingsProperty, BindingMode.OneWay, this));
		}

			#endregion //OnInitialized	
   
			#region OnPropertyChanged

		/// <summary>
		/// Called when a property changes on this object.
		/// </summary>
        /// <param name="e">An instance of DependencyPropertyChangedEventArgs that contains information about the property that changed.</param>
		protected override void OnPropertyChanged(DependencyPropertyChangedEventArgs e)
		{
            // AS 3/11/09 Optimization
			//switch (e.Property.Name)
			//{
			//	case "ViewSettings":
            if (e.Property == ViewSettingsProperty)
            {
					// Set our ViewSettings member variable.
					this._viewSettings = e.NewValue as CarouselViewSettings;

					//break;
			}


			base.OnPropertyChanged(e);
		}

			#endregion //OnPropertyChanged	

		#endregion //Base class overrides

		#region Properties

			#region Public properties

				#region ViewSettings

		/// <summary>
		/// Identifies the <see cref="ViewSettings"/> dependency property
		/// </summary>
		public static readonly DependencyProperty ViewSettingsProperty = DependencyProperty.Register("ViewSettings",
			typeof(CarouselViewSettings), typeof(XamDataCarousel), new FrameworkPropertyMetadata(null, new CoerceValueCallback(OnCoerceViewSettings)));

		private static object OnCoerceViewSettings(DependencyObject d, object value)
		{
            if (value == null)
            {
                // JJD 1/2/07 
                // Check for design mode first
                // Only create a ViewSettings if we are in run mode 
                if (DesignerProperties.GetIsInDesignMode(d) == false)
                    return new CarouselViewSettings();
            }

			return value;
		}

		/// <summary>
		/// Returns/set the <see cref="Infragistics.Windows.Controls.CarouselViewSettings"/> object for this <see cref="XamDataCarousel"/>.
		/// </summary>
        /// <remarks>
        /// <p class="body">The <see cref="Infragistics.Windows.Controls.CarouselViewSettings"/> object exposes properties that let you control all aspects of Carousel
        /// layout and visual effects.  Refer to the <see cref="Infragistics.Windows.Controls.CarouselViewSettings"/> topic for detailed information on all available properties.</p>
        /// </remarks>
        /// <seealso cref="ViewSettingsProperty"/>
		//[Description("Returns/set the CarouselViewSettings object for this XamDataCarousel.")]
		//[Category("Appearance")]
		[Bindable(true)]
        public CarouselViewSettings ViewSettings
		{
			get
			{
                // JJD 1/2/07 
                // Check for design mode first
                // If we are in design mode don't create an instance of the Settings object
				//if (this._viewSettings == null)
                if (this._viewSettings == null &&
                    DesignerProperties.GetIsInDesignMode(this) == false)
                    this._viewSettings = new CarouselViewSettings();

				return this._viewSettings;
			}
			set
			{
				this.SetValue(XamDataCarousel.ViewSettingsProperty, value);
			}
		}

		/// <summary>
		/// Determines if the <see cref="ViewSettings"/> property needs to be serialized.
		/// </summary>
		/// <returns>True if the property should be serialized</returns>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public bool ShouldSerializeViewSettings()
		{
			return this.ViewSettings != (CarouselViewSettings)XamDataCarousel.ViewSettingsProperty.DefaultMetadata.DefaultValue;
		}

		/// <summary>
		/// Resets the <see cref="ViewSettings"/> property to its default value.
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public void ResetViewSettings()
		{
			this.ViewSettings = (CarouselViewSettings)XamDataCarousel.ViewSettingsProperty.DefaultMetadata.DefaultValue;
		}

				#endregion //ViewSettings

			#endregion //Public properties

		#endregion //Properties
	}
}

#region Copyright (c) 2001-2012 Infragistics, Inc. All Rights Reserved
/* ---------------------------------------------------------------------*
*                           Infragistics, Inc.                          *
*              Copyright (c) 2001-2012 All Rights reserved               *
*                                                                       *
*                                                                       *
* This file and its contents are protected by United States and         *
* International copyright laws.  Unauthorized reproduction and/or       *
* distribution of all or any portion of the code contained herein       *
* is strictly prohibited and will result in severe civil and criminal   *
* penalties.  Any violations of this copyright will be prosecuted       *
* to the fullest extent possible under law.                             *
*                                                                       *
* THE SOURCE CODE CONTAINED HEREIN AND IN RELATED FILES IS PROVIDED     *
* TO THE REGISTERED DEVELOPER FOR THE PURPOSES OF EDUCATION AND         *
* TROUBLESHOOTING. UNDER NO CIRCUMSTANCES MAY ANY PORTION OF THE SOURCE *
* CODE BE DISTRIBUTED, DISCLOSED OR OTHERWISE MADE AVAILABLE TO ANY     *
* THIRD PARTY WITHOUT THE EXPRESS WRITTEN CONSENT OF INFRAGISTICS, INC. *
*                                                                       *
* UNDER NO CIRCUMSTANCES MAY THE SOURCE CODE BE USED IN WHOLE OR IN     *
* PART, AS THE BASIS FOR CREATING A PRODUCT THAT PROVIDES THE SAME, OR  *
* SUBSTANTIALLY THE SAME, FUNCTIONALITY AS ANY INFRAGISTICS PRODUCT.    *
*                                                                       *
* THE REGISTERED DEVELOPER ACKNOWLEDGES THAT THIS SOURCE CODE           *
* CONTAINS VALUABLE AND PROPRIETARY TRADE SECRETS OF INFRAGISTICS,      *
* INC.  THE REGISTERED DEVELOPER AGREES TO EXPEND EVERY EFFORT TO       *
* INSURE ITS CONFIDENTIALITY.                                           *
*                                                                       *
* THE END USER LICENSE AGREEMENT (EULA) ACCOMPANYING THE PRODUCT        *
* PERMITS THE REGISTERED DEVELOPER TO REDISTRIBUTE THE PRODUCT IN       *
* EXECUTABLE FORM ONLY IN SUPPORT OF APPLICATIONS WRITTEN USING         *
* THE PRODUCT.  IT DOES NOT PROVIDE ANY RIGHTS REGARDING THE            *
* SOURCE CODE CONTAINED HEREIN.                                         *
*                                                                       *
* THIS COPYRIGHT NOTICE MAY NOT BE REMOVED FROM THIS FILE.              *
* --------------------------------------------------------------------- *
*/
#endregion Copyright (c) 2001-2012 Infragistics, Inc. All Rights Reserved