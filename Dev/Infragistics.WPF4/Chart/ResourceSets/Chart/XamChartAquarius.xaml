<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igCA="clr-namespace:Infragistics.Windows.Chart"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	>
  <!-- Resource dictionary entries should be defined here. -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="XamChartAquarius_Brushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <!-- XamChart Style -->
  <RotateTransform3D x:Key="Chart3DRotate" d:EulerAngles="4.39538052119922,-32.3087767492375,-0.0841967881134114">
    <RotateTransform3D.Rotation> 
      <AxisAngleRotation3D Angle="32.595" Axis="0.131,-0.991,0.036"/>
    </RotateTransform3D.Rotation>
  </RotateTransform3D>
  <Style TargetType="{x:Type igCA:XamChart}">
    <Setter Property="Background" Value="{StaticResource ChartBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ChartBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1,1,1,1"/>
    <Setter Property="StartPaletteBrush" Value="{StaticResource StartPaletteBrush}"/>
    <Setter Property="EndPaletteBrush" Value="{StaticResource EndPaletteBrush}"/>
    <Setter Property="Transform3D" Value="{StaticResource Chart3DRotate}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igCA:XamChart}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5">
            <ContentPresenter x:Name="PART_Default_Chart"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <igCA:DoubleToCornerRadiusConverter x:Key="cornerConverter"/>
  <!-- Animation -->
  <igCA:Animation x:Key="XGridAnim" Duration="00:00:00"/>
  <igCA:Animation x:Key="YGridAnim" Duration="00:00:00"/>
  <Style x:Key="mySeriesAnimation" TargetType="{x:Type igCA:Animation}">
    <Setter Property="Duration" Value="00:00:00.8"/>
    <Setter Property="Sequential" Value="False"/>
  </Style>
  <!-- Gridline -->
  <igCA:Mark x:Key="XMajorGrid" Stroke="{StaticResource GridlineXMajorBrush}" Animation="{StaticResource XGridAnim}"/>
  <igCA:Mark x:Key="YMajorGrid" Stroke="{StaticResource GridlineYMajorBrush}" Animation="{StaticResource YGridAnim}"/>
  <igCA:Mark x:Key="ZMajorGrid" Stroke="{StaticResource GridlineZMajorBrush}"/>
  <igCA:Mark x:Key="XMinorGrid" Stroke="{StaticResource GridlineXMinorBrush}"/>
  <igCA:Mark x:Key="YMinorGrid" Stroke="{StaticResource GridlineYMinorBrush}"/>
  <igCA:Mark x:Key="ZMinorGrid" Stroke="{StaticResource GridlineZMinorBrush}"/>
  <igCA:Mark x:Key="XTick" Stroke="{StaticResource TickXBrush}"/>
  <igCA:Mark x:Key="YTick" Stroke="{StaticResource TickYBrush}"/>
  <!-- Axis Style -->
  <igCA:Label x:Key="XLabel" Foreground="{StaticResource LabelXBrush}" FontWeight="Bold" />
  <igCA:Label x:Key="YLabel" Foreground="{StaticResource LabelYBrush}" FontWeight="Bold"/>
  <Style TargetType="{x:Type igCA:Axis}">
    <Style.Triggers>
      <Trigger Property="AxisType" Value="PrimaryY">
        <Setter Property="Stroke" Value="{StaticResource AxisPrimaryXStrokeBrush}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="MajorGridline" Value="{StaticResource XMajorGrid}"/>
        <Setter Property="MinorGridline" Value="{StaticResource XMinorGrid}"/>
        <Setter Property="MajorTickMark" Value="{StaticResource XTick}"/>
        <Setter Property="Label" Value="{StaticResource XLabel}"/>
      </Trigger>
      <Trigger Property="AxisType" Value="PrimaryX">
        <Setter Property="Stroke" Value="{StaticResource AxisPrimaryYStrokeBrush}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="MajorGridline" Value="{StaticResource YMajorGrid}"/>
        <Setter Property="MinorGridline" Value="{StaticResource YMinorGrid}"/>
        <Setter Property="MajorTickMark" Value="{StaticResource YTick}"/>
        <Setter Property="Label" Value="{StaticResource YLabel}"/>
      </Trigger>
      <Trigger Property="AxisType" Value="PrimaryZ">
        <Setter Property="MajorGridline" Value="{StaticResource ZMajorGrid}"/>
        <Setter Property="MinorGridline" Value="{StaticResource ZMinorGrid}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Caption -->
  <Style TargetType="{x:Type igCA:Caption}">
    <Setter Property="Foreground" Value="{StaticResource CaptionForegroundBrush}"/>
    <Setter Property="FontFamily" Value="/xamFeatureBrowserResources;Component/fonts/#Avenir"/>
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Text" Value="Infragistics"/>
  </Style>
  <!-- Scene Style -->
  <Style TargetType="{x:Type igCA:Scene}">
    <Setter Property="Background" Value="{StaticResource SceneBackgroundBrush}"/>
    <Setter Property="Scene3DBrush" Value="{StaticResource Scene3DBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igCA:Scene}">
          <Grid Background="{x:Null}">
            <Border Margin="0,0,0,16.5" VerticalAlignment="Stretch" Height="Auto" CornerRadius="3,3,0,0">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,0.973" StartPoint="0.5,0.054">
                  <GradientStop Color="#4CFFFFFF" Offset="0"/>
                  <GradientStop Color="#19FFFFFF" Offset="1"/>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <ContentPresenter d:IsLocked="True"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- GridArea -->
  <Style TargetType="{x:Type igCA:GridArea}">
    <Style.Triggers>
      <Trigger Property="IsPieScene" Value="False">
        <Setter Property="Background" Value="{StaticResource GridAreaBackgroundBrush}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Stripes Style -->
  <Style TargetType="{x:Type igCA:Stripe}">
    <Setter Property="Fill" Value="{StaticResource StripeFillBrush}"/>
    <Setter Property="Stroke" Value="{StaticResource StripeStrokeBrush}"/>
    <Setter Property="StrokeThickness" Value="1"/>
  </Style>
  <!--  Legend Items -->
  <DataTemplate DataType="{x:Type igCA:LegendItemTemplate}">
    <DataTemplate.Resources>
      <Storyboard x:Key="Hover">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </DataTemplate.Resources>
    <Grid Background="{x:Null}" Margin="0,0,0,2"  Width="Auto" Height="Auto">
      <Rectangle VerticalAlignment="Stretch" Height="Auto" Stroke="#FF86C20E" RadiusX="3" RadiusY="3" Opacity="0" HorizontalAlignment="Stretch" x:Name="rectangle">
        <Rectangle.Fill>
          <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFB8DB71" Offset="0"/>
            <GradientStop Color="#FF6FA500" Offset="1"/>
            <GradientStop Color="#FF96CA2D" Offset="0.101"/>
            <GradientStop Color="#FF8EC125" Offset="0.13"/>
            <GradientStop Color="#FF8EC125" Offset="0.486"/>
            <GradientStop Color="#FF8EC125" Offset="0.817"/>
            <GradientStop Color="#FF85B71E" Offset="0.837"/>
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>
      <Viewbox HorizontalAlignment="Left" Margin="0,0,0,0" MaxHeight="20" Stretch="Uniform">
        <StackPanel Orientation="Horizontal" Width="Auto" Height="Auto">
          <Rectangle
    				Fill="{Binding Path=Fill}"
    				Margin="3,0,0,0"
    				Width="11"
    				Height="11"
    				StrokeThickness="1"
    				HorizontalAlignment="Stretch"
    				VerticalAlignment="Center" RadiusX="3" RadiusY="3" Stroke="#FFFFFFFF"/>
          <TextBlock Text="{Binding Path=Text}" VerticalAlignment="Bottom" HorizontalAlignment="Left"  Background="{x:Null}" Foreground="{StaticResource LegendItemForegroundBrush}"  Margin="5,0,2,0" x:Name="textBox"/>
        </StackPanel>
      </Viewbox>
    </Grid>
    <DataTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard x:Name="Hover_BeginStoryboard" Storyboard="{StaticResource Hover}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <StopStoryboard BeginStoryboardName="Hover_BeginStoryboard"/>
        </Trigger.ExitActions>
        <Setter Property="Foreground" TargetName="textBox" Value="#FFFFFFFF"/>
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!-- Legend -->
  <Style TargetType="{x:Type igCA:Legend}">
    <Setter Property="Foreground" Value="{StaticResource LegendItemForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource LegendBackgroundBrush}"/>
    <Setter Property="UseDataTemplate" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igCA:Legend}">
          <Grid Background="{x:Null}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="0.08*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="0.08*"/>
            </Grid.ColumnDefinitions>
            <Border Width="Auto" Height="Auto" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" Background="{TemplateBinding Background}" Margin="0,0,0,0" Grid.ColumnSpan="3"/>
            <Border Width="Auto" Height="Auto" BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" Margin="1,1,1,1" BorderBrush="{DynamicResource LegendBorderSecondaryBrush}" Grid.ColumnSpan="3"/>
            <ContentPresenter Margin="0,3,0,3" VerticalAlignment="Stretch" Grid.ColumnSpan="3"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource LegendBorderBrush}"/>
  </Style>
  <!-- Parameters-->
  <igCA:ChartParameterCollection x:Key="SeriesParameters">
    <igCA:ChartParameter Type="RectangleRounding" Value="3"/>
  </igCA:ChartParameterCollection>
  <!-- Series -->
  <Style TargetType="{x:Type igCA:Series}">
    <Setter Property="Stroke"  Value="{StaticResource SeriesStrokeBrush}"/>
    <Setter Property="UseDataTemplate" Value="True"/>
    <Setter Property="StrokeThickness" Value="1" />
    <Setter Property="ExtraParameters" Value="{StaticResource SeriesParameters}"/>
    <Style.Triggers>
      <Trigger Property="ChartType" Value="Line">
        <Setter Property="StrokeThickness" Value="3"/>
      </Trigger>
      <Trigger Property="ChartType" Value="Spline">
        <Setter Property="StrokeThickness" Value="3"/>
      </Trigger>
      <Trigger Property="ChartType" Value="Area">
        <Setter Property="StrokeThickness" Value="0"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- DataPoint Template BarChart-->
  <DataTemplate DataType="{x:Type igCA:BarChartTemplate}">
    <DataTemplate.Resources>
      <Style TargetType="{x:Type Rectangle}">
        <Setter Property="RadiusX" Value="3"/>
        <Setter Property="RadiusY" Value="3"/>
      </Style>
      <Storyboard x:Key="MouseOverHightlight">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#8CFFFFFF"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border1" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#A5FFFFFF"/>
        </ColorAnimationUsingKeyFrames>
      </Storyboard>
    </DataTemplate.Resources>
    <Grid x:Name="LegendControl">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="0.45*"/>
          <RowDefinition Height="0.56*"/>
        </Grid.RowDefinitions>
        <Border ToolTip="{Binding Path=ToolTip}" HorizontalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="1" Background="{Binding Path=Fill}" BorderBrush="{Binding Path=Stroke}" BorderThickness="{Binding Path=StrokeThickness}"
            CornerRadius="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-1-1-0'}" Grid.RowSpan="2"  x:Name="BaseFill"/>
        <Border ToolTip="{Binding Path=ToolTip}" Width="Auto" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" CornerRadius="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-1-0-0'}" HorizontalAlignment="Stretch" Margin="0,0,0,0" Grid.ColumnSpan="1" Grid.RowSpan="1" x:Name="border">
          <Border.Background>
            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
              <GradientStop Color="#59FFFFFF" Offset="0.29"/>
              <GradientStop Color="#26FFFFFF" Offset="0.995"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Border ToolTip="{Binding Path=ToolTip}" Width="Auto" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" CornerRadius="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-0-1-0'}" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Height="Auto" Grid.RowSpan="1" Grid.Row="1" x:Name="border1">
          <Border.Background>
            <LinearGradientBrush EndPoint="0.39,0" StartPoint="0.39,1.15">
              <GradientStop Color="#72FFFFFF" Offset="0.29"/>
              <GradientStop Color="#00FFFFFF" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
      </Grid>
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=IsNegative}" Value="True">
        <Setter TargetName="BaseFill" Property="CornerRadius" Value="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='1-0-0-1'}"/>
        <Setter TargetName="border" Property="CornerRadius" Value="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='1-0-0-0'}"/>
        <Setter TargetName="border1" Property="CornerRadius" Value="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-0-0-1'}"/>
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource MouseOverHightlight}" x:Name="MouseOverHightlight_BeginStoryboard"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <StopStoryboard BeginStoryboardName="MouseOverHightlight_BeginStoryboard"/>
        </Trigger.ExitActions>
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!-- DataPoint Template ColumnChart-->
  <DataTemplate DataType="{x:Type igCA:ColumnChartTemplate}">
    <DataTemplate.Resources>
      <Style TargetType="{x:Type Rectangle}">
        <Setter Property="RadiusX" Value="3"/>
        <Setter Property="RadiusY" Value="3"/>
      </Style>
      <Storyboard x:Key="MoveOverLighten">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border1" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#7FFFFFFF"/>
        </ColorAnimationUsingKeyFrames>
      </Storyboard>
    </DataTemplate.Resources>
    <Grid x:Name="LegendControl">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="0.61*"/>
          <ColumnDefinition Width="0.39*"/>
        </Grid.ColumnDefinitions>
        <Border ToolTip="{Binding Path=ToolTip}" 
            x:Name="BaseFill" HorizontalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="2" Background="{Binding Path=Fill}" BorderBrush="{Binding Path=Stroke}" BorderThickness="{Binding Path=StrokeThickness}" 
            CornerRadius="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='1-1-0-0'}" Grid.RowSpan="1" />
        <Border ToolTip="{Binding Path=ToolTip}" Width="Auto" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" CornerRadius="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='1-0-0-0'}" HorizontalAlignment="Stretch" Margin="1,1,0,1" Grid.ColumnSpan="1" Grid.RowSpan="1" VerticalAlignment="Stretch" Height="Auto" Opacity="0.5" x:Name="border">
          <Border.Background>
            <LinearGradientBrush EndPoint="1.13,0.5" StartPoint="0.059,0.5">
              <GradientStop Color="#F2FFFFFF" Offset="0"/>
              <GradientStop Color="#0CFFFFFF" Offset="0.995"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Border ToolTip="{Binding Path=ToolTip}" HorizontalAlignment="Stretch" Width="Auto" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" 
                CornerRadius="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-1-0-0'}" Grid.ColumnSpan="2" x:Name="border1">
          <Border.Background>
            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
              <GradientStop Color="#00FFFFFF" Offset="0.652"/>
              <GradientStop Color="#4CFFFFFF" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
      </Grid>
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=IsNegative}" Value="True">
        <Setter TargetName="BaseFill" Property="CornerRadius" Value="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-0-1-1'}"/>
        <Setter TargetName="border" Property="CornerRadius" Value="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-0-0-1'}"/>
        <Setter TargetName="border1" Property="CornerRadius" Value="{Binding Path=RectangleRounding, Converter={StaticResource cornerConverter}, ConverterParameter='0-0-1-0'}"/>
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource MoveOverLighten}" x:Name="MoveOverLighten_BeginStoryboard"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <StopStoryboard BeginStoryboardName="MoveOverLighten_BeginStoryboard"/>
        </Trigger.ExitActions>
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!-- DataPoint Template AreaChart-->
  <DataTemplate DataType="{x:Type igCA:AreaChartTemplate}">
    <DataTemplate.Resources>

    </DataTemplate.Resources>
    <Grid x:Name="LegendControl">
      <Grid>

        <!-- Displays the geometry. -->
        <Path ToolTip="{Binding Path=ToolTip}" Stroke="{x:Null}" StrokeThickness="1" Fill="{Binding Path=Fill}" Grid.RowSpan="2">
          <Path.Data>

            <!-- Creates a composite shape-->
            <PathGeometry>
              <PathGeometry.Figures>
                <PathFigureCollection>
                  <PathFigure IsClosed="True" StartPoint="{Binding Path=AreaPoint1}">
                    <PathFigure.Segments>
                      <PathSegmentCollection>
                        <LineSegment Point="{Binding Path=Point1}" />
                        <LineSegment Point="{Binding Path=Point2}" />
                        <LineSegment Point="{Binding Path=Point3}" />
                        <LineSegment Point="{Binding Path=Point4}" />
                      </PathSegmentCollection>
                    </PathFigure.Segments>
                  </PathFigure>
                </PathFigureCollection>
              </PathGeometry.Figures>
            </PathGeometry>
          </Path.Data>
        </Path>
        <Path ToolTip="{Binding Path=ToolTip}" Stroke="{x:Null}" StrokeThickness="1" d:LayoutOverrides="GridBox" Margin="0,1,0,0">
          <Path.Data>
            <!-- Creates a composite shape-->
            <PathGeometry>
              <PathGeometry.Figures>
                <PathFigureCollection>
                  <PathFigure IsClosed="True" StartPoint="{Binding Path=AreaPoint1}">
                    <PathFigure.Segments>
                      <PathSegmentCollection>
                        <LineSegment Point="{Binding Path=Point1}" />
                        <LineSegment Point="{Binding Path=Point2}" />
                        <LineSegment Point="{Binding Path=Point3}" />
                        <LineSegment Point="{Binding Path=Point4}" />
                      </PathSegmentCollection>
                    </PathFigure.Segments>
                  </PathFigure>
                </PathFigureCollection>
              </PathGeometry.Figures>
            </PathGeometry>
          </Path.Data>
          <Path.Fill>
            <LinearGradientBrush EndPoint="0.5,0.583" StartPoint="0.5,0">
              <GradientStop Color="#CCFFFFFF" Offset="0"/>
              <GradientStop Color="#19FFFFFF" Offset="0.87"/>
            </LinearGradientBrush>
          </Path.Fill>
        </Path>
      </Grid>
    </Grid>
  </DataTemplate>
  <DataTemplate DataType="{x:Type igCA:BubbleChartTemplate}">
    <DataTemplate.Resources>
      <Storyboard x:Key="MouseOverHighlight">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.65"/>
        </DoubleAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#26FFFFFF"/>
        </ColorAnimationUsingKeyFrames>
        <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)">
          <SplinePointKeyFrame KeyTime="00:00:00.3000000" Value="0.496,0.482"/>
        </PointAnimationUsingKeyFrames>
        <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)">
          <SplinePointKeyFrame KeyTime="00:00:00.3000000" Value="0.475,1.066"/>
        </PointAnimationUsingKeyFrames>
      </Storyboard>
    </DataTemplate.Resources>
    <Viewbox>
      <Grid
				Height="{Binding Path=Height}"
				Width="{Binding Path=Width}"
				Background="Transparent">
        <Grid
					Width="144.0000171661377"
					Height="146.9999008178711"
					Opacity="1"
					Margin="19.999998092651367,18.000038146972656,0,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top">
          <Path ToolTip="{Binding Path=ToolTip}"
						Margin="0,0,0,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Height="146.9999008178711"
						Width="144.0000171661377"
						Stretch="Fill"
						Opacity="1"
						Data="M 1.7714862823486328,56.28490447998047 C10.507722854614258,16.796043395996094 49.08151435852051,-7.496009826660156 87.91537666320801,2.0909347534179688 126.75079536437988,11.677391052246094 151.03729438781738,51.486839294433594 142.17639350891113,90.94634246826172 133.33075141906738,130.33550262451172 94.79159736633301,154.4677963256836 56.08117866516113,144.91051483154297 17.371980667114258,135.35387420654297 -6.948545455932617,95.7032699584961 1.7714862823486328,56.28490447998047 z"
						Fill="{Binding Path=Fill}" />
          <Path ToolTip="{Binding Path=ToolTip}" 
						Margin="0,0,0,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Height="Auto"
						Width="Auto"
						Stretch="Fill"
						Opacity="0.45"
						Data="M 1.7714862823486328,56.28490447998047 C10.507722854614258,16.796043395996094 49.08151435852051,-7.496009826660156 87.91537666320801,2.0909347534179688 126.75079536437988,11.677391052246094 151.03729438781738,51.486839294433594 142.17639350891113,90.94634246826172 133.33075141906738,130.33550262451172 94.79159736633301,154.4677963256836 56.08117866516113,144.91051483154297 17.371980667114258,135.35387420654297 -6.948545455932617,95.7032699584961 1.7714862823486328,56.28490447998047 z"
							>
            <Path.Fill>
              <RadialGradientBrush>
                <GradientStop Color="#00FFFFFF" Offset="0.835"/>
                <GradientStop Color="#FF000000" Offset="1"/>
              </RadialGradientBrush>
            </Path.Fill>
          </Path>
          <Path ToolTip="{Binding Path=ToolTip}" 
						Margin="3.6978816986083984,9.18100357055664,0,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Height="134.4857521057129"
						Width="137.46917343139648"
						Stretch="Fill"
						Opacity="0.65"
						Data="M 6.85319709777832,46.705162048339844 C-6.22529411315918,99.4701156616211 23.483583450317383,133.57506561279297 56.77624702453613,141.7943344116211 90.06857490539551,150.01433563232422 135.99615669250488,131.65258026123047 140.83252143859863,77.12853240966797 148.565523147583,-10.070533752441406 19.795991897583008,-5.512977600097656 6.85319709777832,46.705162048339844 z" x:Name="path">
            <Path.Fill>
              <LinearGradientBrush
								StartPoint="0.499,1.163"
								EndPoint="0.531,0.655">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop
											Color="#FFffffff"
											Offset="0" />
                    <GradientStop
											Color="#00FFFFFF"
											Offset="1" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Path.Fill>
          </Path>
          <Path ToolTip="{Binding Path=ToolTip}" 
						Margin="7.650897979736328,6.194295883178711,0,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Height="81.17484474182129"
						Width="127.05314445495605"
						Stretch="Fill"
						Opacity="1"
						Data="M 7.659456253051758,70.52281951904297 C7.113893508911133,36.76720428466797 32.71365547180176,7.548667907714844 66.78253364562988,6.243064880371094 100.85266304016113,4.937614440917969 134.70404243469238,29.98046112060547 134.70404243469238,64.53380584716797 134.70404243469238,78.01448822021484 8.216676712036133,105.0223617553711 7.659456253051758,70.52281951904297 z" x:Name="path1">
            <Path.Fill>
              <RadialGradientBrush GradientOrigin="0.333,0.256">
                <RadialGradientBrush.RelativeTransform>
                  <TransformGroup>
                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.146" ScaleY="1.146"/>
                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                    <TranslateTransform X="-0.136" Y="-0.098"/>
                  </TransformGroup>
                </RadialGradientBrush.RelativeTransform>
                <GradientStop Color="#CCFFFFFF" Offset="0"/>
                <GradientStop Color="#26FFFFFF" Offset="1"/>
              </RadialGradientBrush>
            </Path.Fill>
          </Path>
        </Grid>
      </Grid>
    </Viewbox>
    <DataTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource MouseOverHighlight}" x:Name="MouseOverHighlight_BeginStoryboard"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <StopStoryboard BeginStoryboardName="MouseOverHighlight_BeginStoryboard"/>
        </Trigger.ExitActions>
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!--Marker-->
  <Style  TargetType="{x:Type igCA:Marker}">
    <Setter Property="Fill" Value="{StaticResource MarkerFillBrush}"/>
    <Setter Property="Stroke" Value="{StaticResource MarkerStrokeBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource MarkerForegroundBrush}"/>
    <Setter Property="Type" Value="Circle"/>
  </Style>
</ResourceDictionary>
