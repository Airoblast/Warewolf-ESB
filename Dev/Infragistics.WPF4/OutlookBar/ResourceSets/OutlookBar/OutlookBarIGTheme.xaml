<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:igOutlookBar="clr-namespace:Infragistics.Windows.OutlookBar"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="OutlookBarBase.xaml"/>
    <ResourceDictionary Source="../OutlookBarBrushes/OutlookBarIGTheme_Brushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- =============================================================================== -->
  <!-- MenuItem style for 'fixed' menu items: OverflowMenuItemStyleKey                 -->
  <!-- =============================================================================== -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}" TargetType="MenuItem">
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border
    x:Name="Border"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}"
    Margin="{TemplateBinding Margin}">
            <Grid Visibility="Visible">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="MenuItemIconColumnGroup" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="14"/>
              </Grid.ColumnDefinitions>
              <Border
  x:Name="IconAreaBackground"
  Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
  BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
  BorderThickness="0,0,1,0"
  Visibility="Collapsed"/>
              <Grid
    HorizontalAlignment="Stretch"
    Margin="1,1,1,1"
    Width="Auto"
    Grid.Column="0"
    Grid.ColumnSpan="4"
    x:Name="Highlight"
    Visibility="Collapsed">
                <Rectangle x:Name="HighlightFill" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
              </Grid>
              <Border
    x:Name="checkedState"
    Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalCenterFillKey}}"
    BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalOuterBorderFillKey}}"
    BorderThickness="1"
    Visibility="Collapsed"
    Margin="2"/>
              <ContentPresenter
    x:Name="Icon"
    VerticalAlignment="Center"
    HorizontalAlignment="Center"
    ContentSource="Icon"
    MaxHeight="18"
    MaxWidth="18"/>
              <Grid
    Visibility="Collapsed"
    Margin="1,0,0,0"
    x:Name="GlyphPanel"
    VerticalAlignment="Center"
    HorizontalAlignment="Center">
                <Path
    x:Name="GlyphPanelpath"
    VerticalAlignment="Center"
    Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
    Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
    FlowDirection="LeftToRight"/>
              </Grid>
              <ContentPresenter
    Grid.Column="1"
    x:Name="HeaderHost"
    RecognizesAccessKey="True"
    ContentSource="Header"
    VerticalAlignment="Center"
    Margin="0,4,0,4"/>
              <Grid
    Grid.Column="3"
    Margin="0,0,1,0"
    x:Name="ArrowPanel"
    VerticalAlignment="Center"
    HorizontalAlignment="Center">
                <Path
    x:Name="ArrowPanelPath"
    VerticalAlignment="Center"
    Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
    Data="M0,0 L0,8 L4,4 z"/>
              </Grid>
              <Popup
    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
    Placement="Right"
    x:Name="SubMenuPopup"
    Focusable="false"
    AllowsTransparency="true"
    PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}"
    VerticalOffset="-3">
                <Grid x:Name="SubMenu">
                  <Border
    x:Name="SubMenuBorder"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="1">
                    <ScrollViewer
  x:Name="Popup_ScrollViewer"
  HorizontalScrollBarVisibility="Disabled"
  VerticalScrollBarVisibility="Auto"
  Style="{StaticResource MenuScrollViewer}">
                      <ItemsPresenter
  Grid.IsSharedSizeScope="true"
  KeyboardNavigation.TabNavigation="Cycle"
  KeyboardNavigation.DirectionalNavigation="Cycle"
  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                  </Border>
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
          <ControlTemplate.Triggers>
            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
            <Trigger Property="Role" Value="TopLevelHeader">
              <Setter Property="Padding" Value="6,3,6,3"/>
              <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
              <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
              <Setter Property="Foreground" Value="{StaticResource Brush_1000}"/>
              <Setter TargetName="HighlightFill" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}"/>
              <Setter TargetName="HighlightFill" Property="Stroke" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
            </Trigger>
            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
            <Trigger Property="Role" Value="TopLevelItem">
              <Setter Property="Padding" Value="6,3,6,3"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
              <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
              <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
              <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
            </Trigger>
            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
            <Trigger Property="Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Padding" Value="0,2,0,2"/>
              <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
              <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
              <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
              <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
            </Trigger>
            <!-- Role = SubMenuItem : this is a child menu item which has children-->
            <Trigger Property="Role" Value="SubmenuItem">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Padding" Value="0,2,0,2"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
              <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
              <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
              <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
              <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
            </Trigger>
            <!-- If no Icon is present then we collapse the Icon Content -->
            <Trigger Property="Icon" Value="{x:Null}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
            </Trigger>
            <!-- The GlyphPanel contains the CheckMark -->
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" Value="Visible" TargetName="checkedState"/>
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
              <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
              <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
              <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextHottrackFillKey}}"/>
              <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{StaticResource Brush_1001}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True"/>
                <Condition Property="IsHighlighted" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="checkedState" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackCenterFillKey}}"/>
              <Setter TargetName="checkedState" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Role" Value="TopLevelHeader"/>
                <Condition Property="IsHighlighted" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource Brush_1009}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- =============================================================================== -->
  <!-- XamOutlookBar                                                                   -->
  <!-- =============================================================================== -->
  <Style TargetType="{x:Type igOutlookBar:XamOutlookBar}">
    <Style.Resources>
      <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
    </Style.Resources>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:XamOutlookBar}">
          <AdornerDecorator>
            <!-- JM 04-27-11 TFS73871 Add VerticalAlignment = Stretch -->
            <Border VerticalAlignment="Stretch">
              <!-- JM 04-27-11 TFS73871 Add VerticalAlignment = Stretch -->
              <Grid VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
                  <!-- JM 04-27-11 TFS73871 First column should be '*' column -->
                  <!-- JM 04-25-11 TFS22746 Remove errant 3rd ColumnDefinition -->
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
                <!-- JM 04-25-11 TFS22746 Change Grid.Column from 2 to 1 -->
                <Thumb
  x:Name="PART_VerticalSplitter"
  Grid.Column="2"
  Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.VerticalSplitterStyleKey}}"
  Visibility="{Binding Path=IsVerticalSplitterVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}"/>

                <!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
                <!-- JM 04-25-11 TFS22746 Change Grid.Column from 1 to 0 -->
                <Border
  Grid.Column="1"
  VerticalAlignment="Stretch"
  Background="{TemplateBinding Background}"
  BorderBrush="{TemplateBinding BorderBrush}"
  BorderThickness="{TemplateBinding BorderThickness}"
  Padding="{TemplateBinding Padding}"
  SnapsToDevicePixels="True">
                  <Grid x:Name="PART_Grid">
                    <Grid.RowDefinitions>
                      <!-- Header Row -->
                      <RowDefinition Height="Auto"/>
                      <!-- Selected Group Content Row -->
                      <RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
                      <!-- Splitter Row -->
                      <RowDefinition Height="Auto"/>
                      <!-- Groups Row -->
                      <RowDefinition Height="0" MaxHeight="{Binding ElementName=PART_NavigationArea, Path=Height}"/>
                      <!-- Toolbar Row -->
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <!-- Header ================================================ -->
                    <igOutlookBar:SelectedGroupHeader
  x:Name="PART_SelectedGroupHeader"
  Grid.Column="1"
  Grid.Row="0"
  TextBlock.FontWeight="Bold"/>
                    <!-- Selected Group Content ================================ -->
                    <igOutlookBar:SelectedGroupContent
  x:Name="PART_SelectedGroupContent"
  MinHeight="{TemplateBinding SelectedAreaMinHeight}"
  Grid.Column="1"
  Grid.Row="1"/>
                    <!-- Splitter ============================================== -->
                    <igOutlookBar:GroupAreaSplitter x:Name="PART_Splitter" Grid.Column="1" Grid.Row="2"/>
                    <!-- Groups   ============================================== -->
                    <igOutlookBar:GroupsPresenter
  x:Name="PART_NavigationArea"
  Grid.Column="1"
  Grid.Row="3"
  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavigationAreaGroups}"/>
                    <!-- Toolbar =============================================== -->
                    <igOutlookBar:GroupOverflowArea x:Name="PART_OverflowArea" Grid.Column="1" Grid.Row="4"/>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </AdornerDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" SourceName="PART_Splitter" Value="true">
              <Setter Property="Cursor" Value="SizeNS">
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="PART_VerticalSplitter" Value="true">
              <Setter Property="Cursor" Value="SizeWE">
              </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VerticalSplitterLocation}" Value="Left">
              <Setter TargetName="PART_VerticalSplitter" Property="Grid.Column" Value="0"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- =============================================================================== -->
  <!-- OutlookBarGroup                                                                 -->
  <!-- =============================================================================== -->
  <Style TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
    <Setter Property="BorderThickness" Value="1,1,1,0"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalTextFillKey}}"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
          <Grid>
            <Border
  Background="{TemplateBinding Background}"
  BorderBrush="{TemplateBinding BorderBrush}"
  BorderThickness="{TemplateBinding BorderThickness}"
  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid Margin="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="ImageColumn" Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image
  x:Name="PART_Image"
  MaxHeight="24"
  MaxWidth="24"
  MinHeight="16"
  MinWidth="16"
  Grid.Column="0"
  Margin="2,2,0,1"
  Source="{TemplateBinding LargeImage}"
  Stretch="Uniform"/>
                <!-- Group Header(navigartion area/menu)-->
                <ContentPresenter
  x:Name="PART_Header"
  Grid.Column="1"
  Margin="4,0,0,1"
  VerticalAlignment="Center"
  Content="{TemplateBinding Header}"
  ContentTemplate="{TemplateBinding HeaderTemplate}"
  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
  TextElement.FontWeight="Bold"/>
              </Grid>
            </Border>
            <Rectangle
  x:Name="focusRec"
  Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"
  StrokeThickness="1"
  Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="Margin" Value="12,0,0,1"/>
              <Setter TargetName="ImageColumn" Property="Width" Value="Auto"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ImageColumn" Property="Width" Value="0"/>
            </MultiDataTrigger>
            <Trigger Property="Location" Value="NavigationGroupArea">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.ShowGroupHeaderAsToolTip, RelativeSource={RelativeSource Self}}" Value="True">
              <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header}"/>
            </DataTrigger>
            <Trigger Property="Location" Value="OverflowContextMenu">
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
              <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}"/>
              <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}"/>
              <Setter TargetName="focusRec" Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
              <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
            <Trigger Property="Location" Value="OverflowArea">
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_Image" Property="Margin" Value="2,6,2,3"/>
              <Setter TargetName="PART_Image" Property="MaxHeight" Value="16"/>
              <Setter TargetName="PART_Image" Property="MaxWidth" Value="16"/>
              <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
              <Setter Property="BorderThickness" Value="0"/>
              <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveHottrackCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
      </MultiDataTrigger>
      <!-- Highlight on mouse down-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptured}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>

  <!-- =============================================================================== -->
  <!-- SelectedGroupHeader                                                             -->
  <!-- =============================================================================== -->
  <Style TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
    <Style.Resources>
      <RotateTransform x:Key="MinimizeOnRightTransform" Angle="180"/>
    </Style.Resources>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.CurrentGroupHeaderCenterFillKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
          <Grid>
            <Border
  Background="{TemplateBinding Background}"
  BorderBrush="{TemplateBinding BorderBrush}"
  BorderThickness="{TemplateBinding BorderThickness}"
  Padding="{TemplateBinding Padding}"
  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter
  x:Name="ContentPresenterHeader"
  Grid.Column="0"
  Margin="7,7,8,3"
  Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroup.Header, RelativeSource={RelativeSource Self}}"/>
                <ToggleButton
  x:Name="MinimizeButton"
  Grid.Column="1"
  Margin="0,4,0,3"
  IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
  Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}}"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OutlookBar.AllowMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
              <Setter TargetName="MinimizeButton" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
              <Setter TargetName="ContentPresenterHeader" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
              <Setter TargetName="MinimizeButton" Property="LayoutTransform" Value="{StaticResource MinimizeOnRightTransform}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- =============================================================================== -->
  <!-- GroupAreaSplitterThumb                                                          -->
  <!-- =============================================================================== -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.HorizontalSplitterStyleKey}" TargetType="{x:Type Thumb}">
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SplitterCenterFillKey}}"/>
    <Setter Property="BorderThickness" Value="0,1"/>
    <Setter Property="Padding" Value="0,2"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Grid HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
              <Path
  x:Name="backgroundGlyph"
  Width="18"
  Height="2"
  Margin="1,1,0,0"
  Data="M 17,1 C17,1.552 17.447,2 18,2 18.552,2 19,1.552 19,1 19,0.447 18.552,0 18,0 17.447,0 17,0.447 17,1 zM 13,1 C13,1.552 13.447,2 14,2 14.552,2 15,1.552 15,1 15,0.447 14.552,0 14,0 13.447,0 13,0.447 13,1 zM 9,1 C9,1.552 9.447,2 10,2 10.552,2 11,1.552 11,1 11,0.447 10.552,0 10,0 9.447,0 9,0.447 9,1 zM 5,1 C5,1.552 5.447,2 6,2 6.552,2 7,1.552 7,1 7,0.447 6.552,0 6,0 5.447,0 5,0.447 5,1 zM 1,1 C1,1.552 1.447,2 2,2 2.552,2 3,1.552 3,1 3,0.447 2.552,0 2,0 1.447,0 1,0.447 1,1 z"
  Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"
  Opacity="1"
  Stretch="Fill"/>
              <Path
  x:Name="foregroundGlyph"
  Width="18"
  Height="2"
  HorizontalAlignment="Left"
  VerticalAlignment="Top"
  Data="M 17,1 C17,1.552 17.447,2 18,2 18.552,2 19,1.552 19,1 19,0.447 18.552,0 18,0 17.447,0 17,0.447 17,1 zM 13,1 C13,1.552 13.447,2 14,2 14.552,2 15,1.552 15,1 15,0.447 14.552,0 14,0 13.447,0 13,0.447 13,1 zM 9,1 C9,1.552 9.447,2 10,2 10.552,2 11,1.552 11,1 11,0.447 10.552,0 10,0 9.447,0 9,0.447 9,1 zM 5,1 C5,1.552 5.447,2 6,2 6.552,2 7,1.552 7,1 7,0.447 6.552,0 6,0 5.447,0 5,0.447 5,1 zM 1,1 C1,1.552 1.447,2 2,2 2.552,2 3,1.552 3,1 3,0.447 2.552,0 2,0 1.447,0 1,0.447 1,1 z"
  Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"
  Opacity="1"
  Stretch="Fill"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- =============================================================================== -->
  <!-- GroupOverflowArea                                                               -->
  <!-- =============================================================================== -->
  <Style TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
          <Border
  Background="{TemplateBinding Background}"
  BorderBrush="{TemplateBinding BorderBrush}"
  BorderThickness="{TemplateBinding BorderThickness}"
  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <!-- Ovwerflow Toolbar -->
              <igOutlookBar:GroupsPresenter
  x:Name="PART_OverflowGroups"
  Grid.Column="0" Orientation="Horizontal"
    ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=(igOutlookBar:XamOutlookBar.OutlookBar).OverflowAreaGroups}"/>
              <!-- Overflow Menu     -->
              <Menu Grid.Column="1" Background="{StaticResource TransparentBrush}" x:Name="MainOverflowMenu" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Menu.ItemsPanel>
                  <ItemsPanelTemplate>
                    <Grid/>
                  </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem x:Name="PART_OverflowMenu"
                          ToolTip="{x:Static igOutlookBar:Resources.OverflowMenuButtonTooltip}"
                          Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}}"
                              VerticalContentAlignment="Stretch">
                  <MenuItem.Header>
                    <Path
                        x:Name="glyph"
      Width="5"
      Height="3"
      Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}"
      Stretch="Fill"
      Data="M0,0C0,0 5,0 5,0 5,0 2.5,2.5 2.5,2.5 2.5,2.5 0,0 0,0z"/>
                  </MenuItem.Header>
                  <MenuItem
  Header="{x:Static igOutlookBar:Resources.ShowMoreButtonsMenuItemHeader}"
  Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
  Command="{x:Static igOutlookBar:OutlookBarCommands.ShowMoreButtonsCommand}"
                      CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                        >
                    <MenuItem.Icon>
                      <Image Source="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.ShowMoreButtonsImageKey}}"/>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem
  Header="{x:Static igOutlookBar:Resources.ShowFewerButtonsMenuItemHeader}"
  Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
  Command="{x:Static igOutlookBar:OutlookBarCommands.ShowFewerButtonsCommand}"
                      CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                        >
                    <MenuItem.Icon>
                      <Image Source="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.ShowFewerButtonsImageKey}}"/>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem
  Header="{x:Static igOutlookBar:Resources.NavigationAreaOptionsMenuItemHeader}"
  Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
  Command="{x:Static igOutlookBar:OutlookBarCommands.ShowOptionsCommand}"
                      CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
										/>
                  <MenuItem x:Name="PART_AddRemoveMenu"
  Header="{x:Static igOutlookBar:Resources.AddOrRemoveButtonsMenuItemHeader}"
                      Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"/>
                  <Separator x:Name="OverflowMenuSeparator"
                      Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuSeparatorStyleKey}}"/>
                </MenuItem>
              </Menu>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).ContextMenuGroups.Count, RelativeSource={RelativeSource Self}}" Value="0">
              <Setter TargetName="OverflowMenuSeparator" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_OverflowMenu">
              <Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
              <Setter TargetName="glyph" Property="Fill" Value="{StaticResource Brush_1002}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="PART_OverflowMenu">
              <Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
              <Setter TargetName="glyph" Property="Fill" Value="{StaticResource Brush_1003}"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True" SourceName="PART_OverflowMenu">
              <Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
              <Setter TargetName="glyph" Property="Fill" Value="{StaticResource Brush_1004}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- =============================================================================== -->
  <!-- MinimizeToggleButtonStyle: MinimizeToggleButtonStyleKey                         -->
  <!-- =============================================================================== -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}" TargetType="ToggleButton">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="ToolTip" Value="{x:Static igOutlookBar:Resources.MinimizeButtonMinimizeTooltip}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border
    x:Name="glyphArea"
    Width="18"
    Height="18"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}"
    Padding="{TemplateBinding Padding}"
    RenderTransformOrigin="0.5,0.5">
            <Path
    Width="4"
    Height="7"
    Data="M 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
    Fill="{TemplateBinding Foreground}"
    Stretch="Fill"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="glyphArea" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="180"/>
                </Setter.Value>
              </Setter>
              <Setter Property="ToolTip" Value="{x:Static igOutlookBar:Resources.MinimizeButtonExpandTooltip}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- =============================================================================== -->
  <!-- NavigationPaneOptionsControl                                                    -->
  <!-- =============================================================================== -->
  <Style TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}"/>
    <Setter Property="Width" Value="314"/>
    <Setter Property="Height" Value="181"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
          <ControlTemplate.Resources>
            <Style x:Key="labelRuler" TargetType="{x:Type Separator}">
              <Setter Property="Height" Value="2"/>
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="SnapsToDevicePixels" Value="True"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style TargetType="{x:Type Button}">
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalCenterFillKey}}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalOuterBorderFillKey}}"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root">
                      <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                      </Border>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter Property="Background"  Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedInnerBorderFillKey}}"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background"  Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonDisabledBackground}}"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonDisabledBorderBrush}}"/>
                </Trigger>
              </Style.Triggers>
            </Style>

            <Style x:Key="VerticalButtonDecrease" TargetType="{x:Type RepeatButton}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path x:Name="decreaseGlyph"
									Width="8"
									Height="4"
									Data="M 0,3 C0,3 0,4 0,4 0,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
									Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="decreaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="decreaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="VerticalButtonIncrease" TargetType="{x:Type RepeatButton}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path
								x:Name="increaseGlyph"
								Width="8"
								Height="4"
								Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z"
								Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"
								Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="increaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="increaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="HorizontalButtonDecrease" TargetType="{x:Type RepeatButton}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path x:Name="horizontalDecreaseGlyph"
									Width="4"
									Height="8"
									Data="M 4,0 C4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,0 4,0 z"
									Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"
									Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="horizontalDecreaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="horizontalDecreaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="HorizontalButtonIncrease" TargetType="{x:Type RepeatButton}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path x:Name="horizontalIncreaseGlyph"
								Width="4"
								Height="8"
								Data="M 0,0 C0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 z"
								Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"
								Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="horizontalIncreaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="horizontalIncreaseGlyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="bd" RadiusX="2" RadiusY="2" Fill="{DynamicResource ScrollbarThumbNormalBackgroundBrush}" StrokeThickness="1" Stroke="{DynamicResource ScrollBarThumbNormalBorderBrush}"/>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Stroke" TargetName="bd" Value="{DynamicResource ScrollBarThumbHoverBorderBrush}"/>
                        <Setter Property="Fill" TargetName="bd" Value="{DynamicResource ScrollBarThumbHoverBackgroundBrush}"/>
                      </Trigger>
                      <Trigger Property="IsDragging" Value="True">
                        <Setter Property="Fill" TargetName="bd" Value="{DynamicResource ScrollBarThumbPressedBackgroundBrush}"/>
                        <Setter Property="Stroke" TargetName="bd" Value="{DynamicResource ScrollBarThumbPressedBorderBrush}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
              <Setter Property="OverridesDefaultStyle" Value="true"/>
              <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="IsTabStop" Value="false"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="igScrollBarStyle" TargetType="{x:Type ScrollBar}">
              <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=scrollBarTrackFill}}"/>
              <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
              <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
              <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                      <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                      </Grid.RowDefinitions>
                      <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource VerticalButtonDecrease}"/>
                      <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                          <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                          <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                          <Thumb Style="{StaticResource ScrollBarThumb}" Width="10"/>
                        </Track.Thumb>
                      </Track>
                      <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource VerticalButtonIncrease}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                  <Setter Property="Width" Value="Auto"/>
                  <Setter Property="MinWidth" Value="0"/>
                  <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                  <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                  <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=horizontalScrollBarTrackFill}}"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                            <ColumnDefinition Width="0.00001*"/>
                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                          </Grid.ColumnDefinitions>
                          <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource HorizontalButtonDecrease}"/>
                          <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                              <Thumb Style="{StaticResource ScrollBarThumb}" Height="10"/>
                            </Track.Thumb>
                          </Track>
                          <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource HorizontalButtonIncrease}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
            <Style x:Key="igScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                      <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                      <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource igScrollBarStyle}"/>
                      <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource igScrollBarStyle}"/>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
              </Style.Triggers>
            </Style>
            <Style x:Key="igListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
              <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
              <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
              <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
              <Setter Property="Padding" Value="4,1"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                      <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"/>
                      </Trigger>
                      <Trigger Property="IsSelected" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedInnerBorderFillKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"/>
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="IsSelected" Value="true"/>
                          <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground" Value="{StaticResource Brush_1008}"/>
                      </MultiTrigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="listbox" TargetType="{x:Type ListBox}">
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="ItemContainerStyle" Value="{StaticResource igListBoxItemStyle}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                      <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{StaticResource igScrollViewerStyle}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                      </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                      </Trigger>
                      <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="EmptyCheckBoxFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="CheckRadioFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style TargetType="{x:Type CheckBox}">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
              <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Rectangle x:Name="normal"
                  Width="13"
                  RadiusX="1"
                  RadiusY="1"
                  Stroke="{DynamicResource Gray2}"
                  StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{DynamicResource CheckBoxFill}" />
                      <Rectangle x:Name="innerShadow" Width="11" StrokeThickness="1" HorizontalAlignment="Left" Margin="3,3,0,0" Height="11" VerticalAlignment="Top" Fill="{StaticResource NewBrush10}" />
                      <Path x:Name="checkBox"
              Height="8"
              Width="9"
              Stretch="Fill"
              Opacity="0"
              Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
              Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}" HorizontalAlignment="Left" Margin="4,5,0,0" VerticalAlignment="Top" />
                      <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="normal" Property="Stroke" Value="{DynamicResource Cyan0}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="normal" Property="Stroke" Value="{DynamicResource Cyan1}"/>
                      </Trigger>
                      <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="checkBox" Property="Opacity" Value="1"/>
                      </Trigger>
                      <Trigger Property="HasContent" Value="true">
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckRadioFocusVisual}"/>
                        <Setter Property="Padding" Value="4,0,0,0"/>
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ControlTemplate.Resources>
          <Border
  Background="{TemplateBinding Background}"
  BorderBrush="{TemplateBinding BorderBrush}"
  BorderThickness="{TemplateBinding BorderThickness}"
  Padding="{TemplateBinding Padding}"
                        >
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <DockPanel Grid.ColumnSpan="2" Margin="0,2,7,0">
                <Label DockPanel.Dock="Left" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlOrderLabel}" Foreground="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
                <Separator Style="{StaticResource labelRuler}"/>
              </DockPanel>
              <ListBox
  x:Name="PART_ListBox"
  Grid.Row="1"
  Grid.RowSpan="3"
  Height="116"
                  Style="{StaticResource listbox}"
  Margin="15,2,0,8"/>
              <Button
  x:Name="btnMoveUp" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlMoveUpButton}"
  Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedUpCommand}"
  Grid.Column="1"
  Grid.Row="1"
  Width="75"
  Height="23"
  HorizontalAlignment="Center"
  VerticalAlignment="Top"
  Margin="8,2,5,0"/>
              <Button
  x:Name="btnMoveDn" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlMoveDownButton}"
  Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedDownCommand}"
  Grid.Column="1"
  Grid.Row="2"
  Width="75"
  Height="23"
  HorizontalAlignment="Center"
  VerticalAlignment="Top"
  Margin="8,0,5,9"/>
              <Button
  x:Name="btnReset" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlResetButton}"
  Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.ResetGroupSequenceAndVisibilityCommand}"
  Grid.Column="1"
  Grid.Row="3"
  Width="75"
  Height="23"
  HorizontalAlignment="Center"
  VerticalAlignment="Top"
  Margin="8,0,5,27"/>
              <Button
  Name="btnOK" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlOkButton}"
  Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.CommitChangesAndCloseCommand}"
  IsDefault="True"
  Grid.Column="0"
  Grid.Row="4"
  Width="75"
  Height="23"
  HorizontalAlignment="Right"
  Margin="0,0,0,8"/>
              <Button
  Name="btnCancel" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlCancelButton}"
  IsCancel="True"
  Grid.Column="1"
  Grid.Row="4"
  Width="75"
  Height="23"
  HorizontalAlignment="Left"
  Margin="9,0,6,8"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>