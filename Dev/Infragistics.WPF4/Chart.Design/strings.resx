<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LD_XamChart" xml:space="preserve">
    <value>The chart control.</value>
  </data>
  <data name="LC_Chart Data" xml:space="preserve">
    <value>Chart Data</value>
  </data>
  <data name="LD_XamChart_P_Series" xml:space="preserve">
    <value>The collection of data series which are used to provide data to the chart.</value>
  </data>
  <data name="LD_XamChart_P_Axes" xml:space="preserve">
    <value>Gets the axis collection. Every axis has an AxisType which could be PrimaryX, PrimaryY, PrimaryZ, SecondaryX and SecondaryY.</value>
  </data>
  <data name="LD_XamChart_P_Transform3D" xml:space="preserve">
    <value>Gets or sets Transformation Matrix for 3D charts that provides all three-dimensional transformations, including translation, rotation, and scale transformations.</value>
  </data>
  <data name="LD_XamChart_P_Caption" xml:space="preserve">
    <value>Gets or sets the chart caption. Keeps information about text value, font, color and position for a Chart title.</value>
  </data>
  <data name="LD_XamChart_P_Scene" xml:space="preserve">
    <value>Gets or sets the chart scene which contains information related to scene appearance. The chart scene is different for 2D and 3D chart. For 2D chart it is used for Background color and position. For 3D chart it also containes thicknes of the 3D scene.</value>
  </data>
  <data name="LD_XamChart_P_Legend" xml:space="preserve">
    <value>Gets or sets the chart legend. The chart legend box appears alongside the chart border. It is used to give text description for every data point or series appearance in the chart. Many qualities of the legend are dependent upon ChartType.</value>
  </data>
  <data name="LD_XamChart_P_View3D" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the chart is rendered in 3D.</value>
  </data>
  <data name="LD_XamChart_P_RefreshEnabled" xml:space="preserve">
    <value>Gets or sets a value that indicates whether refreshing of the chart is enabled.</value>
  </data>
  <data name="LD_XamChart_P_Lights" xml:space="preserve">
    <value>Gets Collection with lights that represent lighting applied to a 3-D scene. Used for 3D charts only.</value>
  </data>
  <data name="LC_Brushes" xml:space="preserve">
    <value>Brushes</value>
  </data>
  <data name="LD_XamChart_P_StartPaletteBrush" xml:space="preserve">
    <value>Gets or sets the end Brush which is used to create a palette of colors for data points and series.</value>
  </data>
  <data name="LD_XamChart_P_EndPaletteBrush" xml:space="preserve">
    <value>Gets or sets the end Brush which is used to create a palette of colors for data points and series.</value>
  </data>
  <data name="LD_XamChart_P_Theme" xml:space="preserve">
    <value>Gets or sets the default look for the control.</value>
  </data>
  <data name="LD_XamChart_P_DrawException" xml:space="preserve">
    <value>Gets or sets a value that indicates whether an exception is drawn as a string message on the screen. Otherwise, exception will be thrown.</value>
  </data>
  <data name="LC_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="LD_XamChart_E_DataBind" xml:space="preserve">
    <value>This event occurs immediately after data binding. This event is used to change color or appearance of data points after binding.</value>
  </data>
  <data name="LD_XamChart_E_ChartRendering" xml:space="preserve">
    <value>This event occurs before the chart is rendered.</value>
  </data>
  <data name="LD_XamChart_E_ChartRendered" xml:space="preserve">
    <value>This event occurs after the chart is rendered.</value>
  </data>
  <data name="LD_Animation_P_BeginTime" xml:space="preserve">
    <value>Gets or sets the time at which this Timeline should begin.</value>
  </data>
  <data name="LD_Animation_P_Duration" xml:space="preserve">
    <value>Gets or sets the length of time for which this timeline plays, not counting repetitions.</value>
  </data>
  <data name="LD_Animation_P_AccelerationRatio" xml:space="preserve">
    <value>Gets or sets a value specifying the percentage of the timeline's Duration spent accelerating the passage of time from zero to its maximum rate.</value>
  </data>
  <data name="LD_Animation_P_DecelerationRatio" xml:space="preserve">
    <value>Gets or sets a value specifying the percentage of the timeline's Duration spent decelerating the passage of time from its maximum rate to zero.</value>
  </data>
  <data name="LD_Animation_P_RepeatBehavior" xml:space="preserve">
    <value>Gets or sets the repeating behavior of this timeline, either as an iteration Count or a repeat Duration.</value>
  </data>
  <data name="LD_Animation_P_Sequential" xml:space="preserve">
    <value>Gets or sets a value indicating whether the sub elements are animated all together or sequentially. Used for series, gridlines and tickmarks.</value>
  </data>
  <data name="LC_Scale" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="LD_Axis_P_AxisType" xml:space="preserve">
    <value>Gets or sets the axis type for this axis. This property is also used to enable secondary axes.</value>
  </data>
  <data name="LC_Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="LD_Axis_P_Maximum" xml:space="preserve">
    <value>Gets or sets the maximum limit of the Axis range. To create manual range AutoRange property has to be set to false and Minimum, Maximum and Unit have to be set.</value>
  </data>
  <data name="LD_Axis_P_Minimum" xml:space="preserve">
    <value>Gets or sets the minimum limit of the Axis range. To create manual range AutoRange property has to be set to false and Minimum, Maximum and Unit have to be set.</value>
  </data>
  <data name="LD_Axis_P_Unit" xml:space="preserve">
    <value>Gets or sets a distance between two neighboring axis labels, gridlines and tick marks. The Unit value uses axis scale. If the Unit is 0, Axis Unit is automatically calculated.</value>
  </data>
  <data name="LD_Axis_P_AutoRange" xml:space="preserve">
    <value>Gets or sets a value indicating whether the Minimum, Maximum and Unit are automatically calculated. To create manual range AutoRange property has to be set to false and Minimum, Maximum and Unit have to be set.</value>
  </data>
  <data name="LD_Axis_P_RangeFromZero" xml:space="preserve">
    <value>Gets or sets a value indicating whether the zero value is inside the auto range.</value>
  </data>
  <data name="LD_Axis_P_Logarithmic" xml:space="preserve">
    <value>Gets or sets a value indicating whether the logarithmic scale is enabled.</value>
  </data>
  <data name="LD_Axis_P_LogarithmicBase" xml:space="preserve">
    <value>Gets or sets a base for logarithmic scale.</value>
  </data>
  <data name="LD_Axis_P_Crossing" xml:space="preserve">
    <value>Gets or sets an axis value where this axis crosses another axis.</value>
  </data>
  <data name="LD_Axis_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the axis line.</value>
  </data>
  <data name="LC_Appearance" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="LD_Axis_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the axis line.</value>
  </data>
  <data name="LD_Axis_P_Animation" xml:space="preserve">
    <value>Gets or sets the animation for Axis line. This animation draws the line from minimum to maximum axis position.</value>
  </data>
  <data name="LC_Marks" xml:space="preserve">
    <value>Marks</value>
  </data>
  <data name="LD_Axis_P_MajorGridline" xml:space="preserve">
    <value>Gets or sets the Major Gridline.</value>
  </data>
  <data name="LD_Axis_P_MinorGridline" xml:space="preserve">
    <value>Gets or sets the Minor Gridline.</value>
  </data>
  <data name="LD_Axis_P_MajorTickMark" xml:space="preserve">
    <value>Gets or sets the Major TickMark.</value>
  </data>
  <data name="LD_Axis_P_MinorTickMark" xml:space="preserve">
    <value>Gets or sets the Minor TickMark.</value>
  </data>
  <data name="LC_Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="LD_Axis_P_Stripes" xml:space="preserve">
    <value>Gets the collection of stripes for this axis.</value>
  </data>
  <data name="LD_Axis_P_Label" xml:space="preserve">
    <value>Gets or sets the Axis Labels.</value>
  </data>
  <data name="LD_Axis_P_Visible" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the axis is visible.</value>
  </data>
  <data name="LD_Axis_P_Name" xml:space="preserve">
    <value>Gets or sets the Axis Name. Used for secondary Axes to make connection between Series and Axes.</value>
  </data>
  <data name="LD_Caption_P_Text" xml:space="preserve">
    <value>The caption text</value>
  </data>
  <data name="LC_Layout" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="LD_Caption_P_Margin" xml:space="preserve">
    <value>Gets or sets the outer margin of an element using percent value from 0 to 100. This property doesn't have any effect if MarginType property is set to ‘Auto’.</value>
  </data>
  <data name="LD_Caption_P_MarginType" xml:space="preserve">
    <value>Gets or sets a margin type for the chart element. If MarginType property is ‘Percent’, the Margin property has to be set.</value>
  </data>
  <data name="LC_Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="LD_Caption_P_FontFamily" xml:space="preserve">
    <value>Gets or sets the name of the specified font.</value>
  </data>
  <data name="LD_Caption_P_FontSize" xml:space="preserve">
    <value>Gets or sets the font size of the caption text.</value>
  </data>
  <data name="LD_Caption_P_FontStyle" xml:space="preserve">
    <value>Gets or sets the font style for the caption text.</value>
  </data>
  <data name="LD_Caption_P_FontWeight" xml:space="preserve">
    <value>Gets or sets the weight or thickness of the specified font.</value>
  </data>
  <data name="LD_Caption_P_FontStretch" xml:space="preserve">
    <value>Gets or sets the degree to which a font is condensed or expanded on the screen.</value>
  </data>
  <data name="LD_Caption_P_Foreground" xml:space="preserve">
    <value>Gets or sets the Brush to apply to the text contents of the caption.</value>
  </data>
  <data name="LD_Caption_P_Background" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the caption.</value>
  </data>
  <data name="LD_Caption_P_BorderBrush" xml:space="preserve">
    <value>Gets or sets the Brush that draws the outer border color.</value>
  </data>
  <data name="LD_Caption_P_BorderThickness" xml:space="preserve">
    <value>Gets or sets the border thickness for the Caption Panel</value>
  </data>
  <data name="LD_ChartParameter_P_Value" xml:space="preserve">
    <value>Chart Parameter value.</value>
  </data>
  <data name="LD_ChartParameter_P_Type" xml:space="preserve">
    <value>Chart Parameter Type.</value>
  </data>
  <data name="LD_DataPointTemplate_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the shape. </value>
  </data>
  <data name="LD_DataPointTemplate_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_DataPointTemplate_P_ToolTip" xml:space="preserve">
    <value>Gets or sets the tool-tip object that is displayed for this element.</value>
  </data>
  <data name="LD_DataPointTemplate_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_ColumnChartTemplate_P_IsNegative" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the data point value is negative.</value>
  </data>
  <data name="LD_ColumnChartTemplate_P_RectangleRounding" xml:space="preserve">
    <value>Gets or sets radius of the ellipse that is used to round the corners of the rectangle.</value>
  </data>
  <data name="LD_ColumnChartTemplate_P_CornerRadius" xml:space="preserve">
    <value>Gets or sets radius of the ellipse that is used to round the corners of the rectangle.</value>
  </data>
  <data name="LD_ColumnChartTemplate_P_BorderThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_BarChartTemplate_P_IsNegative" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the data point value is negative.</value>
  </data>
  <data name="LD_BarChartTemplate_P_RectangleRounding" xml:space="preserve">
    <value>Gets or sets radius of the ellipse that is used to round the corners of the rectangle.</value>
  </data>
  <data name="LD_BarChartTemplate_P_CornerRadius" xml:space="preserve">
    <value>Gets or sets radius of the ellipse that is used to round the corners of the rectangle.</value>
  </data>
  <data name="LD_BarChartTemplate_P_BorderThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_GridArea_P_RefreshPointsOnly" xml:space="preserve">
    <value>Gets or sets a value that indicates whether only data points are refreshed. Drawings of all other chart elements are disabled. Used to improve performance of data point animation.</value>
  </data>
  <data name="LD_GridArea_P_Margin" xml:space="preserve">
    <value>Gets or sets the outer margin of an element using percent value from 0 to 100. This property doesn't have any effect if MarginType property is set to ‘Auto’.</value>
  </data>
  <data name="LD_GridArea_P_MarginType" xml:space="preserve">
    <value>Gets or sets a margin type for the chart element. If MarginType property is ‘Percent’, the Margin property has to be set.</value>
  </data>
  <data name="LD_Label_P_FontFamily" xml:space="preserve">
    <value>Gets or sets the name of the specified font.</value>
  </data>
  <data name="LD_Label_P_FontSize" xml:space="preserve">
    <value>Gets or sets the font size of the axis labels.</value>
  </data>
  <data name="LD_Label_P_Angle" xml:space="preserve">
    <value>Gets or sets an angle of labels.</value>
  </data>
  <data name="LD_Label_P_FontStyle" xml:space="preserve">
    <value>Gets or sets the font style for axis labels.</value>
  </data>
  <data name="LD_Label_P_FontWeight" xml:space="preserve">
    <value>Gets or sets the weight or thickness of the specified font.</value>
  </data>
  <data name="LD_Label_P_FontStretch" xml:space="preserve">
    <value>Gets or sets the degree to which a font is condensed or expanded on the screen.</value>
  </data>
  <data name="LD_Label_P_Foreground" xml:space="preserve">
    <value>Gets or sets the Brush to apply to the text contents of labels.</value>
  </data>
  <data name="LC_Miscellaneous" xml:space="preserve">
    <value>Miscellaneous</value>
  </data>
  <data name="LD_Label_P_Format" xml:space="preserve">
    <value>Gets or sets data point label format using the .NET Framework composite string formatting.</value>
  </data>
  <data name="LD_Label_P_AutoResize" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the axis labels have automatic font size.</value>
  </data>
  <data name="LD_Label_P_DistanceFromAxis" xml:space="preserve">
    <value>Gets or sets the distance between axis and labels. This is scaling factor applied to the default distance. Value 1 is default distance, a value between 0 and 1 decrease the default distance and a value greater than 1 increase the default distance.</value>
  </data>
  <data name="LD_Label_P_Visible" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the axis labels are visible.</value>
  </data>
  <data name="LD_LegendItem_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the shape. </value>
  </data>
  <data name="LD_LegendItem_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_LegendItem_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_LegendItem_P_Text" xml:space="preserve">
    <value>Gets or sets legend item text.</value>
  </data>
  <data name="LD_LegendItemTemplate_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the shape. </value>
  </data>
  <data name="LD_LegendItemTemplate_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_LegendItemTemplate_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_LegendItemTemplate_P_Text" xml:space="preserve">
    <value>Gets or sets the text for legend item.</value>
  </data>
  <data name="LD_LegendItemTemplate_P_Width" xml:space="preserve">
    <value>Gets or sets the legend item Width.</value>
  </data>
  <data name="LD_LegendItemTemplate_P_Height" xml:space="preserve">
    <value>Gets or sets the legend item Height.</value>
  </data>
  <data name="LD_Scene_P_GridArea" xml:space="preserve">
    <value>Gets or sets the GridArea which is the region inside the Scene which contains: DataPoints, Markers and gridlines. Axis Labels are drawn outside the GridArea. 3D chart do not have GridArea.</value>
  </data>
  <data name="LD_Scene_P_Scene3DThickness" xml:space="preserve">
    <value>Gets or sets 3D Scene Thickness.</value>
  </data>
  <data name="LD_Scene_P_Margin" xml:space="preserve">
    <value>Gets or sets the outer margin of an element using percent value from 0 to 100. This property doesn't have any effect if MarginType property is set to ‘Auto’.</value>
  </data>
  <data name="LD_Scene_P_MarginType" xml:space="preserve">
    <value>Gets or sets a margin type for the chart element. If MarginType property is ‘Percent’, the Margin property has to be set.</value>
  </data>
  <data name="LD_Scene_P_Perspective" xml:space="preserve">
    <value>Gets or sets perspective level for 3D charts, ranging in value from 0 to 100.</value>
  </data>
  <data name="LD_Scene_P_Scene3DBrush" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the 3D Scene. </value>
  </data>
  <data name="LD_Scene_P_DataFilter" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the series are filtered if they have more than 1000 data points. This property is used to improve rendering performance for Line 2D, ScatterLine 2D and Area 2D chart.</value>
  </data>
  <data name="LD_Stripe_P_Animation" xml:space="preserve">
    <value>Gets or sets the animation for Stripes. This animation draws stripe rectangles from minimum to maximum axis position. Stripes could be animated one by one or all together.</value>
  </data>
  <data name="LD_Stripe_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_Stripe_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_Stripe_P_Unit" xml:space="preserve">
    <value>Gets or sets a distance between two neighboring stripes. If value is 0, double axis unit value is used. </value>
  </data>
  <data name="LD_Stripe_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the shape. </value>
  </data>
  <data name="LD_Stripe_P_Width" xml:space="preserve">
    <value>Gets or sets a width between two neighboring stripes. If value is 0 automatic width is calculated from axis unit value.</value>
  </data>
  <data name="LD_DataPoint_P_ChartParameters" xml:space="preserve">
    <value>Gets or sets chart parameters for this data point.</value>
  </data>
  <data name="LD_DataPoint_P_Value" xml:space="preserve">
    <value>Gets or sets the value of a data point. The value property is not used for all chart types. Scatter,Stock, Candlestick and Bubble chart types use ChartParameters: ValueX, ValueY, ValueZ, Radius, High, Low, Open, Close.</value>
  </data>
  <data name="LD_DataPoint_P_Label" xml:space="preserve">
    <value>Gets or sets data point label. Data point label stores text values for axis labels.</value>
  </data>
  <data name="LD_DataPoint_P_ExtraParameters" xml:space="preserve">
    <value>Gets or sets a reference to additional ChartParameterCollection. This collection is used for chart parameter styling purposes.</value>
  </data>
  <data name="LD_DataPoint_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the shape. </value>
  </data>
  <data name="LD_DataPoint_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_DataPoint_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_DataPoint_P_Animation" xml:space="preserve">
    <value>Gets or sets the animation for Data Point. This animation is different for every chart type.</value>
  </data>
  <data name="LD_DataPoint_P_Marker" xml:space="preserve">
    <value>Gets or sets the marker. Marker is a colored shape which shows exact value of a Data Point. Marker has corresponding marker label. Used in combination with different chart types.</value>
  </data>
  <data name="LD_DataPoint_P_ToolTip" xml:space="preserve">
    <value>Gets or sets the tool-tip object that is displayed for DataPoint</value>
  </data>
  <data name="LD_DataPoint_P_NullValue" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the Data Point has Null value.</value>
  </data>
  <data name="LD_Legend_P_Visible" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the legend is visible.</value>
  </data>
  <data name="LD_Legend_P_UseDataTemplate" xml:space="preserve">
    <value>Gets or sets a value that indicates whether legend items use data template.</value>
  </data>
  <data name="LD_Legend_P_Margin" xml:space="preserve">
    <value>Gets or sets the outer margin of an element using percent value from 0 to 100. This property doesn't have any effect if MarginType property is set to ‘Auto’.</value>
  </data>
  <data name="LD_Legend_P_MarginType" xml:space="preserve">
    <value>Gets or sets a margin type for the chart element. If MarginType property is ‘Percent’, the Margin property has to be set.</value>
  </data>
  <data name="LD_Legend_P_Items" xml:space="preserve">
    <value>Gets the custom legend items. By default legend items are created using Series or DataPoint Labels. This collection should be used only if default appearance of the legend items has to be changed.</value>
  </data>
  <data name="LD_Mark_P_Animation" xml:space="preserve">
    <value>Gets or sets the animation for Marks. This animation is used for gridlines and it draws lines from minimum to maximum axis position. Gridlines could be animated one by one or all together.</value>
  </data>
  <data name="LD_Mark_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_Mark_P_Visible" xml:space="preserve">
    <value>Gets or sets a value that indicates whether the Mark is visible.</value>
  </data>
  <data name="LD_Mark_P_DashStyle" xml:space="preserve">
    <value>Gets or sets a value that describes the pattern of dashes generated for this Mark. Supported for 2D charts only.</value>
  </data>
  <data name="LD_Mark_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_Mark_P_TickMarkSize" xml:space="preserve">
    <value>Gets or sets the TickMark size. This is scaling factor applied to the default TickMark size. Value 1 is default size, a value between 0 and 1 decrease the default TickMark size and a value greater than 1 increase the default TickMark size.</value>
  </data>
  <data name="LD_Mark_P_Unit" xml:space="preserve">
    <value>Gets or sets a distance between two neighboring gridlines or tickmarks. If value is 0 axis unit value is used. </value>
  </data>
  <data name="LD_Marker_P_Type" xml:space="preserve">
    <value>Gets or sets type of a marker shape.</value>
  </data>
  <data name="LD_Marker_P_FontFamily" xml:space="preserve">
    <value>Gets or sets the name of the specified font.</value>
  </data>
  <data name="LD_Marker_P_FontSize" xml:space="preserve">
    <value>Gets or sets the font size for Data Point Marker Label.</value>
  </data>
  <data name="LD_Marker_P_FontStyle" xml:space="preserve">
    <value>Gets or sets the marker font style.</value>
  </data>
  <data name="LD_Marker_P_FontWeight" xml:space="preserve">
    <value>Gets or sets the weight or thickness of the specified font.</value>
  </data>
  <data name="LD_Marker_P_FontStretch" xml:space="preserve">
    <value>Gets or sets the degree to which a font is condensed or expanded on the screen.</value>
  </data>
  <data name="LD_Marker_P_Foreground" xml:space="preserve">
    <value>Gets or sets the Brush to apply to the text contents of labels.</value>
  </data>
  <data name="LD_Marker_P_Format" xml:space="preserve">
    <value>Gets or sets data point label format using the composite string formatting.</value>
  </data>
  <data name="LD_Marker_P_MarkerSize" xml:space="preserve">
    <value>Gets or sets the marker size. This is scaling factor applied to the default marker size. Value 1 is default size, a value between 0 and 1 decrease the default marker size and a value greater than 1 increase the default marker size.</value>
  </data>
  <data name="LD_Marker_P_LabelDistance" xml:space="preserve">
    <value>Gets or sets the label distance. This is scaling factor applied to the default label distance from the marker. Value 1 is default size, a value between 0 and 1 decrease the default distance and a value greater than 1 increase the default distance.</value>
  </data>
  <data name="LD_Marker_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape.</value>
  </data>
  <data name="LD_Marker_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_Marker_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_Marker_P_UseDataTemplate" xml:space="preserve">
    <value>Gets or sets a value that indicates whether data points use data template.</value>
  </data>
  <data name="LD_Series_P_DataPoints" xml:space="preserve">
    <value>Gets or sets data points for this series.</value>
  </data>
  <data name="LD_Series_P_ChartParameters" xml:space="preserve">
    <value>Gets or sets chart parameters for this series.</value>
  </data>
  <data name="LD_Series_P_ExtraParameters" xml:space="preserve">
    <value>Gets or sets a reference to additional ChartParameterCollection. This collection is used for chart parameter styling purposes.</value>
  </data>
  <data name="LD_Series_P_ChartType" xml:space="preserve">
    <value>Gets or sets a chart type used for this data series. For 3D chart types, View3D property of the XamChart control has to be set to ‘true’.</value>
  </data>
  <data name="LD_Series_P_DataPointColor" xml:space="preserve">
    <value>Gets or sets a value that indicates a way on which data points get colors. By default colors for data points depend on chart type (for example pie chart have different colors for every data point and column chart have same color for all points).</value>
  </data>
  <data name="LD_Series_P_DataMapping" xml:space="preserve">
    <value>Gets or sets an expression string used to define data binding. In the simplest case, this is just a column name from a data table.</value>
  </data>
  <data name="LD_Series_P_DataSource" xml:space="preserve">
    <value>Gets or sets a data source used to bind data to this series. Data source could be DataSet, DataTable, etc.</value>
  </data>
  <data name="LD_Series_P_Fill" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the interior of the shape. </value>
  </data>
  <data name="LD_Series_P_Stroke" xml:space="preserve">
    <value>Gets or sets the Brush that specifies how to paint the Shape outline.</value>
  </data>
  <data name="LD_Series_P_StrokeThickness" xml:space="preserve">
    <value>Gets or sets the width of the Shape outline.</value>
  </data>
  <data name="LD_Series_P_Animation" xml:space="preserve">
    <value>Gets or sets the animation for Series. This animation is different for every chart type.</value>
  </data>
  <data name="LD_Series_P_Label" xml:space="preserve">
    <value>Gets or sets data point label. Data point labels stores text values for category axis labels.</value>
  </data>
  <data name="LD_Series_P_Marker" xml:space="preserve">
    <value>Gets or sets the marker. Marker is a colored shape which shows exact value of a Data Point. Marker has corresponding marker label. Used in combination with different chart types.</value>
  </data>
  <data name="LD_Series_P_AxisX" xml:space="preserve">
    <value>Gets or sets the X Axis Name. Used to make connection between Series and Axes for Secondary axes.</value>
  </data>
  <data name="LD_Series_P_AxisY" xml:space="preserve">
    <value>Gets or sets the Y Axis Name. Used to make connection between Series and Axes for Secondary axes.</value>
  </data>
  <data name="LD_Series_P_UseDataTemplate" xml:space="preserve">
    <value>Gets or sets a value that indicates whether data points use a data template.</value>
  </data>
  <data name="LD_Series_P_ToolTip" xml:space="preserve">
    <value>Gets or sets the tool-tip object that is displayed for this Series</value>
  </data>
  <data name="LD_Marker_P_DataTemplate" xml:space="preserve">
    <value>Gets or sets the data template for the marker.</value>
  </data>
  <data name="LD_Marker_P_LabelOverflow" xml:space="preserve">
    <value>Gets or sets a value indicating whether the labels are clipped within the grid area.</value>
  </data>
	<data name="XamChartAssetLibrary">
		<value>Infragistics</value>
	</data>
</root>