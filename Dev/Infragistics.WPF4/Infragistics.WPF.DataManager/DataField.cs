using System;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using System.Resources;
using System.Collections.Generic;
using System.ComponentModel;

namespace Infragistics
{
    /// <summary>
    /// Represents a given field of an object.
    /// </summary>
    public class DataField
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="DataField"/> class.
        /// </summary>
        /// <param name="name">Name of the field.</param>
        /// <param name="type">Type of the field</param>        
        public DataField(string name, Type type)
        {
            this.Name = name;
            this.FieldType = type;
            this.AutoGenerate = true;
            this.Order = int.MaxValue;
            this.DisplayName = null;
            this.GroupName = null;
            this.FormatString = null;
            this.ApplyFormatStringInEditMode = false;
            this.NullDisplayText = null;
            this.ConvertEmptyStringToNull = false;
            this.AllowEdit = true;
            this.AllowEditingForAddNew = true;
        }

        #endregion

        #region Properties

        #region Name

        /// <summary>
        /// Gets or sets the name of the field.
        /// </summary>
        public string Name
        {
            get;
            set;
        }

        #endregion // Name

        #region FieldType

        /// <summary>
        /// Gets or sets the type of the field.
        /// </summary>
        public Type FieldType
        {
            get;
            set;
        }

        #endregion // FieldType

        #region AutoGenerate

        /// <summary>
        /// Gets/sets whether this field should be automatically generated.
        /// </summary>
        public bool AutoGenerate
        {
            get;
            set;
        }

        #endregion // AutoGenerate

        #region DisplayName
        
        /// <summary>
        /// Gets/Sets the text that should be used to display the field.
        /// </summary>
        public string DisplayName
        {
            get;
            set;
        }
        #endregion // DisplayName

        #region GroupName
        /// <summary>
        /// Gets/Sets the text that should be displayed for a field when its grouped.
        /// </summary>
        public string GroupName
        {
            get;
            set;
        }
        #endregion // GroupName

        #region Order

        /// <summary>
        /// Gets/Sets the order in which the AutoGenerated field should be displayed
        /// </summary>
        public int Order
        {
            get;
            set;
        }
        #endregion // Order

        #region FormatString

        /// <summary>
        /// For fields that display text, this gets/sets the format string that should be used for them.
        /// </summary>
        public string FormatString
        {
            get;
            set;
        }
        #endregion // FormatString

        #region ApplyFormatStringInEditMode

        /// <summary>
        /// If a FormatString is set, this Gets/Sets whether to apply this formatstring in edit mode.
        /// </summary>
        public bool ApplyFormatStringInEditMode
        {
            get;
            set;
        }

        #endregion // ApplyFormatStringInEditMode

        #region NullDisplayText

        /// <summary>
        /// If the value for a field is null, this gets/Sets the text that should be displayed instead.
        /// </summary>
        public string NullDisplayText
        {
            get;
            set;
        }
        #endregion // NullDisplayText

        #region ConvertEmptyStringToNull

        /// <summary>
        ///  If the value of a string is empty, this gets/sets whether to display that string as null
        /// </summary>
        public bool ConvertEmptyStringToNull
        {
            get;
            set;
        }
        #endregion // ConvertEmptyStringToNull

        #region AllowEdit

        /// <summary>
        /// Gets/Sets whether a field is editable in edit mode.
        /// </summary>
        public bool AllowEdit
        {
            get;
            set;
        }
        #endregion // AllowEdit

        #region AllowEditingForAddNew

        /// <summary>
        /// Gets/sets if a field is editable in the AddNewRow.
        /// </summary>
        public bool AllowEditingForAddNew
        {
            get;
            set;
        }
        #endregion // AllowEditingForAddNew

        #endregion // Properties
    }

    /// <summary>
    /// Used to sort the DataFields in the order of their Order property.
    /// </summary>
    internal class DataFieldComparer : IComparer<DataField>
    {
        public int Compare(DataField x, DataField y)
        {
            return x.Order.CompareTo(y.Order);
        }
    }

    /// <summary>
    /// Object used to store the Type, and in WPF the PropertyDescriptors for a Type.
    /// </summary>
    public class CachedTypedInfo
    {
        /// <summary>
        /// The type of the object.
        /// </summary>
        public Type CachedType
        {
            get;
            set;
        }


        
        /// <summary>
        /// The PropertyDescriptors for the specified type.
        /// </summary>
        public PropertyDescriptorCollection PropertyDescriptors
        {
            get;
            set;
        }


    }

}
#region Copyright (c) 2001-2012 Infragistics, Inc. All Rights Reserved
/* ---------------------------------------------------------------------*
*                           Infragistics, Inc.                          *
*              Copyright (c) 2001-2012 All Rights reserved               *
*                                                                       *
*                                                                       *
* This file and its contents are protected by United States and         *
* International copyright laws.  Unauthorized reproduction and/or       *
* distribution of all or any portion of the code contained herein       *
* is strictly prohibited and will result in severe civil and criminal   *
* penalties.  Any violations of this copyright will be prosecuted       *
* to the fullest extent possible under law.                             *
*                                                                       *
* THE SOURCE CODE CONTAINED HEREIN AND IN RELATED FILES IS PROVIDED     *
* TO THE REGISTERED DEVELOPER FOR THE PURPOSES OF EDUCATION AND         *
* TROUBLESHOOTING. UNDER NO CIRCUMSTANCES MAY ANY PORTION OF THE SOURCE *
* CODE BE DISTRIBUTED, DISCLOSED OR OTHERWISE MADE AVAILABLE TO ANY     *
* THIRD PARTY WITHOUT THE EXPRESS WRITTEN CONSENT OF INFRAGISTICS, INC. *
*                                                                       *
* UNDER NO CIRCUMSTANCES MAY THE SOURCE CODE BE USED IN WHOLE OR IN     *
* PART, AS THE BASIS FOR CREATING A PRODUCT THAT PROVIDES THE SAME, OR  *
* SUBSTANTIALLY THE SAME, FUNCTIONALITY AS ANY INFRAGISTICS PRODUCT.    *
*                                                                       *
* THE REGISTERED DEVELOPER ACKNOWLEDGES THAT THIS SOURCE CODE           *
* CONTAINS VALUABLE AND PROPRIETARY TRADE SECRETS OF INFRAGISTICS,      *
* INC.  THE REGISTERED DEVELOPER AGREES TO EXPEND EVERY EFFORT TO       *
* INSURE ITS CONFIDENTIALITY.                                           *
*                                                                       *
* THE END USER LICENSE AGREEMENT (EULA) ACCOMPANYING THE PRODUCT        *
* PERMITS THE REGISTERED DEVELOPER TO REDISTRIBUTE THE PRODUCT IN       *
* EXECUTABLE FORM ONLY IN SUPPORT OF APPLICATIONS WRITTEN USING         *
* THE PRODUCT.  IT DOES NOT PROVIDE ANY RIGHTS REGARDING THE            *
* SOURCE CODE CONTAINED HEREIN.                                         *
*                                                                       *
* THIS COPYRIGHT NOTICE MAY NOT BE REMOVED FROM THIS FILE.              *
* --------------------------------------------------------------------- *
*/
#endregion Copyright (c) 2001-2012 Infragistics, Inc. All Rights Reserved