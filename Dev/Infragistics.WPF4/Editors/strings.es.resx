<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--      Microsoft ResX Schema           Version 2.0          The primary goals of this format is to allow a simple XML format      that is mostly human readable. The generation and parsing of the      various data types are done through the TypeConverter classes      associated with the data types.          Example:          ... ado.net/XML headers & schema ...     <resheader name="resmimetype">text/microsoft-resx</resheader>     <resheader name="version">2.0</resheader>     <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>     <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>     <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>     <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>     <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">         <value>[base64 mime encoded serialized .NET Framework object]</value>     </data>     <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">         <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>         <comment>This is a comment</comment>     </data>                      There are any number of "resheader" rows that contain simple      name/value pairs.          Each data row contains a name, and value. The row also contains a      type or mimetype. Type corresponds to a .NET class that support      text/value conversion through the TypeConverter architecture.      Classes that don't support this are serialized and stored with the      mimetype set.          The mimetype is used for serialized objects, and tells the      ResXResourceReader how to depersist the object. This is currently not      extensible. For a given mimetype the value must be set accordingly:          Note - application/x-microsoft.net.object.binary.base64 is the format      that the ResXResourceWriter will generate, however the reader can      read any of the formats listed below.          mimetype: application/x-microsoft.net.object.binary.base64     value   : The object must be serialized with              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter             : and then encoded with base64 encoding.          mimetype: application/x-microsoft.net.object.soap.base64     value   : The object must be serialized with              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter             : and then encoded with base64 encoding.      mimetype: application/x-microsoft.net.object.bytearray.base64     value   : The object must be serialized into a byte array              : using a System.ComponentModel.TypeConverter             : and then encoded with base64 encoding.     -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LMSG_ValueConstraint_Nullable" xml:space="preserve">
    <value>El valor no puede ser cero.</value>
  </data>
  <data name="LMSG_ValueConstraint_CannotConvert" xml:space="preserve">
    <value>El valor no puede convertirse en {0}.</value>
  </data>
  <data name="LMSG_ValueConstraint_OutOfRange" xml:space="preserve">
    <value>El valor debe encontrarse en un intervalo comprendido entre {0} y {1}.</value>
  </data>
  <data name="LMSG_ValueConstraint_Enumeration" xml:space="preserve">
    <value>Valor no encontrado en la lista de posibles opciones.</value>
  </data>
  <data name="LMSG_ValueConstraint_MaxExclusive" xml:space="preserve">
    <value>El valor debe ser menor que {0}.</value>
  </data>
  <data name="LMSG_ValueConstraint_MaxInclusive" xml:space="preserve">
    <value>El valor debe ser menor o igual que {0}.</value>
  </data>
  <data name="LMSG_ValueConstraint_MaxLength" xml:space="preserve">
    <value>El valor no puede contener más de {0} caracteres.</value>
  </data>
  <data name="LMSG_ValueConstraint_MinExclusive" xml:space="preserve">
    <value>El valor debe ser mayor que {0}.</value>
  </data>
  <data name="LMSG_ValueConstraint_MinInclusive" xml:space="preserve">
    <value>El valor debe ser mayor o igual que {0}.</value>
  </data>
  <data name="LMSG_ValueConstraint_MinLength" xml:space="preserve">
    <value>El valor no puede contener al menos {0} caracteres.</value>
  </data>
  <data name="LMSG_ValueConstraint_RegexPattern" xml:space="preserve">
    <value>El valor no coincide con el patrón necesario.</value>
  </data>
  <data name="LMSG_ValueConstraint_FixedValue" xml:space="preserve">
    <value>El valor no es igual a &apos;{0}&apos;.</value>
  </data>
  <data name="LMSG_ValueConstraint_ValidationRule" xml:space="preserve">
    <value>El valor no coincide con una regla de validación.</value>
  </data>
  <data name="LMSG_ValueConstraint_InvalidValue" xml:space="preserve">
    <value>Valor no válido</value>
  </data>
  <data name="IllegalOperationMessageNoNextEditSection" xml:space="preserve">
    <value>No hay más secciones de edición.</value>
  </data>
  <data name="IllegalOperationMessageNoPrevEditSection" xml:space="preserve">
    <value>No hay secciones de edición anteriores a las que se pueda ir.</value>
  </data>
  <data name="IllegalOperationMessageAtLastCharacter" xml:space="preserve">
    <value>Ya se encuentra detrás del último carácter. No hay más caracteres a los que ir.</value>
  </data>
  <data name="IllegalOperationMessageCannotDelete" xml:space="preserve">
    <value>No se puede eliminar la selección.</value>
  </data>
  <data name="IllegalOperationMessageCannotMoveToPrevCharacter" xml:space="preserve">
    <value>No se puede mover al carácter anterior.</value>
  </data>
  <data name="IllegalOperationMessageGeneral" xml:space="preserve">
    <value>Operación no válida.</value>
  </data>
  <data name="IllegalOperationMessageNoPrevEditableCharacter" xml:space="preserve">
    <value>No hay caracteres editables anteriores.</value>
  </data>
  <data name="IllegalOperationMessageNoPrevCharacter" xml:space="preserve">
    <value>No hay caracteres anteriores.</value>
  </data>
  <data name="IllegalOperationMessageNoMaskSpecified" xml:space="preserve">
    <value>No se han especificado máscaras ni textos.</value>
  </data>
  <data name="MaskValidationErrorInvalidDayOfMonth" xml:space="preserve">
    <value>Día no válido para el mes del año especificado.</value>
  </data>
  <data name="MaskValidationErrorInvalidDate" xml:space="preserve">
    <value>Se ha introducido una fecha no válida.</value>
  </data>
  <data name="MaskValidationErrorInputDoesNotMatchMask" xml:space="preserve">
    <value>La entrada no coincide con la máscara.</value>
  </data>
  <data name="TodayButtonCaption" xml:space="preserve">
    <value>Hoy: {0:d}</value>
  </data>
  <data name="LMSG_EnteredDateEmpty" xml:space="preserve">
    <value>El valor está vacío. Introduzca una fecha válida.</value>
  </data>
  <data name="LMSG_EnteredDateInvalid" xml:space="preserve">
    <value>El valor &apos;{0}&apos; no es una fecha válida. Introduzca una fecha válida.</value>
  </data>
  <data name="LMSG_EnteredNumberEmpty" xml:space="preserve">
    <value>El valor está vacío. Introduzca un número válido.</value>
  </data>
  <data name="LMSG_EnteredNumberInvalid" xml:space="preserve">
    <value>El valor &apos;{0}&apos; no es un número válido. Introduzca un número válido.</value>
  </data>
  <data name="LMSG_EnteredValueEmpty" xml:space="preserve">
    <value>El valor está vacío. Especifique un valor válido.</value>
  </data>
  <data name="LMSG_EnteredValueInvalid" xml:space="preserve">
    <value>El valor &apos;{0}&apos; se encuentra en un formato incorrecto. Especifique un valor válido.</value>
  </data>
</root>