<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--      Microsoft ResX Schema           Version 2.0          The primary goals of this format is to allow a simple XML format      that is mostly human readable. The generation and parsing of the      various data types are done through the TypeConverter classes      associated with the data types.          Example:          ... ado.net/XML headers & schema ...     <resheader name="resmimetype">text/microsoft-resx</resheader>     <resheader name="version">2.0</resheader>     <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>     <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>     <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>     <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>     <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">         <value>[base64 mime encoded serialized .NET Framework object]</value>     </data>     <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">         <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>         <comment>This is a comment</comment>     </data>                      There are any number of "resheader" rows that contain simple      name/value pairs.          Each data row contains a name, and value. The row also contains a      type or mimetype. Type corresponds to a .NET class that support      text/value conversion through the TypeConverter architecture.      Classes that don't support this are serialized and stored with the      mimetype set.          The mimetype is used for serialized objects, and tells the      ResXResourceReader how to depersist the object. This is currently not      extensible. For a given mimetype the value must be set accordingly:          Note - application/x-microsoft.net.object.binary.base64 is the format      that the ResXResourceWriter will generate, however the reader can      read any of the formats listed below.          mimetype: application/x-microsoft.net.object.binary.base64     value   : The object must be serialized with              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter             : and then encoded with base64 encoding.          mimetype: application/x-microsoft.net.object.soap.base64     value   : The object must be serialized with              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter             : and then encoded with base64 encoding.      mimetype: application/x-microsoft.net.object.bytearray.base64     value   : The object must be serialized into a byte array              : using a System.ComponentModel.TypeConverter             : and then encoded with base64 encoding.     -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LMSG_ValueConstraint_Nullable" xml:space="preserve">
    <value>Der Wert darf nicht Null sein.</value>
  </data>
  <data name="LMSG_ValueConstraint_CannotConvert" xml:space="preserve">
    <value>Der Wert konnte nicht in {0} konvertiert werden.</value>
  </data>
  <data name="LMSG_ValueConstraint_OutOfRange" xml:space="preserve">
    <value>Der Wert muss im Bereich von {0} bis {1} liegen.</value>
  </data>
  <data name="LMSG_ValueConstraint_Enumeration" xml:space="preserve">
    <value>Der Wert wurde in der Auswahlliste nicht gefunden.</value>
  </data>
  <data name="LMSG_ValueConstraint_MaxExclusive" xml:space="preserve">
    <value>Der Wert muss kleiner als {0} sein.</value>
  </data>
  <data name="LMSG_ValueConstraint_MaxInclusive" xml:space="preserve">
    <value>Der Wert muss kleiner oder gleich {0} sein.</value>
  </data>
  <data name="LMSG_ValueConstraint_MaxLength" xml:space="preserve">
    <value>Der Wert darf nicht mehr als {0} Zeichen enthalten.</value>
  </data>
  <data name="LMSG_ValueConstraint_MinExclusive" xml:space="preserve">
    <value>Der Wert muss größer als {0} sein.</value>
  </data>
  <data name="LMSG_ValueConstraint_MinInclusive" xml:space="preserve">
    <value>Der Wert muss größer oder gleich {0} sein.</value>
  </data>
  <data name="LMSG_ValueConstraint_MinLength" xml:space="preserve">
    <value>Der Wert muss mindestens {0} Zeichen enthalten.</value>
  </data>
  <data name="LMSG_ValueConstraint_RegexPattern" xml:space="preserve">
    <value>Der Wert entspricht nicht dem erforderlichen Muster.</value>
  </data>
  <data name="LMSG_ValueConstraint_FixedValue" xml:space="preserve">
    <value>Der Wert ist nicht gleich &apos;{0}&apos;.</value>
  </data>
  <data name="LMSG_ValueConstraint_ValidationRule" xml:space="preserve">
    <value>Der Wert entspricht keiner Validierungsregel.</value>
  </data>
  <data name="LMSG_ValueConstraint_InvalidValue" xml:space="preserve">
    <value>Ungültiger Wert</value>
  </data>
  <data name="IllegalOperationMessageNoNextEditSection" xml:space="preserve">
    <value>Es ist kein bearbeitbarer Abschnitt vorhanden.</value>
  </data>
  <data name="IllegalOperationMessageNoPrevEditSection" xml:space="preserve">
    <value>Es sind keine vorherigen bearbeitbaren Abschnitte vorhanden, auf die gewechselt werden kann.</value>
  </data>
  <data name="IllegalOperationMessageAtLastCharacter" xml:space="preserve">
    <value>Bereits nach dem letzten Zeichen - es sind keine weiteren Zeichen vorhanden, auf die gewechselt werden kann.</value>
  </data>
  <data name="IllegalOperationMessageCannotDelete" xml:space="preserve">
    <value>Die Auswahl kann nicht gelöscht werden.</value>
  </data>
  <data name="IllegalOperationMessageCannotMoveToPrevCharacter" xml:space="preserve">
    <value>Das Wechseln zu vorherigem Zeichen ist nicht möglich.</value>
  </data>
  <data name="IllegalOperationMessageGeneral" xml:space="preserve">
    <value>Nicht erlaubter Vorgang</value>
  </data>
  <data name="IllegalOperationMessageNoPrevEditableCharacter" xml:space="preserve">
    <value>Es sind keine vorherigen bearbeitbaren Zeichen vorhanden.</value>
  </data>
  <data name="IllegalOperationMessageNoPrevCharacter" xml:space="preserve">
    <value>Es sind keine vorherigen Zeichen vorhanden.</value>
  </data>
  <data name="IllegalOperationMessageNoMaskSpecified" xml:space="preserve">
    <value>Es wurde weder Maske noch Text angegeben.</value>
  </data>
  <data name="MaskValidationErrorInvalidDayOfMonth" xml:space="preserve">
    <value>Ungültiger Tag für den angegebenen Monat des Jahres.</value>
  </data>
  <data name="MaskValidationErrorInvalidDate" xml:space="preserve">
    <value>Das eingegebene Datum ist ungültig.</value>
  </data>
  <data name="MaskValidationErrorInputDoesNotMatchMask" xml:space="preserve">
    <value>Die Eingabe stimmt nicht mit dem Format überein.</value>
  </data>
  <data name="TodayButtonCaption" xml:space="preserve">
    <value>Heute: {0:d}</value>
  </data>
  <data name="LMSG_EnteredDateEmpty" xml:space="preserve">
    <value>Der Wert ist leer. Geben Sie ein gültiges Datum ein.</value>
  </data>
  <data name="LMSG_EnteredDateInvalid" xml:space="preserve">
    <value>Der Wert &apos;{0}&apos; ist kein gültiges Datum. Geben Sie ein gültiges Datum ein.</value>
  </data>
  <data name="LMSG_EnteredNumberEmpty" xml:space="preserve">
    <value>Der Wert ist leer. Geben Sie eine gültige Zahl ein.</value>
  </data>
  <data name="LMSG_EnteredNumberInvalid" xml:space="preserve">
    <value>Der Wert &apos;{0}&apos; ist keine gültige Zahl. Geben Sie eine gültige Zahl ein.</value>
  </data>
  <data name="LMSG_EnteredValueEmpty" xml:space="preserve">
    <value>Der Wert ist leer. Geben Sie einen gültigen Wert ein.</value>
  </data>
  <data name="LMSG_EnteredValueInvalid" xml:space="preserve">
    <value>Der Wert &apos;{0}&apos; hat ein falsches Format. Geben Sie einen gültigen Wert ein.</value>
  </data>
</root>