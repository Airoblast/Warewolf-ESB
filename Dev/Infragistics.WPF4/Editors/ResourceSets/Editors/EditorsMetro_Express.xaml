<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:igEditors="clr-namespace:Infragistics.Windows.Editors"
	xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
	xmlns:igThemes="clr-namespace:Infragistics.Windows.Themes"
	xmlns:themesEd="clr-namespace:Infragistics.Windows.Themes"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="EditorsGeneric_Express.xaml" />
        <ResourceDictionary Source="../EditorsBrushes/EditorsMetro_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type igEditors:XamTextEditor}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="6 4"/>
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamTextEditor}">
                    <Border x:Name="MainBorder"
					    Background="{TemplateBinding Background}"
					    BorderBrush="{TemplateBinding BorderBrush}"
					    BorderThickness="{TemplateBinding BorderThickness}"
					    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
 						>
                        <igwindows:SimpleTextBlock x:Name="TextBlock"
							Margin="{TemplateBinding Padding}"
							Text="{TemplateBinding DisplayText}"
							TextWrapping="{TemplateBinding TextWrapping}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							TextAlignment="{TemplateBinding TextAlignmentResolved}"
                            Foreground="{TemplateBinding Foreground}"
						  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="igwindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamTextEditor}">
                    <Border
						x:Name="MainBorder"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBox
							Name="PART_FocusSite"
							Padding="{TemplateBinding Padding}"
							Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							AcceptsReturn="{TemplateBinding AcceptsReturn}"
							AcceptsTab="{TemplateBinding AcceptsTab}"
							TextWrapping="{TemplateBinding TextWrapping}"
							HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
							VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							TextAlignment="{TemplateBinding TextAlignmentResolved}"
							IsReadOnly="{TemplateBinding ReadOnly}"
							MaxLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ValueConstraint.MaxLength, Mode=OneWay}"
							Background="Transparent"
							BorderBrush="Transparent"
							BorderThickness="0,0,0,0"
							ContextMenu="{TemplateBinding ContextMenu}"
                            SpellCheck.IsEnabled="{TemplateBinding SpellCheck.IsEnabled}"
                            SpellCheck.SpellingReform="{TemplateBinding SpellCheck.SpellingReform}"
                            InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                            InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
							FontSize="{TemplateBinding FontSize}"
							Foreground="{TemplateBinding Foreground}"
					  />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter Property="IsTabStop" Value="False" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEmbedded" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEmbedded" Value="True"/>
                    <Condition Property="IsInEditMode" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource EditorsBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.EditorsNormalBorderFillKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEmbedded" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.EditorsHottrackBorderFillKey}}"/>
                <Setter Property="Background" Value="{StaticResource EditorsHoverBackgroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True"/>
                    <Condition Property="IsEmbedded" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource EditorsFocusBorderBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource EditorsDisabledBrush}"/>
                <Setter Property="Background" Value="{StaticResource EditorsDisabledBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  _________________________ ValueEditorCheckBoxStyle __________________________________________  -->

    <Style x:Key="ValueEditorCheckBoxStyle" TargetType="{x:Type igEditors:ValueEditorCheckBox}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckboxNormalStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:ValueEditorCheckBox}">
                    <Grid x:Name="CheckBox">
                        <Rectangle x:Name="normal" Opacity="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Background}" Width="18" Height="18"/>
                        <Rectangle x:Name="IndeterminateCheck" Fill="{StaticResource CheckboxHoverStroke}" Height="3" Width="8" Opacity="0"/>
                        <Path x:Name="checkBox" Visibility="Collapsed" Fill="{StaticResource CheckboxPressedStroke}" Height="10" Width="12" Stretch="Fill" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="normal" Value="{StaticResource CheckboxHoverStroke}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="checkBox" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="IndeterminateCheck" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  _________________________ XamCheckEditor __________________________________________  -->
    <Style TargetType="{x:Type igEditors:XamCheckEditor}" >
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamCheckEditor}">
                    <Border x:Name="MainBorder"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
                        <igEditors:ValueEditorCheckBox x:Name="PART_FocusSite"
								IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								IsThreeState="{TemplateBinding IsThreeState}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}" Style="{DynamicResource ValueEditorCheckBoxStyle}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False"/>
                        <Trigger Property="ReadOnly" Value="True">
                            <Setter TargetName="PART_FocusSite" Property ="IsEnabled" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEmbedded" Value="False">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>