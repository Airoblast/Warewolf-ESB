<UserControl x:Class="Infragistics.Windows.Design.SmartTagFramework.GenericAdorner"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"   
    xmlns:stf="clr-namespace:Infragistics.Windows.Design.SmartTagFramework"    
	xmlns:igWindows="http://infragistics.com/Windows"
	ClipToBounds="True"
	>

    <UserControl.Resources>
		<ResourceDictionary Source="{x:Static stf:ContentLocators.UriGenericXaml}"/>
	</UserControl.Resources>

	<UserControl.RenderTransform>
		<ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>	
	</UserControl.RenderTransform>
	
	<!--<igWindows:GrowOnlyDecorator>-->
		<Grid x:Name="grid">
			<Grid.Resources>
				<Style x:Key="ButtonFocusVisual">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				
				<LinearGradientBrush x:Key="BtnBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
					<LinearGradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Offset="0" Color="#FF6e7581"/>
							<GradientStop Offset="0.49" Color="#FF1f2b3d"/>
							<GradientStop Offset="0.5" Color="#FF071429"/>
							<GradientStop Offset="1" Color="#FF061327"/>
						</GradientStopCollection>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
				
				<LinearGradientBrush x:Key="BtnStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF232427"/>
					<GradientStop Color="#FF091322" Offset="1"/>
				</LinearGradientBrush>
				
				<SolidColorBrush x:Key="BtnHighlightBrush" Color="#3AFFFFFF"/>
				
				<LinearGradientBrush x:Key="BtnBackgroundHottrackBrush" StartPoint="0,0" EndPoint="0,1">
					<LinearGradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Offset="0" Color="#FFb5b9bf"/>
							<GradientStop Offset="0.49" Color="#FF1f2b3d"/>
							<GradientStop Offset="0.5" Color="#FF071429"/>
							<GradientStop Offset="1" Color="#FF0f3062"/>
						</GradientStopCollection>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
				
				<!-- Left pointing Fish Head Gradient Button -->
				<Style x:Key="LeftFishHeadGradientButtonStyle" TargetType="{x:Type Button}">
					<Setter Property="Background" Value="{DynamicResource BtnBackgroundBrush}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource BtnStrokeBrush}"/>
					<Setter Property="Foreground" Value="#FFFFFFFF"/>
					<Setter Property="FontFamily" Value="Verdana"/>
					<Setter Property="FontSize" Value="12"/>
					<Setter Property="Height" Value="26"/>
					<Setter Property="Padding" Value="0,0,10,0"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Cursor" Value="Hand"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Button}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Path x:Name="leftSliceBottomHighlight"
									Width="15"
									Data="M 9.22,23.58 C10.11,24.79 12.5,26 14,26 14,26 15,26 15,26 15,26 15,0 15,0 15,0 14,0 14,0 12.5,0 10.11,1.20 9.22,2.41 9.22,2.41 0,13 0,13 0,13 9.22,23.58 9.22,23.58 z"
									Stretch="Fill" HorizontalAlignment="Right" Fill="{DynamicResource BtnHighlightBrush}" Margin="0" SnapsToDevicePixels="True"/>
									<Path x:Name="leftSliceStroke"
									Width="15"
									Data="M 9.22,23.58 C10.11,24.79 12.5,26 14,26 14,26 15,26 15,26 15,26 15,0 15,0 15,0 14,0 14,0 12.5,0 10.11,1.20 9.22,2.41 9.22,2.41 0,13 0,13 0,13 9.22,23.58 9.22,23.58 z"
									Stretch="Fill" HorizontalAlignment="Right" Fill="{TemplateBinding BorderBrush}" Margin="0,0,0,1" SnapsToDevicePixels="True"/>
									<Path x:Name="leftSliceFill"
									Width="15"
									Data="M 9.22,23.58 C10.11,24.79 12.5,26 14,26 14,26 15,26 15,26 15,26 15,0 15,0 15,0 14,0 14,0 12.5,0 10.11,1.20 9.22,2.41 9.22,2.41 0,13 0,13 0,13 9.22,23.58 9.22,23.58 z"
									Stretch="Fill" Fill="{TemplateBinding Background}" HorizontalAlignment="Right" Margin="0,1,0,2" SnapsToDevicePixels="True"/>
									<Border BorderBrush="{DynamicResource BtnHighlightBrush}" BorderThickness="0,0,0,1" Grid.Column="1" CornerRadius="0,0,5,0"/>
									<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,1" Grid.Column="1" CornerRadius="0,4,4,0" Background="{TemplateBinding Background}" Margin="0,0,0,1" SnapsToDevicePixels="True"/>
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.Column="1"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{DynamicResource BtnBackgroundHottrackBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</Style.Triggers>
				</Style>
				
				<!-- Rectangular Gradient Button -->
				<Style x:Key="RectangularGradientButtonStyle" TargetType="{x:Type Button}">
					<Setter Property="Background" Value="{DynamicResource BtnBackgroundBrush}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource BtnStrokeBrush}"/>
					<Setter Property="Foreground" Value="#FFFFFFFF"/>
					<Setter Property="FontFamily" Value="Verdana"/>
					<Setter Property="FontSize" Value="12"/>
					<Setter Property="Height" Value="26"/>
					<Setter Property="Padding" Value="5,0,5,0"/>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Cursor" Value="Hand"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Button}">
								<Grid>
									<Border x:Name="BdHighlight" BorderBrush="{DynamicResource BtnHighlightBrush}" BorderThickness="0,0,0,1" Grid.Column="1" CornerRadius="0,0,5,5"/>
									<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Grid.Column="1" CornerRadius="4" Background="{TemplateBinding Background}" Margin="0,0,0,1"/>
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.Column="1"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{DynamicResource BtnBackgroundHottrackBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Grid.Resources>
			
			
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*"  />
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" MinHeight="36" MaxHeight="36"/>
				<RowDefinition Height="Auto" MinHeight="22" />
			</Grid.RowDefinitions>

			<!-- Overall Border -->
			<Border BorderBrush="#FF909090" BorderThickness="1" Grid.ColumnSpan="3" Grid.RowSpan="2" Canvas.ZIndex="1" CornerRadius="2"></Border>
			
			<!-- Header Background -->
			<Rectangle Grid.Row="0" Grid.ColumnSpan="3" Fill="#FF2B3B58"></Rectangle>
			<Rectangle Grid.Row="0" Grid.ColumnSpan="3" >
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#AAFFFFFF" Offset="0"/>
						<GradientStop Color="#33FFFFFF" Offset=".5"/>
						<GradientStop Color="#00FFFFFF" Offset=".51"/>
						<GradientStop Color="#00FFFFFF" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
			</Rectangle>

			<!-- Header Text -->
			<Label x:Name="lblTitle" 
				   Grid.Row="0" 
				   Grid.Column="0"
				   Grid.ColumnSpan="3"
				   FontFamily="Verdana"
				   Foreground="White" 
				   FontWeight="Bold" 
				   FontSize="14" 
				   HorizontalAlignment="Center" 
				   VerticalAlignment="Center" 
				   Content="{x:Static stf:DesignResources.LST_SmartTagFramework_GenericAdorner_lblTitleContent}"
				   Margin="0,0,0,0">
				<Label.RenderTransform>
					<TranslateTransform x:Name="transformTitle"/>
				</Label.RenderTransform>
			</Label>

			<Thumb x:Name="headerThumb"
				   Background="Transparent"
				   Grid.Row="0" 
				   Grid.Column="0"
				   Grid.ColumnSpan="3"
				   DragStarted="headerThumb_DragStarted"
				   DragDelta="headerThumb_DragDelta"
				   ToolTip="{x:Static stf:DesignResources.LST_SmartTagFramework_GenericAdorner_DragToolTip}"
				   >
				<Thumb.Template>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Rectangle Fill="Transparent"/>
					</ControlTemplate>
				</Thumb.Template>
		</Thumb>
			
			<!-- Back Button -->
			<Button Grid.Column="0" 
					x:Name="btnBack"
					Visibility="Collapsed"
					HorizontalAlignment="Center" 
					Margin="5,2,0,2" 
					Content="{x:Static stf:DesignResources.LST_SmartTagFramework_GenericAdorner_btnBackText}"
					Style="{DynamicResource LeftFishHeadGradientButtonStyle}"
					ToolTip="{x:Static stf:DesignResources.LST_SmartTagFramework_GenericAdorner_btnBackToolTip}"
					Command="{x:Static stf:SmartTagFrameworkCommands.NavigateToPreviousActionListPageCommand}">
				<Button.RenderTransform>
					<TranslateTransform x:Name="transformBackButton"/>
				</Button.RenderTransform>
			</Button>
			
			<!-- Header Close Button -->
			<Button Name="btnClose" 
					Grid.Column="2"   
					Click="btnClose_Click"  
					HorizontalAlignment="Center" 
					VerticalAlignment="Center" 
					Style="{DynamicResource RectangularGradientButtonStyle}"
					Margin="0,0,5,0"
					Content="{x:Static stf:DesignResources.LST_SmartTagFramework_GenericAdorner_btnCloseText}"
					ToolTip="{x:Static stf:DesignResources.LST_SmartTagFramework_GenericAdorner_btnCloseToolTip}" >
			</Button>
			
			<!-- Area where the current ActionListPage is displayed and where old/new pages are animated into and out of view -->
			<stf:ActionListCanvas x:Name="pageArea"
							Background="White"
							Grid.Column="0" 
							Grid.Row="1" 
							Grid.ColumnSpan="3" 
							MinWidth="350"
							MaxHeight="500"
							ClipToBounds="True"
							>
			</stf:ActionListCanvas>
			
		</Grid>
	<!--</igWindows:GrowOnlyDecorator>-->

</UserControl>

