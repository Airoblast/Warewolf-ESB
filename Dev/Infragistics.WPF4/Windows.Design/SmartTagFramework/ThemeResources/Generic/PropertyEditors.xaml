<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:stf="clr-namespace:Infragistics.Windows.Design.SmartTagFramework"
    xmlns:system="clr-namespace:System;assembly=mscorlib"    
    xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
    >

    <stf:BrushValueConverter x:Key="brushValueConverter" />
    <stf:CursorValueConverter x:Key="cursorValueConverter"/>
    <stf:GenericValueConverter x:Key="genericValueConverter" />

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=ErrorToolTipStyle}" >
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="TextBox.ToolTip" 
                                    Value="{Binding RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--IList property editor-->
    <DataTemplate xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"                                
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type collections:IList}}">
        <ListBox ItemsSource="{Binding Path=Value}" />
    </DataTemplate>

    <!--Enum property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:Enum}}">
        <ComboBox SelectedValue="{Binding Path=Value, Mode=TwoWay}" HorizontalAlignment="Right" MinWidth="150">
            <ComboBox.ItemsSource>
                <Binding Path="Value" Mode="OneTime">
                    <Binding.Converter>
                        <stf:EnumTypeConverter />
                    </Binding.Converter>
                </Binding>
            </ComboBox.ItemsSource>
        </ComboBox>
    </DataTemplate>

    <!--"Brush" editor DataTemplate-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=NamedColorTemplate}"
                  DataType="{x:Type stf:NamedColor}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{Binding Brush}" Grid.Column="0" Width="100" Height="20" Margin="2" HorizontalAlignment="Center"/>
            <TextBlock x:Name="PART_editor" Margin="5,2,2,2" Text="{Binding Name}" Grid.Column="1" HorizontalAlignment="Center" FontSize="12"/>
        </Grid>
    </DataTemplate>

    <!--"Brush" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type Brush}}">
        <DockPanel Margin="4">
            <Label BorderBrush="Black" BorderThickness="1" Margin="4" Width="12" Height="12" 
                   Background="{Binding Path=Value}"></Label>
            <ComboBox x:Name="PART_editor"                                    
                  ItemsSource="{Binding Source={x:Static stf:EditorDataProvider.DefaultColorNames}}"
                  ItemTemplate="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=stf:GenericAdorner, ResourceId=NamedColorTemplate}}" 
                  SelectedValuePath="Name"
                  IsEditable="True"
				  MinWidth="100"
				  Foreground="Black"
                  VirtualizingStackPanel.IsVirtualizing="True"
                      >
                <ComboBox.Text>
                    <Binding Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Path="Value" Converter="{StaticResource brushValueConverter}">
                        <Binding.ValidationRules>
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.Text>
            </ComboBox>
        </DockPanel>
    </DataTemplate>

    <!-- "FontFamily" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type media:FontFamily}}">
        <ComboBox x:Name="PART_editor"                  
                  SelectedValue="{Binding Path=Value}" 
				  MinWidth="150"
                  ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontFamily="{Binding}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
    </DataTemplate>

    <!-- "FontWeight" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type FontWeight}}">
        <ComboBox x:Name="PART_editor"                  
                  SelectedValue="{Binding Path=Value}"
				  MinWidth="150"
                  ItemsSource="{Binding Source={x:Static stf:EditorDataProvider.DefaultFontWeights}}"
                  VirtualizingStackPanel.IsVirtualizing="True"/>
    </DataTemplate>

    <!-- "FontStyle" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type FontStyle}}">
        <ComboBox x:Name="PART_editor"                  
                  SelectedValue="{Binding Path=Value}"
				  MinWidth="150"
                  ItemsSource="{Binding Source={x:Static stf:EditorDataProvider.DefaultFontStyles}}"
                  VirtualizingStackPanel.IsVirtualizing="True"/>
    </DataTemplate>

    <!-- "FontStretch" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type FontStretch}}">
        <ComboBox x:Name="PART_editor"                  
                  SelectedValue="{Binding Path=Value}"
				  MinWidth="150"
                  ItemsSource="{Binding Source={x:Static stf:EditorDataProvider.DefaultFontStretches}}"
                  VirtualizingStackPanel.IsVirtualizing="True"/>
    </DataTemplate>

    <!-- "XmlLanguage" editor -->
    <DataTemplate xmlns:markup="clr-namespace:System.Windows.Markup;assembly=PresentationCore"
                  x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type markup:XmlLanguage}}">
        <ComboBox x:Name="PART_editor"                  
                  SelectedValue="{Binding Path=Value}"
				  MinWidth="150"
                  ItemsSource="{Binding Source={x:Static stf:EditorDataProvider.DefaultLanguages}}" 
                  VirtualizingStackPanel.IsVirtualizing="True" />
    </DataTemplate>

    <!-- "Cursor" property editor -->
    <DataTemplate xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
                  x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type input:Cursor}}">
        <ComboBox x:Name="PART_editor"                                    
                  ItemsSource="{Binding Source={x:Static stf:EditorDataProvider.DefaultCursorNames}}"
				  MinWidth="150"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=ErrorToolTipStyle}}"  >
            <ComboBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Path="Value" Converter="{StaticResource cursorValueConverter}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>
    </DataTemplate>

    <!--Boolean property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:Boolean}}">
        <CheckBox IsEnabled="{Binding Path=IsWriteable}" 
                  IsChecked="{Binding Path=Value, Converter={StaticResource genericValueConverter}, ConverterParameter={x:Type system:Boolean}, Mode=TwoWay}" />
    </DataTemplate>

    <!-- "Opacity" property editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=Opacity}">
        <Slider x:Name="PART_editor" MinWidth="200"                
                Value="{Binding Path=Value}"
                Minimum="0" Maximum="1" TickFrequency="0.1"
                AutoToolTipPrecision="1" AutoToolTipPlacement="BottomRight"
                IsDirectionReversed="False" IsMoveToPointEnabled="True" IsSnapToTickEnabled="False" 
                />
    </DataTemplate>

    <!--ImageSource property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type media:ImageSource}}">
        <stf:ImageSourceEditor Tag="{Binding Path=Context}" />
    </DataTemplate>

    <!-- TreeItemFileTemplate template-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=TreeItemFileTemplate}">
        <StackPanel Orientation="Horizontal" ToolTip="{Binding Path=OriginalPath}" >
            <Image Source="{Binding Path=OriginalPath}" VerticalAlignment="Center" MaxWidth="50" MaxHeight="50"  />
            <StackPanel VerticalAlignment="Center">
                <Label Margin="3,0,0,0" Padding="0,0,0,0" Content="{Binding Path=Name}" FontWeight="Bold"></Label>
                <Label x:Name="lblTreeItemDescription" Margin="3,0,0,0" Padding="0,0,0,0" Content="{Binding Path=ResourceType.Description}"></Label>
                <!--<Label x:Name="lblTreeItemDescription" Margin="3,0,0,0" Padding="0,0,0,0" Content="{x:Static stf:DesignResources.LST_SmartTagFramework_TreeItemFileTemplate_lblTreeItemDescriptionContent}"></Label>-->
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- TreeItemDirectoryTemplate template-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=TreeItemDirectoryTemplate}">
        <StackPanel x:Name="spTreeItemDirectoryTemplate" Orientation="Horizontal" VerticalAlignment="Center" ToolTip="{x:Static stf:DesignResources.LST_SmartTagFramework_TreeItemDirectoryTemplate_spTreeItemDirectoryTemplateToolTip}">
            <Image Stretch="UniformToFill" Source="{x:Static stf:ContentLocators.ImageSourceFolderJpg}" ></Image>
            <StackPanel VerticalAlignment="Center">
                <Label Margin="3,0,0,0" Padding="0,0,0,0" Content="{Binding Path=Name}" FontWeight="Bold"></Label>
                <Label x:Name="lblTreeItemDescription" Margin="3,0,0,0" Padding="0,0,0,0" Content="{x:Static stf:DesignResources.LST_SmartTagFramework_TreeItemDirectoryTemplate_lblTreeItemDescriptionContent}"></Label>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- "Size" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type Size}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}" 
				 MinWidth="75">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="LostFocus" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type Size}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!-- "Point" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type Point}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}" 
				 MinWidth="75">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="LostFocus" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type Point}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!-- "Thickness" editor -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type Thickness}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}" 
				 MinWidth="75">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="LostFocus" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type Thickness}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!--Int32 property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:Int32}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}"
				 MinWidth="75"
				 TextAlignment="Right">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type system:Int32}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!--Double property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:Double}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}"
				 MinWidth="75"
				 HorizontalAlignment="Right"
				 TextAlignment="Right">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type system:Double}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!--String property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:String}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}" 
				 MinWidth="150" MaxWidth="150">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type system:String}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!--DateTime property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:DateTime}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}" 
				 MinWidth="100">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="LostFocus" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type system:DateTime}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

    <!--TimeSpan property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId={x:Type system:TimeSpan}}">
        <TextBox IsReadOnly="{Binding Path=IsReadOnly}" 
				 MinWidth="100">
            <TextBox.Text>
                <Binding Mode="TwoWay" UpdateSourceTrigger="LostFocus" 
                         Path="Value" Converter="{StaticResource genericValueConverter}" ConverterParameter="{x:Type system:TimeSpan}">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </DataTemplate>

	<!--Theme editor -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=ThemeEditorTemplate}">
		<stf:ThemeEditor Tag="{Binding Path=Context}" />
	</DataTemplate>

	<!--No default property editor-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type stf:GenericAdorner}, ResourceId=NoDefault}">
        <Border BorderBrush="Red" BorderThickness="0.5" MaxWidth="220">
            <StackPanel>
                <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=Value}" Foreground="Black" />
                <TextBlock Margin="2" Foreground="Red" FontSize="9pt" TextWrapping="Wrap" Background="Cornsilk">
                    No suitable default editor exists for this property. 
                    Create a custom editor or remove this property from the SmartTag.
                </TextBlock>
            </StackPanel>
        </Border>
    </DataTemplate>

</ResourceDictionary>