<UserControl x:Class="Infragistics.Windows.Design.SmartTagFramework.SmartButtonAdorner"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:stf="clr-namespace:Infragistics.Windows.Design.SmartTagFramework"
    >

	<Grid>
		<Grid.Resources>
			<Style TargetType="{x:Type Button}">
				<Setter Property="Height" Value="18"/>
				<Setter Property="Width" Value="22"/>
				<Setter Property="Opacity" Value="0"/>
				<Setter Property="Foreground" Value="Black"/>
				<Setter Property="FontWeight" Value="Bold"/>
				<Setter Property="FontSize" Value="14"/>
				<Setter Property="Focusable" Value="False"/>
				<Setter Property="Cursor" Value="Hand"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border" BorderBrush="#FF878787" Background="White" BorderThickness="1" CornerRadius="3,3,3,3">
								<ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-3,0,0"/>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger  Property="IsMouseOver" Value="True">
									<Setter TargetName="border"  Property="BorderBrush" Value="#3399E1" />
									<Setter TargetName="content"  Property="Control.Foreground" Value="#3399E1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>	
		</Grid.Resources>
		
		<ToggleButton x:FieldModifier="public" 
					  x:Name="tbtnSmart"  
					  Height="18" 
					  Width="22"
					  HorizontalAlignment="Center"
					  BorderThickness="0" 
					  BorderBrush="Transparent" 
					  Background="Transparent" 
					  ToolTip="{x:Static stf:DesignResources.LST_SmartTagFramework_SmartButtonAdorner_tbtnSmartToolTip}" >
			<ToggleButton.Template>
				<ControlTemplate>
					<Grid>
						<Border x:Name="border" BorderBrush="#FF878787" Background="White" BorderThickness="1" CornerRadius="3,3,3,3">
							<!-- JJD 08/08/12 - TFS118137
									Replaced event perpetual trigger animations (below) with a binding to an attached ArrowOpacity property
									that is animated in code. This gets around a timing issue in the framewrok when the control is
									loaded and unloaded that occasionally will crash the designer with an exception because
									the animation can't find the 'arrow' element
							-->
							<Path x:Name="arrow"
								  Opacity="{Binding Path=(stf:SmartButtonAdorner.ArrowOpacity), RelativeSource={RelativeSource TemplatedParent}}"
													SnapsToDevicePixels="True"
													IsHitTestVisible="False"                                                
													Margin="1,0,0,0"
													Fill="#FF3C3C3C"
													RenderTransformOrigin="0.5,0.5"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="M 0 0 L 0 8 L 5 4 Z"
													Stroke="#FF3C3C3C"
													StrokeThickness="0.5">
								<Path.RenderTransform>
									<RotateTransform Angle="0" />
								</Path.RenderTransform>
							</Path>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
	                    
						<Trigger  Property="ToggleButton.IsMouseOver" Value="True">
							<Setter  Property="Control.Foreground" Value="Red" />
							<Setter  Property="Control.Cursor" Value="Hand" />
							<Setter TargetName="arrow"  Property="Fill" Value="#3399E1" />
							<Setter TargetName="arrow"  Property="Stroke" Value="#3399E1" />
							<Setter TargetName="border"  Property="BorderBrush" Value="#3399E1" />
						</Trigger>
	                    
						<EventTrigger RoutedEvent="ToggleButton.Checked">
							<BeginStoryboard>
								<Storyboard Storyboard.TargetName="arrow">                                
									<DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" Duration="0:0:0.5" To="180" DecelerationRatio="1" />
									<!-- JJD 08/08/12 - TFS118137
												Replaced event perpetual trigger animations with a binding to an attached ArrowOpacity property
												that is animated in code. This gets around a timing issue in the framewrok when the control is
												loaded and unloaded that occasionally will crash the designer with an exception because
												the animation can't find the 'arrow' element
										-->
									<!--<DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1" />-->
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>

						<EventTrigger  RoutedEvent="ToggleButton.Unchecked">
							<BeginStoryboard>
								<Storyboard Storyboard.TargetName="arrow">
									<DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" Duration="0:0:0.5" To="0" DecelerationRatio="1" />
									<!-- JJD 08/08/12 - TFS118137
												Replaced event perpetual trigger animations with a binding to an attached ArrowOpacity property
												that is animated in code. This gets around a timing issue in the framewrok when the control is
												loaded and unloaded that occasionally will crash the designer with an exception because
												the animation can't find the 'arrow' element
										-->
									<!--<DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" From="1" To=".3" AutoReverse="True" RepeatBehavior="Forever"/>-->
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>

						<!-- JJD 08/08/12 - TFS118137
									Replaced event perpetual trigger animations with a binding to an attached ArrowOpacity property
									that is animated in code. This gets around a timing issue in the framewrok when the control is
									loaded and unloaded that occasionally will crash the designer with an exception because
									the animation can't find the 'arrow' element
							-->
						<!--<EventTrigger  RoutedEvent="FrameworkElement.Loaded">
							<BeginStoryboard>
								<Storyboard Storyboard.TargetName="arrow">
									<DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" From="1" To=".3" AutoReverse="True" RepeatBehavior="Forever"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>-->

					</ControlTemplate.Triggers>                
				</ControlTemplate>
			</ToggleButton.Template>
		</ToggleButton>
	</Grid>
</UserControl>
