<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LD_CarouselPanelItem" xml:space="preserve">
    <value>Element used by the XamCarouselPanel to serve as a wrapper for each child element within the panel.</value>
  </data>
  <data name="LC_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="LD_CarouselPanelItem_P_AutoScaleItemContentsToFit" xml:space="preserve">
    <value>Returns true if the XamCarouselPanel that contains this item is requesting that items autoscale their content to fit within their bounds.</value>
  </data>
  <data name="LD_CarouselPanelItem_P_IsListContinuous" xml:space="preserve">
    <value>Returns true if the XamCarouselPanel that contains this item is treating the item list a continuous list.</value>
  </data>
  <data name="LD_CarouselPanelItem_P_IsFirstItem" xml:space="preserve">
    <value>Returns true if the this item is the first item in the list.</value>
  </data>
  <data name="LD_CarouselPanelItem_P_IsLastItem" xml:space="preserve">
    <value>Returns true if the this item is the last item in the list.</value>
  </data>
  <data name="LD_CarouselPanelItem_P_ItemHorizontalScrollBarVisibility" xml:space="preserve">
    <value>Returns the visibility of the item's horizontal scrollbar.</value>
  </data>
  <data name="LD_CarouselPanelItem_P_ItemVerticalScrollBarVisibility" xml:space="preserve">
    <value>Returns the visibility of the item's vertical scrollbar.</value>
  </data>
  <data name="LD_SortIndicator" xml:space="preserve">
    <value>A Button derived element used display and/or change SortStatus. </value>
  </data>
  <data name="LD_SortIndicator_P_SortStatus" xml:space="preserve">
    <value>Gets/sets whether the status is ascending, descending or not sorted</value>
  </data>
  <data name="LD_SortIndicator_E_SortStatusChanged" xml:space="preserve">
    <value>Occurs when property 'SortStatus' changes</value>
  </data>
  <data name="LD_CarouselPanelNavigator" xml:space="preserve">
    <value>Control used by the XamCarouselPanel to provide a UI for navigating (scrolling) among the child elements of the panel.</value>
  </data>
  <data name="LD_CarouselPanelNavigator_P_CarouselPanel" xml:space="preserve">
    <value>The 'XamCarouselPanel' that the navigator should affect.</value>
  </data>
  <data name="LD_ExpanderBar" xml:space="preserve">
    <value>Button derived element that displays a bar used for expanding/collapsing an area.</value>
  </data>
  <data name="LC_Brushes" xml:space="preserve">
    <value>Brushes</value>
  </data>
  <data name="LD_ExpanderBar_P_BackgroundHover" xml:space="preserve">
    <value>Brush applied when IsMouseOver = true.</value>
  </data>
  <data name="LD_ExpanderBar_P_BorderHoverBrush" xml:space="preserve">
    <value>The border brush applied to the background area when IsMouseOver = true.</value>
  </data>
  <data name="LD_CarouselListBoxItem" xml:space="preserve">
    <value>Element used by the XamCarouselListBox to serve as a container (wrapper) for each item in the list</value>
  </data>
  <data name="LD_ExpansionIndicator" xml:space="preserve">
    <value>A ToggleButton derived element used in trees and hierarchical grids to display and/or change the expanded state of nodes.</value>
  </data>
  <data name="LC_Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="LD_EffectStop_P_Offset" xml:space="preserve">
    <value>A value between 0 and 1 that represents the percentage offset in the overall range for the effect</value>
  </data>
  <data name="LD_EffectStop_P_Value" xml:space="preserve">
    <value>The value that should be returned for the associated offset.</value>
  </data>
  <data name="LD_XamCarouselPanel" xml:space="preserve">
    <value>A Panel derived element that arranges and displays its child elements along a user-defined path, with native support for scrolling and virtualizing those items.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_CanNavigateToPreviousItem" xml:space="preserve">
    <value>Returns true if navigation to a previous item is possible.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_CanNavigateToPreviousPage" xml:space="preserve">
    <value>Returns true if navigation to a previous page of items is possible.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_CanNavigateToNextItem" xml:space="preserve">
    <value>Returns true if navigation to a following item is possible.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_CanNavigateToNextPage" xml:space="preserve">
    <value>Returns true if navigation to a following page of items is possible.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_FirstVisibleItemIndex" xml:space="preserve">
    <value>Returns a number that represents the visible item with the lowest index</value>
  </data>
  <data name="LD_XamCarouselPanel_P_OpacityEffectStopsResolved" xml:space="preserve">
    <value>Return the OpacityEffectStops collection (if one has been defined and populated), otherwise returns an internally generated default collection.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_OpacityEffectStopDirectionResolved" xml:space="preserve">
    <value>Returns the value of the OpacityEffectStopDirection property if set to something other than 'Default' otherwise returns a default value of 'UseItemPath'.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_ReflectionVisibility" xml:space="preserve">
    <value>Returns the Visibility of the reflection displayed for each item in the list.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_ScalingEffectStopsResolved" xml:space="preserve">
    <value>Return the ScalingEffectStops collection (if one has been defined and populated), otherwise returns an internally generated default collection.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_ScalingEffectStopDirectionResolved" xml:space="preserve">
    <value>Returns the value of the ScalingEffectStopDirection property if set to something other than 'Default' otherwise returns a default value of 'UseItemPath'.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_SkewAngleXEffectStopsResolved" xml:space="preserve">
    <value>Return the SkewAngleXEffectStops collection (if one has been defined and populated), otherwise returns an internally generated default collection.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_SkewAngleXEffectStopDirectionResolved" xml:space="preserve">
    <value>Returns the value of the SkewAngleXEffectStopDirection property if set to something other than 'Default' otherwise returns a default value of 'UseItemPath'.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_SkewAngleYEffectStopsResolved" xml:space="preserve">
    <value>Return the SkewAngleYEffectStops collection (if one has been defined and populated), otherwise returns an internally generated default collection.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_SkewAngleYEffectStopDirectionResolved" xml:space="preserve">
    <value>Returns the value of the SkewAngleYEffectStopDirection property if set to something other than 'Default' otherwise returns a default value of 'UseItemPath'.</value>
  </data>
  <data name="LC_Appearance" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="LD_XamCarouselPanel_P_ViewSettings" xml:space="preserve">
    <value>Returns/set the CarouselViewSettings object for this XamCarouselPanel.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_ZOrderEffectStopsResolved" xml:space="preserve">
    <value>Return the ZOrderEffectStops collection (if one has been defined and populated), otherwise returns an internally generated default collection.</value>
  </data>
  <data name="LD_XamCarouselPanel_P_ZOrderEffectStopDirectionResolved" xml:space="preserve">
    <value>Returns the value of the ZOrderEffectStopDirection property if set to something other than 'Default' otherwise returns a default value of 'UseItemPath'.</value>
  </data>
  <data name="LD_XamCarouselPanel_E_ExecutingCommand" xml:space="preserve">
    <value>Occurs before a command is performed</value>
  </data>
  <data name="LD_XamCarouselPanel_E_ExecutedCommand" xml:space="preserve">
    <value>Occurs after a command is performed</value>
  </data>
  <data name="LD_CarouselViewSettings_P_AutoScaleItemContentsToFit" xml:space="preserve">
    <value>Returns/sets whether the control implementing the view automatically scales the contents of each item to fit within the Item, the size of which is determined by the ItemSize property.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_HeightInInfiniteContainers" xml:space="preserve">
    <value>Returns/sets a value that is used as the default for the height of the control implementing the view when used in a container with infinite height available.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_IsListContinuous" xml:space="preserve">
    <value>Returns true if the control implementing the view should wrap around to the beginning of the list and display the first list item after the last list item.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_IsNavigatorVisible" xml:space="preserve">
    <value>Returns/sets whether the CarouselPanelNavigator is visible.  The CarouselPanelNavigator provides a UI for navigating through the list of items in the Carousel.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemHorizontalScrollBarVisibility" xml:space="preserve">
    <value>Returns/sets the visibility of the Horizontal scrollbar that is displayed within each item when the width of the Item's contents exceeds the Item's width as specified by the ItemSize property.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemVerticalScrollBarVisibility" xml:space="preserve">
    <value>Returns/sets the visibility of the Vertical scrollbar that is displayed within each item when the height of the Item's contents exceeds the Item's height as specified by the ItemSize property.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPath" xml:space="preserve">
    <value>Returns/sets the Shape derived element (i.e., Path, Ellipse, Line, Polygon, Polyline, Rectangle) which defines the Geometry used to arrange items in the control implementing the view.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathAutoPad" xml:space="preserve">
    <value>Returns/sets whether padding should be automatically added within the control implementing the view to ensure that items do not extend beyond the bounds of the control.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathHorizontalAlignment" xml:space="preserve">
    <value>Returns/sets the horizontal alignment of the item path within the item path area.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathPadding" xml:space="preserve">
    <value>Returns/sets the padding around the item path area, within which the ItemPath is aligned and stretched.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathStretch" xml:space="preserve">
    <value>Returns/sets how the ItemPath is stretched within the item path area.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathPrefixPercent" xml:space="preserve">
    <value>Returns/sets the size of the path prefix area expressed as a percentage of the overall path size (the percentage must be in the range 0.0 to 0.4).</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathSuffixPercent" xml:space="preserve">
    <value>Returns/sets the size of the path suffix area expressed as a percentage of the overall path size (the percentage must be in the range 0.0 to 0.4).</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathRenderBrush" xml:space="preserve">
    <value>Returns/sets the Brush used to fill a visual representation of the ItemPath behind the items being displayed.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathRenderPen" xml:space="preserve">
    <value>Returns/sets the Pen used to draw the outline of the ItemPath behind the items being displayed.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemPathVerticalAlignment" xml:space="preserve">
    <value>Returns/sets the vertical alignment of the item path within the item path area.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemSize" xml:space="preserve">
    <value>Returns/sets the size of the items in the Carousel.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemsPerPage" xml:space="preserve">
    <value>Determines the maximum number of items that should be displayed in the Carousel at one time.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ItemTransitionStyle" xml:space="preserve">
    <value>Returns/sets a value that determines the effects applied to items as they transition through the prefix and suffix areas of the ItemPath.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_OpacityEffectStops" xml:space="preserve">
    <value>Returns a collection of OpacityEffectStop objects that define the stops to be used when setting the opacity of items along the item path</value>
  </data>
  <data name="LD_CarouselViewSettings_P_OpacityEffectStopDirection" xml:space="preserve">
    <value>Returns/sets the direction used to evaluate OpacityEffectStops.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_CarouselPanelNavigatorStyle" xml:space="preserve">
    <value>Returns/sets the style of the CarouselPanelNavigator.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ReserveSpaceForReflections" xml:space="preserve">
    <value>Returns/sets whether the control implementing the view  should reserve space for item reflections.  If true, each item will be sized to twice the height specified by the ItemSize property.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_RotateItemsWithPathTangent" xml:space="preserve">
    <value>Returns/sets whether the control implementing the view  should rotate each item based on the item position's tangent to the path.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ScalingEffectStops" xml:space="preserve">
    <value>Returns a collection of ScalingEffectStop objects that define the stops to be used when scaling items to simulate perspective.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ScalingEffectStopDirection" xml:space="preserve">
    <value>Returns/sets the direction used to evaluate ScalingEffectStops.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ShouldScrollItemsIntoInitialPosition" xml:space="preserve">
    <value>Returns/sets whether items should be animated into their start positions when the control implementing the view  is first loaded.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_SkewAngleXEffectStops" xml:space="preserve">
    <value>Returns a collection of SkewAngleXEffectStop objects that define the stops to be used when setting the SkewAngleX angle of items.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_SkewAngleXEffectStopDirection" xml:space="preserve">
    <value>Returns/sets the direction used to evaluate SkewAngleXEffectStops.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_SkewAngleYEffectStops" xml:space="preserve">
    <value>Returns a collection of SkewAngleYEffectStop objects that define the stops to be used when setting the SkewAngleY angle of items.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_SkewAngleYEffectStopDirection" xml:space="preserve">
    <value>Returns/sets the direction used to evaluate SkewAngleYEffectStops.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_UseOpacity" xml:space="preserve">
    <value>Returns/sets whether OpacityEffectStops and OpacityEffectStopDirection should be honored and opacity effects applied to items in the Carousel.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_UseScaling" xml:space="preserve">
    <value>Returns/sets whether ScalingEffectStops and ScalingEffectStopDirection should be honored and opacity effects applied to items in the Carousel.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_UseSkewing" xml:space="preserve">
    <value>Returns/sets whether SkewAngleXEffectStops, SkewAngleYEffectStops, SkewAngleXEffectStopDirection and SkewAngleYEffectStopDirection should be honored and skewing effects applied to items in the Carousel.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_UseZOrder" xml:space="preserve">
    <value>Returns/sets whether ZOrderEffectStops should be honored and ZOrder effects applied to items in the Carousel.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_WidthInInfiniteContainers" xml:space="preserve">
    <value>Returns/sets a value that is used as default for the height of the control implementing the view when used in a container with infinite height available.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ZOrderEffectStops" xml:space="preserve">
    <value>Returns a collection of ZOrderEffectStop objects that define the stops to be used when scaling items to simulate perspective.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ZOrderEffectStopDirection" xml:space="preserve">
    <value>Returns/sets the direction used to evaluate ZOrderEffectStops.</value>
  </data>
  <data name="LD_XamCarouselListBox" xml:space="preserve">
    <value>A ListBox that uses the XamCarouselPanel as its ItemsPanel to arrange items along a user-defined path.</value>
  </data>
  <data name="LD_XamCarouselListBox_P_ViewSettings" xml:space="preserve">
    <value>Returns/set the CarouselViewSettings object for this XamCarouselListBox.</value>
  </data>
  <data name="LD_AutoDisabledImage_P_DisabledSource" xml:space="preserve">
    <value>Returns or sets the 'ImageSource' to use as the source for the image when the 'IsEnabled' is false.</value>
  </data>
  <data name="LD_PopupResizerBar_P_ResizeMode" xml:space="preserve">
    <value>Gets/sets how the popup will be able to be resized.</value>
  </data>
  <data name="LD_PopupResizerBar_P_Location" xml:space="preserve">
    <value>Determines where the resizer bar is positioned.</value>
  </data>
  <data name="LD_PopupResizerDecorator_P_ResizeMode" xml:space="preserve">
    <value>Gets/sets how the popup will be able to be resized.</value>
  </data>
  <data name="LD_PopupResizerDecorator_P_ResizerBarLocation" xml:space="preserve">
    <value>Returns where the resizer bar is positioned (read-only).</value>
  </data>
  <data name="LD_PopupResizerDecorator_P_ResizerBarStyle" xml:space="preserve">
    <value>Gets/sets the style used for the PopupResizerBar</value>
  </data>
  <data name="LD_TabItemEx_P_IsMouseOverTab" xml:space="preserve">
    <value>Returns a boolean indicating whether the mouse is over the tab item header.</value>
  </data>
  <data name="LC_Layout" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="LD_TabItemPanel_P_MaximumSizeToFitAdjustment" xml:space="preserve">
    <value>The maximum amount of additional size to add to an element when the TabLayoutStyle is 'SingleRowSizeToFit' or 'MultiRowSizeToFit'.</value>
  </data>
  <data name="LD_TabItemPanel_P_MinimumTabExtent" xml:space="preserve">
    <value>The minimum extent for a tab item. That is, the minimum physical width when the TabStripPlacement is Top or Bottom and the minimum physical height when the TabStripPlacement is Left or Right.</value>
  </data>
  <data name="LD_TabItemPanel_P_TabLayoutStyle" xml:space="preserve">
    <value>Determines how the tab items will be arranged.</value>
  </data>
  <data name="LD_TabItemPanel_P_TabStripPlacement" xml:space="preserve">
    <value>Determines the orientation and placement of the tab items.</value>
  </data>
  <data name="LD_ResourceWasher_P_AutoWash" xml:space="preserve">
    <value>Determines whether the wash will be triggered automatically.</value>
  </data>
  <data name="LD_ResourceWasher_P_SourceDictionary" xml:space="preserve">
    <value>A dictionary that contains the resources to clone.</value>
  </data>
  <data name="LD_ResourceWasher_P_WashColor" xml:space="preserve">
    <value>The default color to use to wash the resources in the SourceDictionary</value>
  </data>
  <data name="LD_ResourceWasher_P_WashMode" xml:space="preserve">
    <value>The method used to wash colors in the resources in the SourceDictionary</value>
  </data>
  <data name="LD_RecyclingItemsControl_P_ItemContainerGenerationMode" xml:space="preserve">
    <value>Gets/sets how item containers are generated and cached.</value>
  </data>
  <data name="LD_XamCarouselListBox_P_IsSynchronizedWithCurrentItem" xml:space="preserve">
    <value>Returns/sets a value that indicates whether the XamCarouselListBox should keep the SelectedItem synchronized with the current item in the Items property. </value>
  </data>
  <data name="LD_XamCarouselListBox_P_SelectedIndex" xml:space="preserve">
    <value>Returns/sets the index of the currently selected item in the list.</value>
  </data>
  <data name="LD_XamCarouselListBox_P_SelectedItem" xml:space="preserve">
    <value>Returns/sets the currently selected item in the list.</value>
  </data>
  <data name="LD_XamCarouselListBox_P_SelectedValue" xml:space="preserve">
    <value>Returns the object that us at the specified SelectedValuePath of the SelcetedItem, or null if no item is selected.  If SelectedValuePath has not been set, then the SelectedItem is returned (read-only).  The default value is null.</value>
  </data>
  <data name="LD_XamCarouselListBox_P_SelectedValuePath" xml:space="preserve">
    <value>Returns/sets a string that contains the path that is used to get the SelectedValue.  The default value is String.Empty.</value>
  </data>
  <data name="LD_XamCarouselListBox_E_SelectionChanged" xml:space="preserve">
    <value>Occurs when the Selection has changed</value>
  </data>
  <data name="LD_XamPager_P_ScrollLeftVisibility" xml:space="preserve">
    <value>Indicates the computed scroll left pager button visibility.</value>
  </data>
  <data name="LD_XamPager_P_ScrollRightVisibility" xml:space="preserve">
    <value>Indicates the computed scroll right pager button visibility.</value>
  </data>
  <data name="LD_XamPager_P_ScrollUpVisibility" xml:space="preserve">
    <value>Indicates the computed scroll up pager button visibility.</value>
  </data>
  <data name="LD_XamPager_P_ScrollDownVisibility" xml:space="preserve">
    <value>Indicates the computed scroll down pager button visibility.</value>
  </data>
  <data name="LD_XamPager_P_ScrollLeftButtonStyle" xml:space="preserve">
    <value>Returns or sets the style used for the left scroll button</value>
  </data>
  <data name="LD_XamPager_P_ScrollRightButtonStyle" xml:space="preserve">
    <value>Returns or sets the style used for the right scroll button</value>
  </data>
  <data name="LD_XamPager_P_ScrollUpButtonStyle" xml:space="preserve">
    <value>Returns or sets the style used for the up scroll button</value>
  </data>
  <data name="LD_XamPager_P_ScrollDownButtonStyle" xml:space="preserve">
    <value>Returns or sets the style used for the down scroll button</value>
  </data>
  <data name="LD_XamScreenTip_P_Footer" xml:space="preserve">
    <value>Returns/sets the content for the footer area of the XamScreenTip.</value>
  </data>
  <data name="LD_XamScreenTip_P_FooterSeparatorVisibility" xml:space="preserve">
    <value>Returns/sets the Visibility of the footer separator which divides the footer area from the main content.  The default is Visibility.Visible.</value>
  </data>
  <data name="LD_XamScreenTip_P_FooterTemplate" xml:space="preserve">
    <value>Returns/sets the data template used to display the footer content.  The default value is null.</value>
  </data>
  <data name="LD_XamScreenTip_P_FooterTemplateSelector" xml:space="preserve">
    <value>Returns/sets the data template selector to provide customer template selection logic for the footer template.</value>
  </data>
  <data name="LD_XamScreenTip_P_Header" xml:space="preserve">
    <value>Returns/sets the content for the header area of the XamScreenTip.</value>
  </data>
  <data name="LD_XamScreenTip_P_HeaderSeparatorVisibility" xml:space="preserve">
    <value>Returns/sets the Visibility of the header separator which divides the header area from the main content.  The default is Visibility.Collapsed.</value>
  </data>
  <data name="LD_XamScreenTip_P_HeaderTemplate" xml:space="preserve">
    <value>Returns/sets the data template used to display the header content.  The default value is null.</value>
  </data>
  <data name="LD_XamScreenTip_P_HeaderTemplateSelector" xml:space="preserve">
    <value>Returns/sets the data template selector to provide customer template selection logic for the header template.</value>
  </data>
  <data name="LD_XamScreenTip_P_Theme" xml:space="preserve">
    <value>Gets/sets the general look of the control</value>
  </data>
  <data name="LD_XamScreenTip_E_ThemeChanged" xml:space="preserve">
    <value>Occurs when the 'Theme' property changes</value>
  </data>
	<data name="LD_XamTabControl" xml:space="preserve">
    <value>A custom tab control with multiple layout styles and tab item scrolling functionality.</value>
  </data>
	<data name="LD_XamTabControl_P_AllowMinimize" xml:space="preserve">
    <value>Determines if the control can be minimized via the user interface - e.g. by double clicking on a tab item.</value>
  </data>
  <data name="LD_XamTabControl_P_IsDropDownOpen" xml:space="preserve">
    <value>Indicates if the minimized tab control is currently dropped down.</value>
  </data>
  <data name="LD_XamTabControl_P_IsMinimized" xml:space="preserve">
    <value>Determines if the contents of the selected tab are displayed in a popup instead of within the tab control itself.</value>
  </data>
  <data name="LD_XamTabControl_P_IsTabItemPanelScrolling" xml:space="preserve">
    <value>Returns a boolean indicating whether the scroll viewer containing the tab item panel is currently set up so that scrolling elements are visible.</value>
  </data>
  <data name="LD_XamTabControl_P_MaximumSizeToFitAdjustment" xml:space="preserve">
    <value>The maximum amount of additional size to add to an element when the TabLayoutStyle is 'SingleRowSizeToFit' or 'MultiRowSizeToFit'.</value>
  </data>
  <data name="LD_XamTabControl_P_MinimumTabExtent" xml:space="preserve">
    <value>The minimum extent for a tab item. That is, the minimum physical width when the TabStripPlacement is Top or Bottom and the minimum physical height when the TabStripPlacement is Left or Right.</value>
  </data>
  <data name="LD_XamTabControl_P_PostTabItemContent" xml:space="preserve">
    <value>The content that should be displayed in the tab item header area to the left/top of the tab items.</value>
  </data>
  <data name="LD_XamTabControl_P_PostTabItemContentTemplate" xml:space="preserve">
    <value>The template used to display the content of the 'PostTabItemContent'</value>
  </data>
  <data name="LD_XamTabControl_P_PostTabItemContentTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the 'PostTabItemContent'.</value>
  </data>
  <data name="LD_XamTabControl_P_PreTabItemContent" xml:space="preserve">
    <value>The content that should be displayed in the tab item header area to the left/top of the tab items.</value>
  </data>
  <data name="LD_XamTabControl_P_PreTabItemContentTemplate" xml:space="preserve">
    <value>The template used to display the content of the 'PreTabItemContent'</value>
  </data>
  <data name="LD_XamTabControl_P_PreTabItemContentTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the 'PreTabItemContent'.</value>
  </data>
  <data name="LD_XamTabControl_P_TabItemContentHeight" xml:space="preserve">
    <value>Returns or sets a value that controls the height of the content presenter used to display the 'Content' of the selected tab item.</value>
  </data>
  <data name="LD_XamTabControl_P_TabLayoutStyle" xml:space="preserve">
    <value>Determines how the tab items will be arranged.</value>
  </data>
  <data name="LD_XamTabControl_E_DropDownClosed" xml:space="preserve">
    <value>Occurs after the dropdown of the XamTabControl has been closed</value>
  </data>
  <data name="LD_XamTabControl_E_DropDownOpened" xml:space="preserve">
    <value>Occurs after the dropdown of the minimized XamTabControl has been opened</value>
  </data>
  <data name="LD_XamTabControl_E_DropDownOpening" xml:space="preserve">
    <value>Occurs before the dropdown of the XamTabControl has been opened</value>
  </data>
  <data name="LD_ResourceSetLoader_P_Locator" xml:space="preserve">
    <value>A 'ResourceSetLocator' that identifies the resources to load.</value>
  </data>
  <data name="LD_ToolWindowResizeElement_P_BorderLocation" xml:space="preserve">
    <value>Returns or sets the location for the resize border.</value>
  </data>
  <data name="LD_ToolWindow_P_AllowClose" xml:space="preserve">
    <value>Returns/sets a boolean indicating if the window may be closed.</value>
  </data>
  <data name="LD_ToolWindow_P_HorizontalAlignmentMode" xml:space="preserve">
    <value>Returns or sets a value indicating whether the 'Left' or 'HorizontalAlignment' property should be honored when determining the horizontal position of the element.</value>
  </data>
  <data name="LD_ToolWindow_P_HorizontalAlignmentOffset" xml:space="preserve">
    <value>Returns or sets the amount that the element should be adjusted horizontally when the 'HorizontalAlignmentMode' is set to 'UseAlignment'.</value>
  </data>
  <data name="LD_ToolWindow_P_IsActive" xml:space="preserve">
    <value>Returns a boolean indicating if the window is active.</value>
  </data>
  <data name="LD_ToolWindow_P_IsUsingOSNonClientArea" xml:space="preserve">
    <value>Returns a boolean indicating if the content is currently using the operating system to provide the operating system non-client area.</value>
  </data>
  <data name="LD_ToolWindow_P_Left" xml:space="preserve">
    <value>Returns the horizontal coordinate for the left edge of the window.</value>
  </data>
  <data name="LD_ToolWindow_P_Owner" xml:space="preserve">
    <value>Returns the owning element for which the ToolWindow was displayed.</value>
  </data>
  <data name="LD_ToolWindow_P_ResizeMode" xml:space="preserve">
    <value>Returns/sets how/whether the window may be resized.</value>
  </data>
  <data name="LD_ToolWindow_P_PreferredBorderThickness" xml:space="preserve">
    <value>Returns the preferred border thickness based on the ResizeMode and whether the window is using the os to render the non-client area.</value>
  </data>
  <data name="LD_ToolWindow_P_Theme" xml:space="preserve">
    <value>Gets/sets the general look of the control</value>
  </data>
  <data name="LD_ToolWindow_P_Title" xml:space="preserve">
    <value>Returns/sets the title for the window.</value>
  </data>
  <data name="LD_ToolWindow_P_Top" xml:space="preserve">
    <value>Returns the vertical coordinate for the top edge of the window.</value>
  </data>
  <data name="LD_ToolWindow_P_Topmost" xml:space="preserve">
    <value>Returns or sets a boolean whether the window should remain above other floating windows.</value>
  </data>
  <data name="LD_ToolWindow_P_UseOSNonClientArea" xml:space="preserve">
    <value>Returns or sets a boolean indicating whether the content should use the operating system nonclient area when possible - i.e. when hosted within a Window.</value>
  </data>
  <data name="LD_ToolWindow_P_VerticalAlignmentMode" xml:space="preserve">
    <value>Returns or sets a value indicating whether the 'Top' or 'VerticalAlignment' property should be honored when determining the vertical position of the element.</value>
  </data>
  <data name="LD_ToolWindow_P_VerticalAlignmentOffset" xml:space="preserve">
    <value>Returns or sets the amount that the element should be adjusted vertically when the 'VerticalAlignmentMode' is set to 'UseAlignment'.</value>
  </data>
  <data name="LD_ToolWindow_E_ThemeChanged" xml:space="preserve">
    <value>Occurs when the 'Theme' property changes</value>
  </data>
  <data name="LD_ToolWindow_E_Activated" xml:space="preserve">
    <value>Occurs when the window becomes the active window.</value>
  </data>
  <data name="LD_ToolWindow_E_Deactivated" xml:space="preserve">
    <value>Occurs when the window is no longer the active window.</value>
  </data>
  <data name="LD_ToolWindow_E_Closing" xml:space="preserve">
    <value>Occurs when the window is about to be closed.</value>
  </data>
  <data name="LD_ToolWindow_E_Closed" xml:space="preserve">
    <value>Occurs when the window has been closed.</value>
  </data>
  <data name="LD_CarouselViewSettings_P_ShouldAnimateItemsOnListChange" xml:space="preserve">
    <value>Returns/sets whether items should be animated into their positions when the whenever the list of items being displayed in the XamCarouselPanel is changed (i.e., items are added, removed, moved or replaced).  The default is False.</value>
  </data>
  <data name="LD_ReportSettings_P_FileName" xml:space="preserve">
    <value>Returns/sets the name of the file where the report will be saved.</value>
  </data>
  <data name="LD_ReportSettings_P_HorizontalPaginationMode" xml:space="preserve">
    <value>Returns/sets the way logical pages are printed when they are too wide to fit on one page.</value>
  </data>
  <data name="LD_ReportSettings_P_Margin" xml:space="preserve">
    <value>Gets or sets the margin around the ReportPagePresenter.</value>
  </data>
  <data name="LD_ReportSettings_P_PageOrientation" xml:space="preserve">
    <value>Returns/sets the orientation of the page.</value>
  </data>
  <data name="LD_ReportSettings_P_PagePrintOrder" xml:space="preserve">
    <value>Returns/sets the order that pages are printed when HorizontalPaginationMode is set to 'Mosaic'.</value>
  </data>
  <data name="LD_ReportSettings_P_PageRange" xml:space="preserve">
    <value>Returns/sets the range of pages to be included in the report.</value>
  </data>
  <data name="LD_ReportSettings_P_UserPageRangeEnabled" xml:space="preserve">
    <value>Returns/sets whether the standard PrintDialog will allow to user to select a range of pages.</value>
  </data>
  <data name="LD_ReportSettings_P_PageSize" xml:space="preserve">
    <value>Returns/sets the size of the page.</value>
  </data>
  <data name="LD_ReportSettings_P_RepeatType" xml:space="preserve">
    <value>Returns/sets the RepeatType for appearing of XamDataGrid's header on every printed page.</value>
  </data>
  <data name="LD_ReportSettings_P_PrintQueue" xml:space="preserve">
    <value>Gets or sets a PrintQueue object that represents the target printer.</value>
  </data>
  <data name="LD_ReportSection_P_IsEndReached" xml:space="preserve">
    <value>Returns whether the report section is on the last page (read-only).</value>
  </data>
  <data name="LD_ReportSection_P_LogicalPageNumber" xml:space="preserve">
    <value>The logical page number of the current page being printed within this section (read-only).</value>
  </data>
  <data name="LD_ReportSection_P_LogicalPagePartNumber" xml:space="preserve">
    <value>The logical page part number of the current page being printed within this section (read-only).</value>
  </data>
  <data name="LD_ReportSection_P_PageContentTemplate" xml:space="preserve">
    <value>The template used to display the content of ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportSection_P_PageContentTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the content in the ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportSection_P_PageFooter" xml:space="preserve">
    <value>Gets or sets the content of the footer used inside the ReportPagePresenter element.</value>
  </data>
  <data name="LD_ReportSection_P_PageFooterTemplate" xml:space="preserve">
    <value>The template used to display the footer content of ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportSection_P_PageFooterTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the footer in the ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportSection_P_PageHeader" xml:space="preserve">
    <value>Gets or sets the content of the header used inside the ReportPagePresenter element.</value>
  </data>
  <data name="LD_ReportSection_P_PageHeaderTemplate" xml:space="preserve">
    <value>The template used to display the header content of ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportSection_P_PageHeaderTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the header in the ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportSection_P_PagePresenterStyle" xml:space="preserve">
    <value>Gets or sets the style for the ReportPagePresenter.</value>
  </data>
  <data name="LD_ReportSection_P_PhysicalPageNumber" xml:space="preserve">
    <value>The physical page number of the current page being printed within this section (read-only).</value>
  </data>
  <data name="LD_TabItemPanel_P_InterRowSpacing" xml:space="preserve">
    <value>The amount of spacing between rows of tab items.</value>
  </data>
  <data name="LD_TabItemPanel_P_InterTabSpacing" xml:space="preserve">
    <value>The amount of spacing between the tab items in a row.</value>
  </data>
  <data name="LD_TabItemPanel_P_MaximumTabRows" xml:space="preserve">
    <value>Determines the maximum number of tab rows that will be displayed before a vertical scrollbar will appear</value>
  </data>
  <data name="LD_TabItemEx_P_AllowClosing" xml:space="preserve">
    <value>Returns or sets a value that indicates whether the tab item is allowed to be closed.</value>
  </data>
  <data name="LD_TabItemEx_P_CloseButtonVisibility" xml:space="preserve">
    <value>Returns or sets a value that indicates when the close button should be displayed within the tab item. </value>
  </data>
  <data name="LD_TabItemEx_P_ComputedCloseButtonVisibility" xml:space="preserve">
    <value>Returns the calculated visibility of the close button within the tab item based on its settings and those of the containing XamTabControl.</value>
  </data>
  <data name="LD_TabItemEx_E_Closing" xml:space="preserve">
    <value>Occurs when the TabItem is about to be closed (cancellable)</value>
  </data>
  <data name="LD_TabItemEx_E_Closed" xml:space="preserve">
    <value>Occurs after the tab has been closed.</value>
  </data>
  <data name="LD_UniformGridEx_P_Columns" xml:space="preserve">
    <value>Gets or sets the number of columns in the grid</value>
  </data>
  <data name="LD_UniformGridEx_P_FirstColumn" xml:space="preserve">
    <value>Gets or sets the number of leading blank columns in the first row of the grid</value>
  </data>
  <data name="LD_UniformGridEx_P_FirstRow" xml:space="preserve">
    <value>Gets or sets the number of blank rows to display before the first item is arranged.</value>
  </data>
  <data name="LD_UniformGridEx_P_Rows" xml:space="preserve">
    <value>Gets or sets the number of rows in the grid</value>
  </data>
  <data name="LD_XamTabControl_P_IsMultiRow" xml:space="preserve">
    <value>Indicates if the 'TabLayoutStyle' is one that would arrange the tab items in multiple rows.</value>
  </data>
  <data name="LD_XamTabControl_P_AllowTabClosing" xml:space="preserve">
    <value>Returns or sets a nullable boolean indicating if the containing tab items may be closed by default.</value>
  </data>
  <data name="LD_XamTabControl_P_DropDownAnimation" xml:space="preserve">
    <value>Returns or sets the animation used when IsMinimized is true and the control is showing/hiding the popup containing the selected content.</value>
  </data>
  <data name="LD_XamTabControl_P_InterRowSpacing" xml:space="preserve">
    <value>The amount of space between rows of tab items.</value>
  </data>
  <data name="LD_XamTabControl_P_InterTabSpacing" xml:space="preserve">
    <value>The amount of space between tab items.</value>
  </data>
  <data name="LD_XamTabControl_P_MaximumTabRows" xml:space="preserve">
    <value>Determines the maximum number of tab rows that will be displayed before a vertical scrollbar will appear</value>
  </data>
  <data name="LD_XamTabControl_P_ShowTabHeaderCloseButton" xml:space="preserve">
    <value>Returns or sets a boolean indicating whether a close button should be displayed within the tab item area of the control</value>
  </data>
  <data name="LD_XamTabControl_P_TabItemCloseButtonVisibility" xml:space="preserve">
    <value>Returns or sets a the default value for the TabItemEx.CloseButtonVisibility determining when a tab item should display the close button.</value>
  </data>
  <data name="LD_XamTabControl_P_Theme" xml:space="preserve">
    <value>Gets/sets the default look for the control.</value>
  </data>
  <data name="LD_XamTabControl_E_ThemeChanged" xml:space="preserve">
    <value>Invoked when the 'Theme' property has been changed.</value>
  </data>
  <data name="LD_ToolWindow_P_DialogResult" xml:space="preserve">
    <value>Returns or sets the dialog result to return to the caller when displayed using the ShowDialog method.</value>
  </data>
  <data name="LD_DropIndicator_P_DropLocation" xml:space="preserve">
    <value>Specifies the drop location this drop indicator will convey.</value>
  </data>
  <data name="LD_DropIndicator_P_DropTargetHeight" xml:space="preserve">
    <value>Height of the drop target.</value>
  </data>
  <data name="LD_DropIndicator_P_DropTargetWidth" xml:space="preserve">
    <value>Width of the drop target.</value>
  </data>
  <data name="LD_DropIndicator_P_Orientation" xml:space="preserve">
    <value>Drop indicator orientation.</value>
  </data>
  <data name="LD_ReportBase_P_PageContentTemplate" xml:space="preserve">
    <value>The template used to display the content of ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportBase_P_PageContentTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the content in the ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportBase_P_PageFooter" xml:space="preserve">
    <value>Gets or sets the content of the footer used inside the ReportPagePresenter element.</value>
  </data>
  <data name="LD_ReportBase_P_PageFooterTemplate" xml:space="preserve">
    <value>The template used to display the footer content of ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportBase_P_PageFooterTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the footer in the ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportBase_P_PageHeader" xml:space="preserve">
    <value>Gets or sets the content of the header used inside the ReportPagePresenter element.</value>
  </data>
  <data name="LD_ReportBase_P_PageHeaderTemplate" xml:space="preserve">
    <value>The template used to display the header content of ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportBase_P_PageHeaderTemplateSelector" xml:space="preserve">
    <value>A DataTemplateSelector that can be used to provide custom logic for choosing the template for the header in the ReportPagePresenter control.</value>
  </data>
  <data name="LD_ReportBase_P_PagePresenterStyle" xml:space="preserve">
    <value>Gets or sets the style for the ReportPagePresenter.</value>
  </data>
  <data name="LD_ReportBase_P_ReportSettings" xml:space="preserve">
    <value>Gets the settings for the Report.</value>
  </data>
  <data name="LD_SynchronizedSizeDecorator_P_SynchronizeHeight" xml:space="preserve">
    <value>Returns or sets a boolean indicating if the height should be synchronized with the Target.</value>
  </data>
  <data name="LD_SynchronizedSizeDecorator_P_SynchronizeWidth" xml:space="preserve">
    <value>Returns or sets a boolean indicating if the width should be synchronized with the Target.</value>
  </data>
  <data name="LD_SynchronizedSizeDecorator_P_Target" xml:space="preserve">
    <value>Returns or sets the other SynchronizedSizeDecorator whose extent is to be synchronized.</value>
  </data>
  <data name="LD_ComparisonOperatorListItem_P_Image" xml:space="preserve">
    <value>Gets or sets the Image used to represent the operator</value>
  </data>
  <data name="LD_ComparisonOperatorListItem_P_Description" xml:space="preserve">
    <value>Gets a the description of the operator that can be used for display (read-only).</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_AllowableOperators" xml:space="preserve">
    <value>Gets or sets a flagged enumeration that defines which operators are allowed.</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_DropDownButtonStyle" xml:space="preserve">
    <value>Gets or sets the style used for the ToggleButton used inside the template`</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_IsDropDownOpen" xml:space="preserve">
    <value>Gets or sets whether the list of operators is dropped down</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_SelectedIndex" xml:space="preserve">
    <value>Gets or sets the zwero-based index of the selected item</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_SelectedOperator" xml:space="preserve">
    <value>Gets or sets the selected operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_SelectedOperatorInfo" xml:space="preserve">
    <value>Returns an object that exposes information about the selected operator (read-only).</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorEqualsImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'Equals' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorNotEqualsImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'NotEquals' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorLessThanImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'LessThan' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorLessThanOrEqualToImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'LessThanOrEqualTo' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorGreaterThanImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'GreaterThan' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorGreaterThanOrEqualToImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'GreaterThanOrEqualTo' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorContainsImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'Contains' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorDoesNotContainImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'DoesNotContain' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorLikeImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'Like' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorNotLikeImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'NotLike' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorMatchImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'Match' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorDoesNotMatchImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'DoesNotMatch' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorStartsWithImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'StartsWith' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorDoesNotStartWithImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'DoesNotStartWith' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorEndsWithImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'EndsWith' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorDoesNotEndWithImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'DoesNotEndWith' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorTopImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'Top' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorBottomImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'Bottom' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorTopPercentileImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'TopPercentile' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_P_OperatorBottomPercentileImage" xml:space="preserve">
    <value>Gets or sets the ImageSource used to represent the 'BottomPercentile' operator</value>
  </data>
  <data name="LD_ComparisonOperatorSelector_E_SelectedOperatorChanged" xml:space="preserve">
    <value>Occurs when property 'SelectedOperator' changes</value>
  </data>
  <data name="LD_GridBagConstraint_P_Column" xml:space="preserve">
    <value>Determines the column of the logical cell that will be starting point of the item.</value>
  </data>
  <data name="LD_GridBagConstraint_P_ColumnSpan" xml:space="preserve">
    <value>Determine the number of columns that the item will span.</value>
  </data>
  <data name="LD_GridBagConstraint_P_ColumnWeight" xml:space="preserve">
    <value>Determines how extra horizontal space above the preferred size is distributed. This value is relative to the ColumnWeight of items in other logical columns.</value>
  </data>
  <data name="LD_GridBagConstraint_P_Margin" xml:space="preserve">
    <value>Determines the amount of padding around the item.</value>
  </data>
  <data name="LD_GridBagConstraint_P_Row" xml:space="preserve">
    <value>Determines the row of the logical cell that will be starting point of the item.</value>
  </data>
  <data name="LD_GridBagConstraint_P_RowSpan" xml:space="preserve">
    <value>Determine the number of rows that the item will span.</value>
  </data>
  <data name="LD_GridBagConstraint_P_RowWeight" xml:space="preserve">
    <value>Determines how extra vertical space above the preferred size is distributed. This value is relative to the RowWeight of items in other logical rows.</value>
  </data>
  <data name="LD_ExpanderDecorator_P_IsExpanded" xml:space="preserve">
    <value>Returns/sets whether the ExpanderDecorator is expanded.</value>
  </data>
  <data name="LD_ExpanderDecorator_P_Orientation" xml:space="preserve">
    <value>Returns/sets the dimension in which the expanding and collapsing of the Child content occurs.</value>
  </data>
  <data name="LD_DesiredSizeDecorator_P_ChildDesiredHeight" xml:space="preserve">
    <value>Returns the desired height of the child.</value>
  </data>
  <data name="LD_DesiredSizeDecorator_P_ChildDesiredWidth" xml:space="preserve">
    <value>Returns the desired width of the child.</value>
  </data>
  <data name="LD_ExpansionIndicator_P_ToggleMode" xml:space="preserve">
    <value>Returns or sets whether the 'IsChecked' state will be toggle automatically when clicked or only programatically</value>
  </data>
  <data name="AddTabItemEx_ContextMenuDescription" xml:space="preserve">
    <value>Add TabItemEx</value>
  </data>
  <data name="TabItemEx_DefaultHeader" xml:space="preserve">
    <value>tabItemEx{0}</value>
  </data>
	<data name="LD_ToolWindow_P_AllowsTransparency" xml:space="preserve">
    <value>Returns/sets a boolean indicating if AllowsTransparency of the hosting Popup or Window should be true.</value>
  </data>
	<data name="LST_SmartTagFramework_GenericAdorner_btnCloseToolTip" xml:space="preserve">
    <value>Close the SmartTag</value>
    <comment>Button ToolTip</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericAdorner_btnCloseText" xml:space="preserve">
    <value>Close</value>
    <comment>Button Text</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericAdorner_lblTitleContent" xml:space="preserve">
    <value>Tasks</value>
    <comment>Label Content</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericContextMenuProvider_GetCustomActionListMSG" xml:space="preserve">
    <value>A null DesignerActionList type was returned for control class: {0}!</value>
    <comment>MessageBox text</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericValueConverter_ConvertBackMSG" xml:space="preserve">
    <value>There is not a default converter from String to {0}</value>
    <comment>MessageBox text</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_lblTitleContent" xml:space="preserve">
    <value>Select an Image Source</value>
    <comment>Label Content</comment>
  </data>
	<data name="LST_SmartTagFramework_SmartButtonAdorner_tbtnSmartToolTip" xml:space="preserve">
    <value>Open the SmartTag</value>
    <comment>ToggleButton ToolTip</comment>
  </data>
	<data name="LST_SmartTagFramework_TreeItemDirectoryTemplate_lblTreeItemDescriptionContent" xml:space="preserve">
    <value>Folder</value>
    <comment>Label Content</comment>
  </data>
	<data name="LST_SmartTagFramework_TreeItemDirectoryTemplate_spTreeItemDirectoryTemplateToolTip" xml:space="preserve">
    <value>Click to select an image source</value>
    <comment>StackPanel ToolTip</comment>
  </data>
	<data name="LST_SmartTagFramework_TreeItemFileTemplate_lblTreeItemDescriptionContent" xml:space="preserve">
    <value>image</value>
    <comment>Label Content</comment>
  </data>
	<data name="LST_SmartTagFramework_DesignerActionObjectPropertyItemTemplate_btnToolTip" xml:space="preserve">
    <value>Drill into this property</value>
    <comment>ToolTip on Button in the Object Property Temp Template that lets the user 'drill into' a property</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericAdorner_btnBackText" xml:space="preserve">
    <value>Back</value>
    <comment>Text on the 'Back' Button in the main header of the SmartTag</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericAdorner_btnBackToolTip" xml:space="preserve">
    <value>Back to Previous Page</value>
    <comment>ToolTip on the 'Back' Button in the main header of the SmartTag</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_NoResourcesFound" xml:space="preserve">
    <value>[No Image resources found in project]</value>
    <comment>Message displayed in the ImageSourceEditor dropdown when no image resources exist in the project</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_ImageResourcesDefinedInProject" xml:space="preserve">
    <value>Image Resources Defined in this Project</value>
    <comment>Description displayed in the ImageSourceEditor dropdown above the list of resources</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_T_ImageResourcesNotAvailable" xml:space="preserve">
    <value>Image Resources Not Available</value>
    <comment>Title of message box displayed when the dropdown button of the ImageSource editor is clicked and the IDE does not support the retrieval of a resource list</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_M_ImageResourcesNotAvailable" xml:space="preserve">
    <value>The current IDE does not support the retrieval of the list of Image Resources defined in the project.  Please use the IDE's Property Window to set this property.</value>
    <comment>Body of message box displayed when the dropdown button of the ImageSource editor is clicked and the IDE does not support the retrieval of a resource list</comment>
  </data>
	<data name="LST_SmartTagFramework_SmartButtonAdorner_btnZoomIn" xml:space="preserve">
    <value>Make SmartTag Larger</value>
    <comment>ToolTip on the zoom-in button within the SmartButtonAdorner</comment>
  </data>
	<data name="LST_SmartTagFramework_SmartButtonAdorner_btnZoomOut" xml:space="preserve">
    <value>Make SmartTag Smaller</value>
    <comment>ToolTip on the zoom-out button within the SmartButtonAdorner</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_btnResetText" xml:space="preserve">
    <value>Reset</value>
    <comment>Text on the Reset button within the ImageSource editor</comment>
  </data>
	<data name="LST_SmartTagFramework_ImageSourceEditor_btnResetToolTip" xml:space="preserve">
    <value>Reset Image</value>
    <comment>ToolTip on the Reset button within the ImageSource editor</comment>
  </data>
	<data name="LST_SmartTagFramework_GenericAdorner_DragToolTip" xml:space="preserve">
    <value>Click and drag to move the SmartTag window.</value>
    <comment>ToolTip displayed when the mouse is over the header area of the SmartTag window</comment>
  </data>
  <data name="LD_ToolWindow_P_AllowMinimize" xml:space="preserve">
    <value>Returns or sets a value indicating whether the ToolWindow supports being minimized.</value>
  </data>
  <data name="LD_ToolWindow_P_AllowMaximize" xml:space="preserve">
    <value>Returns or sets a value indicating whether the ToolWindow supports being maximized.</value>
  </data>
  <data name="LD_ToolWindow_P_MaximizeButtonVisibility" xml:space="preserve">
    <value>Returns or sets a value indicating if the maximize button should be displayed in the template.</value>
  </data>
  <data name="LD_ToolWindow_P_MinimizeButtonVisibility" xml:space="preserve">
    <value>Returns or sets a value indicating if the minimize button should be displayed in the template.</value>
  </data>
  <data name="LD_ToolWindow_P_ShowInTaskbar" xml:space="preserve">
    <value>Returns or sets a value indicating whether the ToolWindow will be displayed in the taskbar when hosted in a WPF Window.</value>
  </data>
  <data name="LD_ToolWindow_P_WindowStartupLocation" xml:space="preserve">
    <value>Returns or sets a value indicating how the window should be displayed when initially displayed.</value>
  </data>
  <data name="LD_ToolWindow_P_WindowState" xml:space="preserve">
    <value>Returns/sets the current state of the window.</value>
  </data>
  <data name="LD_ToolWindow_P_IsOwnedWindow" xml:space="preserve">
    <value>Returns or sets a value indicating whether the ToolWindow will be hosted in an owned window when displayed within a WPF Window.</value>
  </data>
  <data name="XamCarouselPanelAssetLibrary">
    <value>Infragistics</value>
  </data>
	<data name="XamCarouselListBoxAssetLibrary">
		<value>Infragistics</value>
	</data>
	<data name="XamTabControlAssetLibrary">
		<value>Infragistics</value>
	</data>
</root>
