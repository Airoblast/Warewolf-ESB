<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="LC_OutlookBar Properties" xml:space="preserve">
    <value>OutlookBar Properties</value>
  </data>
	<data name="LD_XamOutlookBar" xml:space="preserve">
    <value>The XamOutlookBar is a WPF Component that provides the UI and functionality of the navigation bar in MS Outlook.</value>
  </data>
	<data name="LD_XamOutlookBar_P_AllowMinimized" xml:space="preserve">
    <value>Returns/sets the possibility of the XamOutlookBar to be minimized</value>
  </data>
  <data name="LD_XamOutlookBar_P_ContextMenuGroups" xml:space="preserve">
    <value>Returns a read only collection of OutlookBarGroup items in the overflow context menu of XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_ExpandStoryboard" xml:space="preserve">
    <value>Returns/set the Storyboard that XamOutlookBar plays when it goes to the expanded state.</value>
  </data>
  <data name="LD_XamOutlookBar_P_Groups" xml:space="preserve">
    <value>Returns a modifiable collection of OutlookBarGroup items</value>
  </data>
  <data name="LD_XamOutlookBar_P_GroupsSource" xml:space="preserve">
    <value>Gets or sets a collection used to generate the content of the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_IsMinimized" xml:space="preserve">
    <value>Returns/sets whether the XamOutlokBar is in minimized state</value>
  </data>
  <data name="LD_XamOutlookBar_P_IsVerticalSplitterVisible" xml:space="preserve">
    <value>Returns/sets a value indicating whether the vertical splitter is visible in the user interface</value>
  </data>
  <data name="LD_XamOutlookBar_P_MinimizedStateThreshold" xml:space="preserve">
    <value>Returns/sets the number of pixels over the minimized size where the controls snaps to its minimized state.</value>
  </data>
  <data name="LD_XamOutlookBar_P_MinimizedWidth" xml:space="preserve">
    <value>Returns/set the width of XamOutlookBar in minimized state</value>
  </data>
  <data name="LD_XamOutlookBar_P_MinimizeStoryboard" xml:space="preserve">
    <value>Returns/set the Storyboard that XamOutlookBar plays when it goes to the minimized state</value>
  </data>
  <data name="LD_XamOutlookBar_P_NavigationAreaGroups" xml:space="preserve">
    <value>Returns a readonly collection of OutlookBarGroup items in the navigation area of the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_NavigationAreaMaxGroups" xml:space="preserve">
    <value>Returns/set desired number of groups in the navigation area of the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_NavigationPaneOptionsControlStyle" xml:space="preserve">
    <value>Returns/set the style of NavigationPaneOptionsControl</value>
  </data>
  <data name="LD_XamOutlookBar_P_OverflowAreaGroups" xml:space="preserve">
    <value>Returns a readonly collection of OutlookBarGroup items in the XamOutlookBar overflow area</value>
  </data>
  <data name="LD_XamOutlookBar_P_ReserveSpaceForLargeImage" xml:space="preserve">
    <value>Returns/sets whether there should be a reserved space for LargeImage of the OutlookBarGroup in the navigation area</value>
  </data>
  <data name="LD_XamOutlookBar_P_SelectedAreaMinHeight" xml:space="preserve">
    <value>Returns/sets the The minimum height of the selected group area, in device-independent units.</value>
  </data>
  <data name="LD_XamOutlookBar_P_SelectedGroup" xml:space="preserve">
    <value>Returns/sets the currently selected group in the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_ShowGroupHeaderAsToolTip" xml:space="preserve">
    <value>Returns/sets the possibility to show OutlookBarGroup header in the overflow area as ToolTip.</value>
  </data>
  <data name="LD_XamOutlookBar_P_ShowToolTips" xml:space="preserve">
    <value>Returns/sets the possibility of the tooltip appearance for the group in the overflow area</value>
  </data>
  <data name="LD_XamOutlookBar_P_Theme" xml:space="preserve">
    <value>Gets/sets the general look of the XamOutlookBar and its elements.</value>
  </data>
  <data name="LD_XamOutlookBar_P_VerticalSplitterLocation" xml:space="preserve">
    <value>Specifies location of vertical splitter of the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_VerticalSplitterResizeMode" xml:space="preserve">
    <value>Returns/sets the VerticalSplitterResizeMode of the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_P_VerticalSplitterWidth" xml:space="preserve">
    <value>Returns/sets the width of vertical splitter</value>
  </data>
  <data name="LD_XamOutlookBar_E_ExecutingCommand" xml:space="preserve">
    <value>Occurs before a command is performed</value>
  </data>
  <data name="LD_XamOutlookBar_E_ExecutedCommand" xml:space="preserve">
    <value>Occurs after a command is performed</value>
  </data>
  <data name="LD_XamOutlookBar_E_GroupsReset" xml:space="preserve">
    <value>Occurs after reseting the visibility and the order of the groups in their initial state by the NavigationPaneOptionsControl</value>
  </data>
  <data name="LD_XamOutlookBar_E_NavigationPaneExpanding" xml:space="preserve">
    <value>Raises before completing the XamOutlookBar restoration to normal (not minimized) state</value>
  </data>
  <data name="LD_XamOutlookBar_E_NavigationPaneExpanded" xml:space="preserve">
    <value>Raises after completing the XamOutlookBar expansion</value>
  </data>
  <data name="LD_XamOutlookBar_E_NavigationPaneMinimizing" xml:space="preserve">
    <value>Raises before completing the XamOutlookBar minimization </value>
  </data>
  <data name="LD_XamOutlookBar_E_NavigationPaneMinimized" xml:space="preserve">
    <value>Occurs after XamOutlookBar has been minimized</value>
  </data>
  <data name="LD_XamOutlookBar_E_SelectedGroupChanging" xml:space="preserve">
    <value>Raises before completing the change of the SelectedGroup in the XamOutlookBar</value>
  </data>
  <data name="LD_XamOutlookBar_E_SelectedGroupChanged" xml:space="preserve">
    <value>Occurs after SelectedGroup has been changed</value>
  </data>
  <data name="LD_XamOutlookBar_E_SelectedGroupPopupClosed" xml:space="preserve">
    <value>Occurs when the IsMinimized property of the XamOutlookBar is true and the popup for the SelectedGroup has closed up.</value>
  </data>
  <data name="LD_XamOutlookBar_E_SelectedGroupPopupOpened" xml:space="preserve">
    <value>Occurs when the IsMinimized property of the XamOutlookBar is true and the popup for the SelectedGroup has been opened.</value>
  </data>
  <data name="LD_XamOutlookBar_E_SelectedGroupPopupOpening" xml:space="preserve">
    <value>Occurs when the popup is about to be displayed to the end user.</value>
  </data>
  <data name="LD_XamOutlookBar_E_ThemeChanged" xml:space="preserve">
    <value>Occurs when the 'Theme' property has been changed.</value>
  </data>
  <data name="LD_OutlookBarGroup_P_HasLargeImage" xml:space="preserve">
    <value>Returns whether the OutlookBarGroup has a large image (read only).</value>
  </data>
  <data name="LD_OutlookBarGroup_P_IsSelected" xml:space="preserve">
    <value>Returns/sets a value that indicates if the OutlookBarGroup is selected. This is a dependency property.</value>
  </data>
  <data name="LD_OutlookBarGroup_P_IsMouseOverGroup" xml:space="preserve">
    <value>Returns a value indicating whether the mouse pointer is located over the OutlookBarGroup (read only).</value>
  </data>
  <data name="LD_OutlookBarGroup_P_Key" xml:space="preserve">
    <value>Returns/set a key associated with this OutlookBarGroup.  Though not required, if specified this key can be used to access the OutlookBarGroup in the XamOutlookBar.Groups collection.</value>
  </data>
  <data name="LD_OutlookBarGroup_P_Location" xml:space="preserve">
    <value>Returns the location of the group (read only). This is a dependency property.</value>
  </data>
  <data name="LD_OutlookBarGroup_P_LargeImage" xml:space="preserve">
    <value>Returns/sets the ImageSource for OutlookBarGroup's LargeImage.</value>
  </data>
  <data name="LD_OutlookBarGroup_P_OutlookBar" xml:space="preserve">
    <value>Returns XamOutlookBar that contains the OutlookBarGroup (read only).</value>
  </data>
  <data name="LD_OutlookBarGroup_P_SmallImage" xml:space="preserve">
    <value>Returns/sets the ImageSource for OutlookBarGroup's SmallImage.</value>
  </data>
  <data name="LD_OutlookBarGroup_P_SmallImageResolved" xml:space="preserve">
    <value>Returns the SmallImage if it has been set, otherwise returns a default small image for the OutlookBarGroup (read only).</value>
  </data>
  <data name="LD_GroupsPresenter_P_Orientation" xml:space="preserve">
    <value>Returns/Sets orientation of GroupsPresenter control</value>
  </data>
	<data name="XamOutlookBarAssetLibrary">
		<value>Infragistics</value>
	</data>
</root>