<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Error_UCErrorCode_Div">
		<value>0（ゼロ）で割りました</value>
	</data>
	<data name="Error_UCErrorCode_Fail">
		<value>失敗</value>
	</data>
	<data name="Error_UCErrorCode_NA">
		<value>適用できません</value>
	</data>
	<data name="Error_UCErrorCode_Null">
		<value>Null値</value>
	</data>
	<data name="Error_UCErrorCode_Num">
		<value>関数または数式中の無効な値</value>
	</data>
	<data name="Error_UCErrorCode_Ok">
		<value>成功</value>
	</data>
	<data name="Error_UCErrorCode_Reference">
		<value>無効または利用できない参照</value>
	</data>
	<data name="Error_UCErrorCode_Unknown">
		<value>無効なコード</value>
	</data>
	<data name="Error_UCErrorCode_Value">
		<value>不正な引数またはオペランド</value>
	</data>
	<data name="Error_NullOperand">
		<value>Null オペランド</value>
	</data>
	<data name="Error_InvalidOperand">
		<value>無効なオペランド</value>
	</data>
	<data name="Error_InvalidReference">
		<value>無効または利用できない参照</value>
	</data>
	<data name="Error_AnchoredReference">
		<value>非固定参照として {0} へアクセスしてください。</value>
	</data>
	<data name="Error_ReferenceNotEumerable">
		<value>{0}は計算可能な参照ではありません。</value>
	</data>
	<data name="Error_UnexpectedScope">
		<value>{0} - 特定できない範囲 {1}</value>
	</data>
	<data name="Error_ExplicitThis">
		<value>{0} - 明示的にサポートされていません。</value>
	</data>
	<data name="Error_ScopeAllNotLast">
		<value>{0} - Scope.All は最後のエレメント {1} で指定する必要があります。</value>
	</data>
	<data name="Error_UnknownRefType">
		<value>{0} - 未定義 参照タイプ  {1}</value>
	</data>
	<data name="Error_UnknownScope">
		<value>{0} - 未定義範囲  {1}</value>
	</data>
	<data name="Error_ReadOnlyReference">
		<value>{0} - 読み出し専用の参照で値を設定しようとしました。</value>
	</data>
	<data name="Error_FormulaNotSupported">
		<value>{0} - 数式をサポートしない参照中の数式にアクセスしました。</value>
	</data>
	<data name="Error_RefMalformed">
		<value>{0} - 参照が異常です  {1}</value>
	</data>
	<data name="Error_ExternalRange">
		<value>範囲は外部参照を含んでいます。</value>
	</data>
	<data name="Error_UnknownRange">
		<value>未定義範囲のタイプ</value>
	</data>
	<data name="Error_RangeFromLast">
		<value>fromT.Last が設定されていません。</value>
	</data>
	<data name="Error_RangeLast">
		<value>参照範囲 Validate: 最後のタプル [{0}] != [{1}]</value>
	</data>
	<data name="Error_RangeFromNull">
		<value>参照範囲: 開始がありません。</value>
	</data>
	<data name="Error_RangeToNull">
		<value>参照範囲: 終了がありません。</value>
	</data>
	<data name="Error_RangeFromRefBase">
		<value>参照範囲: 開始が参照ベースではありません。 {0}</value>
	</data>
	<data name="Error_RangeToRefBase">
		<value>参照範囲: 終了は参照ベースではありません。 {0}</value>
	</data>
	<data name="Error_RangeTuple">
		<value>参照範囲 Validate: タプル [{0}] !=  [{1}]</value>
	</data>
	<data name="Error_RangeNormalizeScope">
		<value>参照範囲 Normalize: 不正な範囲 [{0}/{1}]</value>
	</data>
	<data name="Error_RangeValidateCount">
		<value>参照範囲 Validate: 開始 {0} の個数 != 終了 {1} の個数</value>
	</data>
	<data name="Error_MethodNotSupported">
		<value>{0}は{1}をサポートしません。</value>
	</data>
	<data name="Error_NoCurrentRangeElement">
		<value>現在の範囲要素はありません。</value>
	</data>
	<data name="Error_RP_ContainsBase">
		<value>RefParser.Contains - ベースが空です。</value>
	</data>
	<data name="Error_RP_ContainsTarget">
		<value>RefParser.Contains - ターゲットが空です。</value>
	</data>
	<data name="Error_RP_MalformedExtra">
		<value>RefParser 不正参照: [{1}] で [{0}] の重複があります。</value>
	</data>
	<data name="Error_RP_MalformedUnexpected">
		<value>RefParser 不正参照: [{1}] で 予期しない [{0}] があります。</value>
	</data>
	<data name="Error_RP_MergeRelativeBase">
		<value>RefParser.Merge: ベースが相対的です。</value>
	</data>
	<data name="Error_RT_Expected">
		<value>RefTuple: [{1}] では [{0}] が予測されます。</value>
	</data>
	<data name="Error_RT_NullRefName">
		<value>RefTuple: null RefName</value>
	</data>
	<data name="Error_RT_Unexpected">
		<value>RefTuple: [{1}] に予測しない [{0}]。</value>
	</data>
	<data name="Value_UCErrorCode_Div">
		<value>#DIV/0!</value>
	</data>
	<data name="Value_UCErrorCode_Fail">
		<value>#FAIL</value>
	</data>
	<data name="Value_UCErrorCode_NA">
		<value>#N/A</value>
	</data>
	<data name="Value_UCErrorCode_Null">
		<value>#NULL!</value>
	</data>
	<data name="Value_UCErrorCode_Num">
		<value>#NUM!</value>
	</data>
	<data name="Value_UCErrorCode_Ok">
		<value>#OK</value>
	</data>
	<data name="Value_UCErrorCode_Reference">
		<value>#REF!</value>
	</data>
	<data name="Value_UCErrorCode_Unknown">
		<value>#N/A</value>
	</data>
	<data name="Value_UCErrorCode_Value">
		<value>#VALUE!</value>
	</data>
	<data name="Error_RT_InvalidTuple_UnescapedCharacter">
		<value>位置{2}の{1}の中で文字 {0} が見つかりました。</value>
	</data>
	<data name="Error_RT_InvalidTuple_NamePortionEmpty">
		<value>不正な要素 {0}。 エレメント名部分が空です。</value>
	</data>
	<data name="Error_RT_InvalidTuple_CharactersAfterScopeEnd">
		<value>不正な要素 {0}。 スコープの末尾で文字が見つかりました。</value>
	</data>
	<data name="Error_RT_InvalidTuple_MissingEndQuotes">
		<value>不正な要素 {0}。 終了引用符がありません。</value>
	</data>
	<data name="Error_RT_InvalidTuple_MissingCloseParenthesis">
		<value>不正な要素 {0}。 括弧が閉じられていません。</value>
	</data>
	<data name="Error_RT_InvalidTuple_ScopeIndexLarge">
		<value>不正な要素 {0}。 インデックス {1} が無効: {2}。</value>
	</data>
	<data name="Error_RP_EmptyElement">
		<value>不正な参照 {0}。 位置 {1} で空の要素が見つかりました。</value>
	</data>
	<data name="Error_RP_EmptyReference">
		<value>不正な参照 {0}。 参照は空です。</value>
	</data>
	<data name="Error_RP_MissingEndQuotes">
		<value>不正な参照 {0}。 終了引用符がありません。</value>
	</data>
	<data name="Error_RP_MissingCloseParenthesis">
		<value>不正な参照 {0}。 括弧が閉じられていません。</value>
	</data>
	<data name="Error_RT_InvalidScope">
		<value>無効な範囲: {0}.</value>
	</data>
	<data name="Error_RT_InvalidScope_CharactersAfterClosingQuotes">
		<value>位置{1}で{0}範囲のダブルクォーテーションを閉じた後に文字が見つかりました。</value>
	</data>
	<data name="Error_UCErrorCode_Name">
		<value>無効な名前</value>
	</data>
	<data name="Value_UCErrorCode_Name">
		<value>#NAME?</value>
	</data>
</root>