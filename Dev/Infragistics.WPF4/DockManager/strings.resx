<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="PinButtonToolTip">
		<value>Auto Hide</value>
	</data>
	<data name="CloseButtonToolTip">
		<value>Close</value>
	</data>
	<data name="PositionMenuToolTip">
		<value>Window Position</value>
	</data>
	<data name="DocumentFilesMenuToolTip">
		<value>Active Files</value>
	</data>
	<data name="DocumentShowNavigatorToolTip">
		<value>Show Pane Navigator</value>
	</data>
	<data name="HidePaneMenuItem">
		<value>Hide</value>
	</data>
	<data name="PinPaneMenuItem">
		<value>Auto Hide</value>
	</data>
	<data name="FloatingPaneMenuItem">
		<value>Floating</value>
	</data>
	<data name="DockablePaneMenuItem">
		<value>Dockable</value>
	</data>
	<data name="DocumentPaneMenuItem">
		<value>Tabbed Document</value>
	</data>
	<data name="ClosePaneMenuItem">
		<value>Close</value>
	</data>
	<data name="CloseAllButThisPaneMenuItem">
		<value>Close All But This</value>
	</data>
	<data name="MoveToNewHorizontalGroupPaneMenuItem">
		<value>New Horizontal Tab Group</value>
	</data>
	<data name="MoveToNewVerticalGroupPaneMenuItem">
		<value>New Vertical Tab Group</value>
	</data>
	<data name="MoveToNextGroupPaneMenuItem">
		<value>Move To Next Tab Group</value>
	</data>
	<data name="MoveToPreviousGroupPaneMenuItem">
		<value>Move To Previous Tab Group</value>
	</data>
	<data name="LE_InvalidDocumentContentHostChild">
		<value>Only SplitPane instances can be added to the 'DocumentContentHost'.</value>
	</data>
	<data name="LE_InvalidNewTabGroupActionPane">
		<value>The specified pane is already within a 'TabGroupPane'.</value>
	</data>
	<data name="LE_LoadLayoutInProgress">
		<value>Cannot load a layout while a layout is being loaded.</value>
	</data>
	<data name="LE_LoadLayoutInvalidRootElement">
		<value>Invalid layout file - root element must be '{0}'.</value>
	</data>
	<data name="LE_LoadLayoutInvalidPaneLocation">
		<value>Invalid pane location for ContentPane '{0}'.</value>
	</data>
	<data name="LE_LoadLayoutNoDocumentContentHost">
		<value>The ContentPane '{0}' is supposed to be positioned within the DocumentContentHost but the XamDockManager does not have a DocumentContentHost.</value>
	</data>
	<data name="LE_LoadLayoutPanePositionNotFound">
		<value>The ContentPane '{0}' is supposed to be positioned as '{1}' but information for that position was not in the layout.</value>
	</data>
	<data name="LE_SaveLayoutPaneNameMissing">
		<value>All panes being serialized must have a specific unique name.</value>
	</data>
	<data name="LE_InvalidDocumentSplitPaneChild">
		<value>A SplitPane within the 'DocumentContentHost' can only contain 'TabGroupPane' and 'SplitPane' instances.</value>
	</data>
	<data name="LE_InvalidSplitPaneChild">
		<value>Invalid element type. Only 'ContentPane', 'TabGroupPane', 'ContentPanePlaceholder' and 'SplitPane' instances can be added to the collection.</value>
	</data>
	<data name="LE_InvalidTabGroupPaneChild">
		<value>A TabGroupPane can only contain 'ContentPane' and 'ContentPanePlaceholder' instances. If this occurs at design time it may be because the designer added 1 or more TabItem instances by default. To work around that issue, switch to the XAML view and remove the TabItems that were added and then return to the design surface.</value>
	</data>
	<data name="LE_InvalidUnpinnedTabAreaChild">
		<value>A TabGroupPane can only contain 'ContentPane' instances.</value>
	</data>
	<data name="LE_ElementNotInDockManager">
		<value>The specified element must be within a 'XamDockManager'.</value>
	</data>
	<data name="LE_InvalidRootDragElement">
		<value>An invalid root element has been specified. The element must be a pane container such as a TabGroupPane or SplitPane.</value>
	</data>
	<data name="LE_InvalidAddToGroupElement">
		<value>The group must be a 'SplitPane' or 'TabGroupPane'.</value>
	</data>
	<data name="LE_InvalidNewSplitPaneElement">
		<value>The pane must be a 'TabGroupPane' or 'ContentPane' instance.</value>
	</data>
	<data name="LE_LoadLayoutUndefinedContentPane">
		<value>Layout contains a reference to a ContentPane with name '{0}' that isn't defined in the ContentPanes section of the layout file.</value>
	</data>
	<data name="LE_LoadLayoutMissingName">
		<value>ContentPane must include Name attribute.</value>
	</data>
	<data name="LE_InvalidPaneToolWindowContent">
		<value>PaneToolWindow Content can only contain a SplitPane.</value>
	</data>
	<data name="LE_CannotChangeInitialLocation">
		<value>The 'InitialLocation' cannot be changed once a SplitPane is associated with a 'XamDockManager'.</value>
	</data>
	<data name="LE_InvalidateNavigatorSelectedPane">
		<value>The specified pane does not exist with the 'AllPanes' collection.</value>
	</data>
	<!-- AS 7/7/08 BR34620 -->
	<data name="PaneNavigatorActiveToolWindowsLabel">
		<value>Active Tool Windows</value>
	</data>
	<data name="PaneNavigatorActiveFilesLabel">
		<value>Active Files</value>
	</data>
  <data name="LE_CannotPerformAutomationOperation" xml:space="preserve">
    <value>Operation cannot be performed.</value>
  </data>
  <!-- AS 10/17/08 TFS8130 -->
	<data name="LE_NewPaneCannotHaveParent">
		<value>The NewPane for the InitializePaneContent event cannot have a logical or visual parent.</value>
	</data>
  <!-- AS 10/17/08 TFS8130 -->
  <data name="LE_PaneAlreadyReferencedInLayout">
    <value>The ContentPane '{0}' has already been referenced in the loaded layout. This would happen if you provided an existing pane in the InitializePaneContent event.</value>
  </data>
  <data name="LE_MultipleContainersWithSameName">
    <value>There are multiple '{0}' instances defined with a name of '{1}'.</value>
  </data>
  <data name="LE_CannotNestContentPanes">
    <value>ContentPane '{0}' cannot be nested within another ContentPane ('{1}').</value>
  </data>
  <data name="LE_InitialLocationForSplitOnly">
    <value>The 'InitialLocation' property is only intended for SplitPane instances in the Panes collection of the XamDockManager.</value>
  </data>
  <data name="LE_NeedDocumentContentHost">
    <value>The 'Content' property must be set to a 'DocumentContentHost'.</value>
  </data>
  <data name="PaneHeaderContentValidationError">
    <value>[Error: The Header of the ContentPane is set to an element. The Header is used as the default TabHeader and in the PaneNavigator. An element cannot be shown in multiple locations. Set the HeaderTemplate to the element that should be displayed in the pane caption and navigator and set the TabHeader or TabHeaderTemplate as needed.]</value>
  </data>
</root>