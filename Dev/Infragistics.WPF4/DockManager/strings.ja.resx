<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PinButtonToolTip" xml:space="preserve">
    <value>自動的に隠す</value>
  </data>
  <data name="CloseButtonToolTip" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="PositionMenuToolTip" xml:space="preserve">
    <value>ウィンドウの配置</value>
  </data>
  <data name="DocumentFilesMenuToolTip" xml:space="preserve">
    <value>アクティブなファイル</value>
  </data>
  <data name="DocumentShowNavigatorToolTip" xml:space="preserve">
    <value>ペイン ナビゲータを表示</value>
  </data>
  <data name="HidePaneMenuItem" xml:space="preserve">
    <value>非表示</value>
  </data>
  <data name="PinPaneMenuItem" xml:space="preserve">
    <value>自動的に隠す</value>
  </data>
  <data name="FloatingPaneMenuItem" xml:space="preserve">
    <value>フローティング</value>
  </data>
  <data name="DockablePaneMenuItem" xml:space="preserve">
    <value>ドッキング可能</value>
  </data>
  <data name="DocumentPaneMenuItem" xml:space="preserve">
    <value>タブ付きドキュメント</value>
  </data>
  <data name="ClosePaneMenuItem" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="CloseAllButThisPaneMenuItem" xml:space="preserve">
    <value>これ以外すべて閉じる</value>
  </data>
  <data name="MoveToNewHorizontalGroupPaneMenuItem" xml:space="preserve">
    <value>新規水平タブグループ</value>
  </data>
  <data name="MoveToNewVerticalGroupPaneMenuItem" xml:space="preserve">
    <value>新しい垂直タブグループ</value>
  </data>
  <data name="MoveToNextGroupPaneMenuItem" xml:space="preserve">
    <value>次のタブ グループへ移動</value>
  </data>
  <data name="MoveToPreviousGroupPaneMenuItem" xml:space="preserve">
    <value>前のタブグループへ移動</value>
  </data>
  <data name="LE_InvalidDocumentContentHostChild" xml:space="preserve">
    <value>'DocumentContentHost' に追加できるのは SplitPane インスタンスだけです。</value>
  </data>
  <data name="LE_InvalidNewTabGroupActionPane" xml:space="preserve">
    <value>指定したペインは、'TabGroupPane' 内にすでに存在します。</value>
  </data>
  <data name="LE_LoadLayoutInProgress" xml:space="preserve">
    <value>レイアウトが読み込まれている間はレイアウトを読み込めません。</value>
  </data>
  <data name="LE_LoadLayoutInvalidRootElement" xml:space="preserve">
    <value>無効なレイアウトファイル - ルート エレメントは '{0}' である必要があります。</value>
  </data>
  <data name="LE_LoadLayoutInvalidPaneLocation" xml:space="preserve">
    <value>ContentPane '{0}' のペインの配置が無効です。</value>
  </data>
  <data name="LE_LoadLayoutNoDocumentContentHost" xml:space="preserve">
    <value>ContentPane '{0}' は、DocumentContentHost 内に配置される必要がありますが、XamDockManager に DocumentContentHost がありません。</value>
  </data>
  <data name="LE_LoadLayoutPanePositionNotFound" xml:space="preserve">
    <value>ContentPane '{0}' は、'{1}' として配置される必要がありますが、ポジションの情報が、レイアウトにありません。</value>
  </data>
  <data name="LE_SaveLayoutPaneNameMissing" xml:space="preserve">
    <value>シリアル化されているすべてのペインは、特定の一意の名前が必要です。</value>
  </data>
  <data name="LE_InvalidDocumentSplitPaneChild" xml:space="preserve">
    <value> 'DocumentContentHost' 内の SplitPane は、'TabGroupPane' と 'SplitPane' インスタンスのみを含むことができます。 </value>
  </data>
  <data name="LE_InvalidSplitPaneChild" xml:space="preserve">
    <value>無効なエレメント タイプ。'ContentPane'、'TabGroupPane'、'ContentPanePlaceholder' そして 'SplitPane' インスタンスが、コレクションに追加できます。</value>
  </data>
  <data name="LE_InvalidTabGroupPaneChild" xml:space="preserve">
    <value>TabGroupPane は、'ContentPane' と 'ContentPanePlaceholder' インスタンスのみを含むことができます、 </value>
  </data>
  <data name="LE_InvalidUnpinnedTabAreaChild" xml:space="preserve">
    <value>TabGroupPane は、'ContentPane' のインスタンスのみを含むことができます、 </value>
  </data>
  <data name="LE_ElementNotInDockManager" xml:space="preserve">
    <value>指定したエレメントは、'XamDockManager' 内である必要があります。</value>
  </data>
  <data name="LE_InvalidRootDragElement" xml:space="preserve">
    <value>無効なルート エレメントが、指定されました。エレメントは、TabGroupPane または SplitPane のようなペイン コンテナである必要があります。</value>
  </data>
  <data name="LE_InvalidAddToGroupElement" xml:space="preserve">
    <value>グループは、'SplitPane' または 'TabGroupPane' である必要があります。</value>
  </data>
  <data name="LE_InvalidNewSplitPaneElement" xml:space="preserve">
    <value>ペインは、TabGroupPane' または 'ContentPane' である必要があります。</value>
  </data>
  <data name="LE_LoadLayoutUndefinedContentPane" xml:space="preserve">
    <value>レイアウトは、レイアウト ファイルの ContentPanes セクションで定義されていない '{0}' という ContentPane 名の参照を含みます。</value>
  </data>
  <data name="LE_LoadLayoutMissingName" xml:space="preserve">
    <value>ContentPane は、名前属性を含む必要があります。</value>
  </data>
  <data name="LE_InvalidPaneToolWindowContent" xml:space="preserve">
    <value>PaneToolWindow コンテンツは、SplitPane のみを含む必要があります。</value>
  </data>
  <data name="LE_CannotChangeInitialLocation" xml:space="preserve">
    <value>'InitialLocation' は、いったん SplitPane が 'XamDockManager' と関連付けらると変更できません。 </value>
  </data>
  <data name="LE_InvalidateNavigatorSelectedPane" xml:space="preserve">
    <value>指定したペインは、'AllPanes' コレクションに存在しません。</value>
  </data>
  <data name="LE_CannotPerformAutomationOperation" xml:space="preserve">
    <value>この操作を実行できません。</value>
  </data>
  <data name="LE_NewPaneCannotHaveParent" xml:space="preserve">
    <value>InitializePaneContent イベントに NewPane が論理的な親または視覚的な親を持つことはできません。</value>
  </data>
  <data name="LE_PaneAlreadyReferencedInLayout" xml:space="preserve">
    <value>ロードされたレイアウトで ContentPane '{0}' はすでに参照されました。既存のペインが InitializePaneContent イベントで提供された場合に発生します。</value>
  </data>
  <data name="PaneNavigatorActiveFilesLabel" xml:space="preserve">
    <value>アクティブ ファイル</value>
  </data>
  <data name="PaneNavigatorActiveToolWindowsLabel" xml:space="preserve">
    <value>アクティブ ツール ウィンドウ</value>
  </data>
  <data name="LE_CannotNestContentPanes" xml:space="preserve">
    <value>ContentPane '{0}' を他の ContentPane ('{1}') にネストできません。</value>
  </data>
  <data name="LE_InitialLocationForSplitOnly" xml:space="preserve">
    <value>'InitialLocation' プロパティは、XamDockManager の Panes コレクションでの SplitPane インスタンスのみに使用されます。</value>
  </data>
  <data name="LE_MultipleContainersWithSameName" xml:space="preserve">
    <value>'{1}' の名前で定義された '{0}' インスタンスが複数あります。</value>
  </data>
  <data name="LE_NeedDocumentContentHost" xml:space="preserve">
    <value>'Content' プロパティを 'DocumentContentHost' に設定する必要があります。</value>
  </data>
  <data name="PaneHeaderContentValidationError" xml:space="preserve">
    <value>[エラー: ContentPane のヘッダーが要素に設定されています。 
ヘッダーは PaneNavigator でデフォルトのTabHeader として使用されます。 
要素を複数の場所に表示することはできません。 
ペイン キャプションナビゲーターに表示される要素に HeaderTemplate を設定し、必要に応じて TabHeader または TabHeaderTemplate を設定します。]</value>
  </data>
</root>