<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:themes="clr-namespace:Infragistics.Windows.Themes"
	  xmlns:igThemes="http://infragistics.com/Themes"
	  xmlns:igWindow="http://infragistics.com/Windows"
	  xmlns:igRibbon="clr-namespace:Infragistics.Windows.Ribbon"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  >

  <!-- Identify the OS theme as classic-->
  <sys:Boolean x:Key="{ComponentResourceKey ResourceId=IsClassicOSTheme_Identifier, TypeInTargetAssembly=igRibbon:XamRibbon}">True</sys:Boolean>

    
    
	

    <!-- Scenic Ribbon Brushes -->
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicStatusBarTextForegroundFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF000000" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicStatusBarFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicStatusBarBorderFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFFFFFFF" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicStatusBarSeparatorGradientLeftKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFFFFFFF" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicStatusBarSeparatorGradientRightKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF808080" />

    <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicCaptionAreaBorderKey}" igThemes:ResourceWasher.WashGroup="BaseColor" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF0A246A" Offset="0"/>
                <GradientStop Color="#FFA6CAF0" Offset="0.850"/>
                <GradientStop Color="#FFA6CAF0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicCaptionAreaFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF0A246A" Offset="0"/>
                <GradientStop Color="#FFA6CAF0" Offset="0.850"/>
                <GradientStop Color="#FFA6CAF0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicCaptionAreaInactiveFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF808080" Offset="0"/>
                <GradientStop Color="#FFC0C0C0" Offset="0.850"/>
                <GradientStop Color="#FFC0C0C0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicCaptionAreaInactiveBorderKey}" igThemes:ResourceWasher.WashGroup="BaseColor" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF808080" Offset="0"/>
                <GradientStop Color="#FFC0C0C0" Offset="0.850"/>
                <GradientStop Color="#FFC0C0C0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicActiveWindowBorderOuterBrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicActiveWindowBorderOuterShadowBrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF404040" />

    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicActiveWindowBorderInner1BrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFFFFFFF" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicActiveWindowBorderInner1ShadowBrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF808080" />


    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicActiveWindowBorderInner2BrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />

    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicActiveWindowBorderInner3BrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />


    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicWindowBorderOuterBrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicWindowBorderOuterShadowBrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF404040" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicWindowBorderInner1BrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFFFFFFF" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicWindowBorderInner1ShadowBrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF808080" />

    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicWindowBorderInner2BrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />

    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicWindowBorderInner3BrushKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFD4D0C8" />


    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicResizeGrippersForegroundFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFB8B4A3" />
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicResizeGrippersBackgroundFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FFFFFFFF" />

    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igRibbon:RibbonBrushKeys.ScenicCaptionBtnGlyphBackgroundFillKey}" igThemes:ResourceWasher.WashGroup="BaseColor" Color="#FF000000" />



	<!-- CaptionButton Glyphs -->

	<Rectangle x:Key="MinimizeGlyph" x:Shared="False" Width="6" Height="2" Fill="{StaticResource {x:Static igRibbon:RibbonBrushKeys.ScenicCaptionBtnGlyphBackgroundFillKey}}"/>

	<!-- AS 11/4/11 TFS91009 -->
	<Grid x:Key="MinimizeGlyphDisabled" x:Shared="False" Width="6" Height="2">
		<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
			<Rectangle.RenderTransform>
				<TranslateTransform X="1" Y="1" />
			</Rectangle.RenderTransform>
		</Rectangle>
		<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
	</Grid>

	<Border x:Key="MaximizeGlyph" x:Shared="False"  Width="9" Height="9" BorderThickness="1,2,1,1" BorderBrush="{StaticResource {x:Static igRibbon:RibbonBrushKeys.ScenicCaptionBtnGlyphBackgroundFillKey}}" SnapsToDevicePixels="True"/>

	<!-- AS 11/4/11 TFS91009 -->
	<Grid x:Key="MaximizeGlyphDisabled" x:Shared="False" Width="9" Height="9" SnapsToDevicePixels="True">
		<Border BorderThickness="1,2,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
			<Border.RenderTransform>
				<TranslateTransform X="1" Y="1" />
			</Border.RenderTransform>
		</Border>
		<Border BorderThickness="1,2,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
	</Grid>

	<Path
		x:Key="RestoreGlyph"
		x:Shared="False"
		Width="8"
		Height="9"
		Data="M 1,5 C1,5 5,5 5,5 5,5 5,8 5,8 5,8 1,8 1,8 1,8 1,5 1,5 zM 3,2 C3,2 7,2 7,2 7,2 7,5 7,5 7,5 6,5 6,5 6,5 6,3 6,3 6,3 3,3 3,3 3,3 3,2 3,2 zM 0,3 C0,3 0,9 0,9 0,9 6,9 6,9 6,9 6,6 6,6 6,6 8,6 8,6 8,6 8,0 8,0 8,0 2,0 2,0 2,0 2,3 2,3 2,3 0,3 0,3 z"
		Fill="#FF000000"
		Stretch="Fill"/>

	<Path
		x:Key="CloseGlyph"
		x:Shared="False"
		Width="8"
		Height="7"
		Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,7 0,7 0,7 2,7 2,7 2,7 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 8,7 8,7 8,7 8,6 8,6 8,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
		Stretch="Fill"
		Fill="{StaticResource {x:Static igRibbon:RibbonBrushKeys.ScenicCaptionBtnGlyphBackgroundFillKey}}"
		SnapsToDevicePixels="True"/>

	<!-- AS 11/4/11 TFS91009 -->
	<Grid
		x:Key="CloseGlyphDisabled"
		x:Shared="False"
		Width="8"
		Height="7"
		SnapsToDevicePixels="True">
		<Path
			Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,7 0,7 0,7 2,7 2,7 2,7 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 8,7 8,7 8,7 8,6 8,6 8,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
			Stretch="Fill"
			Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
			<Path.RenderTransform>
				<TranslateTransform X="1" Y="1" />
			</Path.RenderTransform>
		</Path>
		<Path
			Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,7 0,7 0,7 2,7 2,7 2,7 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 8,7 8,7 8,7 8,6 8,6 8,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
			Stretch="Fill"
			Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
	</Grid>


	<!-- ========== Scenic Caption Button Styles ========== -->

    <!--ScenicMinimizeButtonStyleKey-->
    <Style x:Key="{x:Static igRibbon:RibbonWindowContentHost.ScenicMinimizeButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="MaxWidth" Value="16"/>
        <Setter Property="MaxHeight" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,2,0"/>
        <Setter Property="Margin" Value="1,0"/>
		<Setter Property="Content" Value="{StaticResource MinimizeGlyph}"/>
			<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <classic:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Raised" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </classic:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                        </Trigger>
						<!-- AS 11/4/11 TFS91009 - Removed since we're not using the Foreground.
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>-->
					</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
		<Style.Triggers>
			<!-- AS 11/4/11 TFS91009 - Since the content is an element we need to change the content when disabled -->
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Content" Value="{StaticResource MinimizeGlyphDisabled}"/>
			</Trigger>
		</Style.Triggers>
    </Style>

    <!-- ScenicMaximizeRestoreButtonStyleKey-->
    <Style x:Key="{x:Static igRibbon:RibbonWindowContentHost.ScenicMaximizeRestoreButtonStyleKey}" BasedOn="{StaticResource {x:Static igRibbon:RibbonWindowContentHost.ScenicMinimizeButtonStyleKey}}"  TargetType="{x:Type Button}">
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0,-1,0,0"/>
		<Setter Property="Content" Value="{StaticResource MaximizeGlyph}"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource FindAncestor, {x:Type Window}, 1}}" Value="Maximized">
				<Setter Property="Content" Value="{StaticResource RestoreGlyph}"/>
			</DataTrigger>
			<!-- AS 11/4/11 TFS91009 - Since the content is an element we need to change the content when disabled -->
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Content" Value="{StaticResource MaximizeGlyphDisabled}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

    <!-- ScenicCloseWindowButtonStyleKey -->
    <Style x:Key="{x:Static igRibbon:RibbonWindowContentHost.ScenicCloseWindowButtonStyleKey}" BasedOn="{StaticResource {x:Static igRibbon:RibbonWindowContentHost.ScenicMinimizeButtonStyleKey}}" TargetType="{x:Type Button}">
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
		<Setter Property="Content" Value="{StaticResource CloseGlyph}"/>
		<Style.Triggers>
			<!-- AS 11/4/11 TFS91009 - Since the content is an element we need to change the content when disabled -->
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Content" Value="{StaticResource CloseGlyphDisabled}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
