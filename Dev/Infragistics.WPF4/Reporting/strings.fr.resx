<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--      Microsoft ResX Schema           Version 2.0          The primary goals of this format is to allow a simple XML format      that is mostly human readable. The generation and parsing of the      various data types are done through the TypeConverter classes      associated with the data types.          Example:          ... ado.net/XML headers & schema ...     <resheader name="resmimetype">text/microsoft-resx</resheader>     <resheader name="version">2.0</resheader>     <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>     <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>     <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>     <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>     <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">         <value>[base64 mime encoded serialized .NET Framework object]</value>     </data>     <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">         <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>         <comment>This is a comment</comment>     </data>                      There are any number of "resheader" rows that contain simple      name/value pairs.          Each data row contains a name, and value. The row also contains a      type or mimetype. Type corresponds to a .NET class that support      text/value conversion through the TypeConverter architecture.      Classes that don't support this are serialized and stored with the      mimetype set.          The mimetype is used for serialized objects, and tells the      ResXResourceReader how to depersist the object. This is currently not      extensible. For a given mimetype the value must be set accordingly:          Note - application/x-microsoft.net.object.binary.base64 is the format      that the ResXResourceWriter will generate, however the reader can      read any of the formats listed below.          mimetype: application/x-microsoft.net.object.binary.base64     value   : The object must be serialized with              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter             : and then encoded with base64 encoding.          mimetype: application/x-microsoft.net.object.soap.base64     value   : The object must be serialized with              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter             : and then encoded with base64 encoding.      mimetype: application/x-microsoft.net.object.bytearray.base64     value   : The object must be serialized into a byte array              : using a System.ComponentModel.TypeConverter             : and then encoded with base64 encoding.     -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ReportProgressControlTitle_Preview" xml:space="preserve">
    <value>Progression de la génération de l&apos;aperçu</value>
  </data>
  <data name="ProgressCanceledDescription_Preview" xml:space="preserve">
    <value>L&apos;utilisateur a annulé la génération de l&apos;aperçu.</value>
  </data>
  <data name="ProgressPrintingDescription_Preview" xml:space="preserve">
    <value>Génération de la page d&apos;aperçu {0}</value>
  </data>
  <data name="ProgressCompletedDescription_Preview" xml:space="preserve">
    <value>{0} pages d&apos;aperçu correctement générées.</value>
  </data>
  <data name="ReportProgressControlTitle" xml:space="preserve">
    <value>Progression de l&apos;impression</value>
  </data>
  <data name="ProgressCancelButton" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="ProgressCanceledDescription" xml:space="preserve">
    <value>L&apos;utilisateur a annulé l&apos;opération d&apos;impression</value>
  </data>
  <data name="ProgressInitialDescription" xml:space="preserve">
    <value>Informations de progression</value>
  </data>
  <data name="ProgressPrintingDescription" xml:space="preserve">
    <value>Impression de la page {0}</value>
  </data>
  <data name="ProgressCompletedDescription" xml:space="preserve">
    <value>{0} pages correctement imprimées.</value>
  </data>
  <data name="PageContentAreaTooSmall" xml:space="preserve">
    <value>Impossible d&apos;imprimer cette section du rapport car la zone de contenu sur la page était trop petite. La taille de la page (largeur, hauteur) était ({0}) et les paramètres des marges étaient (à gauche {3}, en haut {4}, à droite {5} et en bas {6}). Cela a généré une taille de zone de contenu, après en-têtes et pieds de page, de seulement ({1}). La zone de contenu minimum requise est ({2}).</value>
  </data>
  <data name="XamReportPreviewActualSizeToolTip" xml:space="preserve">
    <value>100% (Ctrl+1)</value>
  </data>
  <data name="XamReportPreviewPageWidthToolTip" xml:space="preserve">
    <value>Largeur de page (Ctrl+2)</value>
  </data>
  <data name="XamReportPreviewTwoPagesToolTip" xml:space="preserve">
    <value>Deux pages (Ctrl+4)</value>
  </data>
  <data name="XamReportPreviewWholePageToolTip" xml:space="preserve">
    <value>Page entière (Ctrl+3)</value>
  </data>
  <data name="XamReportPreviewZoomInToolTip" xml:space="preserve">
    <value>Augmenter la taille du contenu (Ctrl+=)</value>
  </data>
  <data name="XamReportPreviewZoomOutToolTip" xml:space="preserve">
    <value>Diminuer la taille du contenu (Ctrl+-)</value>
  </data>
  <data name="XamReportPreviewPrintToolTip" xml:space="preserve">
    <value>Imprimer (Ctrl+P)</value>
  </data>
  <data name="XamReportPreviewContextMenuZoomIn" xml:space="preserve">
    <value>Augmenter le zoom</value>
  </data>
  <data name="XamReportPreviewContextMenuZoomOut" xml:space="preserve">
    <value>Réduire le zoom</value>
  </data>
</root>