<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LE_EmbeddedVisualReportSection_NullPaginator" xml:space="preserve">
    <value>The created visual paginator is null!</value>
    <comment>Wrong parameter</comment>
  </data>
  <data name="LE_EmbeddedVisualReportSection_GetPage_LessThanZero" xml:space="preserve">
    <value>PageNumber can not be less than 0 in call to EmbeddedVisualReportSection.GetPage</value>
  </data>
  <data name="LE_ReportPaginator_OutOfRangeException" xml:space="preserve">
    <value>The page number is bigger than the totally page count in the sections.</value>
    <comment>User wants to print page that dont exist</comment>
  </data>
  <data name="LE_Report_InvalidFileName" xml:space="preserve">
    <value>Invalid file name for export!</value>
    <comment>Check input parameter</comment>
  </data>
  <data name="LE_Report_FolderDontExist" xml:space="preserve">
    <value>The directory '{0}' doesn't exist</value>
  </data>
  <data name="LE_Report_NoDefaultPrinter" xml:space="preserve">
    <value>There is not default printer installed on this machine!</value>
  </data>
  <!-- JJD 08-25-11 - TFS81022 - exception when trying to print or export with no sections-->
  <data name="LE_Report_NoSections" xml:space="preserve">
    <value>Can't print or export a Report without at least one section.</value>
  </data>
  <!-- JJD 11-24-09 - TFS24840 - added Preview resource strings-->
  <data name="ReportProgressControlTitle_Preview" xml:space="preserve">
    <value>Preview generation progress</value>
  </data>
  <data name="ProgressCanceledDescription_Preview" xml:space="preserve">
    <value>User canceled the preview generation.</value>
  </data>
  <data name="ProgressPrintingDescription_Preview" xml:space="preserve">
    <value>Generating preview page {0}</value>
  </data>
  <data name="ProgressCompletedDescription_Preview" xml:space="preserve">
    <value>Successfully generated {0} preview pages.</value>
  </data>
  <!-- end of JJD 11-24-09 - TFS24840 additions -->
  <data name="ReportProgressControlTitle" xml:space="preserve">
    <value>Print progress</value>
  </data>
  <data name="LE_Export_NotSupportedXBAP" xml:space="preserve">
    <value>The export requires FullTrust permissions</value>
  </data>
  <data name="ProgressCancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ProgressCanceledDescription" xml:space="preserve">
    <value>User canceled the print operation</value>
  </data>
  <data name="ProgressInitialDescription" xml:space="preserve">
    <value>Progress information</value>
  </data>
  <data name="ProgressPrintingDescription" xml:space="preserve">
    <value>Printing page {0}</value>
  </data>
  <data name="ProgressCompletedDescription" xml:space="preserve">
    <value>Successfully printed {0} pages.</value>
  </data>
  <data name="PageContentAreaTooSmall" xml:space="preserve">
    <value>Unable to print this report section because the content area on the page was too small. The page size (width,height) was ({0}) and the margin settings were (left {3}, top {4}, right {5} and bottom {6}). This resulted in a content area size, after headers and footers, of only ({1}). The mimimum content area required is ({2}).</value>
  </data>
  <data name="LE_MustCallCreatePageWithinPagination" xml:space="preserve">
    <value>CreatePage can only be called within the calls to OnBeginPagination and OnEndPagination.</value>
  </data>
  <data name="XamReportPreviewActualSizeToolTip" xml:space="preserve">
    <value>100% (Ctrl+1)</value>
  </data>
  <data name="XamReportPreviewPageWidthToolTip" xml:space="preserve">
    <value>Page Width (Ctrl+2)</value>
  </data>
  <data name="XamReportPreviewTwoPagesToolTip" xml:space="preserve">
    <value>Two Pages (Ctrl+4)</value>
  </data>
  <data name="XamReportPreviewWholePageToolTip" xml:space="preserve">
    <value>Whole Page (Ctrl+3)</value>
  </data>
  <data name="XamReportPreviewZoomInToolTip" xml:space="preserve">
    <value>Increase the size of the content (Ctrl+=)</value>
  </data>
  <data name="XamReportPreviewZoomOutToolTip" xml:space="preserve">
    <value>Decrease the size of the content (Ctrl+-)</value>
  </data>
  <data name="XamReportPreviewPrintToolTip" xml:space="preserve">
    <value>Print (Ctrl+P)</value>
  </data>
  <data name="XamReportPreviewContextMenuZoomIn" xml:space="preserve">
    <value>Increase Zoom</value>
    <comment> </comment>
  </data>
  <data name="XamReportPreviewContextMenuZoomOut" xml:space="preserve">
    <value>Decrease Zoom</value>
  </data>
</root>