<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LE_EmbeddedVisualReportSection_NullPaginator" xml:space="preserve">
    <value>作成されたビジュアル ページネーターは Null です。</value>
    <comment>Wrong parameter</comment>
  </data>
  <data name="LE_EmbeddedVisualReportSection_GetPage_LessThanZero" xml:space="preserve">
    <value>EmbeddedVisualReportSection.GetPage の呼び出しで PageNumber は 0 未満に設定することはできません。</value>
  </data>
  <data name="LE_ReportPaginator_OutOfRangeException" xml:space="preserve">
    <value>このページ番号はセクションのページ合計数より大きいです。</value>
    <comment>User wants to print page that dont exist</comment>
  </data>
  <data name="LE_Report_InvalidFileName" xml:space="preserve">
    <value>エクスポートの無効なファイル名</value>
    <comment>Check input parameter</comment>
  </data>
  <data name="LE_Report_FolderDontExist" xml:space="preserve">
    <value>ディレクトリ {0} は存在しません。</value>
  </data>
  <data name="LE_Report_NoDefaultPrinter" xml:space="preserve">
    <value>このマシンでインストールされるデフォルト プリンターはありません。</value>
  </data>
  <data name="ReportProgressControlTitle" xml:space="preserve">
    <value>印刷の進行状況</value>
  </data>
  <data name="LE_Export_NotSupportedXBAP" xml:space="preserve">
    <value>エクスポートでは FullTrust 許可が必要です。</value>
  </data>
  <data name="ProgressCancelButton" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ProgressCanceledDescription" xml:space="preserve">
    <value>ユーザーが印刷操作をキャンセルしました</value>
  </data>
  <data name="ProgressInitialDescription" xml:space="preserve">
    <value>進行状況の情報</value>
  </data>
  <data name="ProgressPrintingDescription" xml:space="preserve">
    <value>ページ {0} を印刷</value>
  </data>
  <data name="ProgressCompletedDescription" xml:space="preserve">
    <value>{0} ページ印刷しました。</value>
  </data>
  <data name="PageContentAreaTooSmall" xml:space="preserve">
    <value>ページのコンテンツ領域が小さすぎるため、このレポート セクションを印刷できませんでした。ページ サイズ (幅、高さ)は ({0}) 。余白設定 (左 {3}、上 {4}、右 {5}、下 {6})。ヘッダーとフッターを追加すると、内容領域サイズは ({1}) になります。必要な内容領域の最小値は ({2}) です。</value>
  </data>
  <data name="LE_MustCallCreatePageWithinPagination" xml:space="preserve">
    <value>CreatePage は、OnBeginPagination または OnEndPagination の呼び出し内だけで呼び出すことができます。</value>
  </data>
  <data name="XamReportPreviewActualSizeToolTip" xml:space="preserve">
    <value>100% (Ctrl+1)</value>
  </data>
  <data name="XamReportPreviewPageWidthToolTip" xml:space="preserve">
    <value>ページ幅 (Ctrl+2)</value>
  </data>
  <data name="XamReportPreviewTwoPagesToolTip" xml:space="preserve">
    <value>2 つのページ (Ctrl+4)</value>
  </data>
  <data name="XamReportPreviewWholePageToolTip" xml:space="preserve">
    <value>全体ページ (Ctrl+3)</value>
  </data>
  <data name="XamReportPreviewZoomInToolTip" xml:space="preserve">
    <value>コンテンツ サイズを増やす (Ctrl+=)</value>
  </data>
  <data name="XamReportPreviewZoomOutToolTip" xml:space="preserve">
    <value>コンテンツ サイズを減らす (Ctrl+-)</value>
  </data>
  <data name="XamReportPreviewPrintToolTip" xml:space="preserve">
    <value>印刷 (Ctrl+P)</value>
  </data>
  <data name="XamReportPreviewContextMenuZoomIn" xml:space="preserve">
    <value>ズームの拡大</value>
  </data>
  <data name="XamReportPreviewContextMenuZoomOut" xml:space="preserve">
    <value>ズームの縮小</value>
  </data>
  <data name="ProgressCanceledDescription_Preview" xml:space="preserve">
    <value>ユーザーがプレビューの生成をキャンセルしました。</value>
  </data>
  <data name="ProgressCompletedDescription_Preview" xml:space="preserve">
    <value>{0} プレビュー ページの生成に成功しました。</value>
  </data>
  <data name="ProgressPrintingDescription_Preview" xml:space="preserve">
    <value>プレビュー ページ {0} を生成しています。</value>
  </data>
  <data name="ReportProgressControlTitle_Preview" xml:space="preserve">
    <value>プレビュー生成の進行状況</value>
  </data>
  <data name="LE_Report_NoSections" xml:space="preserve">
    <value>レポートにセクションがないため印刷またはエクスポートできません。</value>
  </data>
</root>