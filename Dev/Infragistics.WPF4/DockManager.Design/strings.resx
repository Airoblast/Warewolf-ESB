<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="LC_DockManager Properties" xml:space="preserve">
    <value>DockManager Properties</value>
  </data>
	<data name="LD_XamDockManager" xml:space="preserve">
    <value>A custom control that arranges elements as panes similar to that of Microsoft Visual Studio.</value>
  </data>
	<data name="LD_XamDockManager_P_ActivePane" xml:space="preserve">
    <value>Returns the current active ContentPane.</value>
  </data>
	<data name="LD_XamDockManager_P_CloseBehavior" xml:space="preserve">
    <value>Determines whether the active pane or all panes are closed when clicking the close button (or using the Close context menu item) of a pane within a dockable TabGroup.</value>
  </data>
	<data name="LD_XamDockManager_P_FlyoutAnimation" xml:space="preserve">
    <value>Determines the type of animation, if any, that occurs when the flyout pane is displayed or hidden.</value>
  </data>
	<data name="LD_XamDockManager_P_HasDocumentContentHost" xml:space="preserve">
    <value>Returns a boolean indicating whether the Content property has been set to a DocumentContentHost that provides the tabbed document behavior for the content.</value>
  </data>
	<data name="LD_XamDockManager_P_NavigationOrder" xml:space="preserve">
    <value>Returns/sets an enumeration indicating the order in which panes are navigated using the keyboard or the PaneNavigator.</value>
  </data>
	<data name="LD_XamDockManager_P_PaneNavigatorButtonDisplayMode" xml:space="preserve">
    <value>Determines when a button that can be used to display the 'PaneNavigator' is displayed within the XamDockManager.</value>
  </data>
	<data name="LD_XamDockManager_P_Theme" xml:space="preserve">
    <value>Gets/sets the general look of the XamDockManager and its elements.</value>
  </data>
	<data name="LD_XamDockManager_P_PinBehavior" xml:space="preserve">
    <value>Determines whether the active pane or all panes are unpinned when clicking the auto hide button (or using the Auto Hide context menu item) of a pane within a dockable TabGroup.</value>
  </data>
	<data name="LC_DockManager Events" xml:space="preserve">
    <value>DockManager Events</value>
  </data>
	<data name="LD_XamDockManager_E_ThemeChanged" xml:space="preserve">
    <value>Occurs when the 'Theme' property has been changed.</value>
  </data>
	<data name="LD_XamDockManager_E_ActivePaneChanged" xml:space="preserve">
    <value>Occurs when the 'ActivePane' property has been changed</value>
  </data>
	<data name="LD_XamDockManager_E_ExecutingCommand" xml:space="preserve">
    <value>Occurs before a command is performed</value>
  </data>
	<data name="LD_XamDockManager_E_ExecutedCommand" xml:space="preserve">
    <value>Occurs after a command is performed</value>
  </data>
	<data name="LD_XamDockManager_E_InitializePaneContent" xml:space="preserve">
    <value>Occurs during a call to 'LoadLayout' when a content pane is referenced in the layout but does not exist within the 'XamDockManager'.</value>
  </data>
	<data name="LD_XamDockManager_E_PaneDragEnded" xml:space="preserve">
    <value>Occurs when a pane drag operation has ended.</value>
  </data>
	<data name="LD_XamDockManager_E_PaneDragOver" xml:space="preserve">
    <value>Occurs during a pane drag operation when a new drop location is encountered</value>
  </data>
	<data name="LD_XamDockManager_E_PaneDragStarting" xml:space="preserve">
    <value>Occurs when one or more 'ContentPane' instances are being dragged</value>
  </data>
	<data name="LD_XamDockManager_E_ToolWindowLoaded" xml:space="preserve">
    <value>Occurs when a 'PaneToolWindow' is created and about to be shown for the first time.</value>
  </data>
	<data name="LD_XamDockManager_E_ToolWindowUnloaded" xml:space="preserve">
    <value>Occurs when a 'PaneToolWindow' is about to be removed from the 'XamDockManager'.</value>
  </data>
	<data name="LD_UnpinnedTabItemPanel_P_TabStripPlacement" xml:space="preserve">
    <value>Determines the orientation and placement of the tab items.</value>
  </data>
	<data name="LD_DocumentContentHost_P_ActiveDocument" xml:space="preserve">
    <value>Returns the currently active ContentPane within the DocumentContentHost</value>
  </data>
	<data name="LD_DocumentContentHost_E_ActiveDocumentChanged" xml:space="preserve">
    <value>Occurs when the 'ActiveDocument' property has been changed</value>
  </data>
	<data name="LD_PaneSplitter_P_Orientation" xml:space="preserve">
    <value>Returns/sets the orientation of the splitter bar.</value>
  </data>
	<data name="LD_PaneToolWindow_P_Pane" xml:space="preserve">
    <value>Returns the root split pane contained within the tool window.</value>
  </data>
	<data name="LD_ContentPanePlaceholder_P_PaneLocation" xml:space="preserve">
    <value>Description</value>
  </data>
	<data name="LD_PaneHeaderPresenter_P_Pane" xml:space="preserve">
    <value>Returns the associated ContentPane that the header represents.</value>
  </data>
	<data name="LD_DocumentTabPanel_P_TabStripPlacement" xml:space="preserve">
    <value>Determines the orientation and placement of the tab items.</value>
  </data>
	<data name="LD_TabGroupPane_P_IsTabItemAreaVisible" xml:space="preserve">
    <value>Returns a boolean indicating if the tab item area should be displayed.</value>
  </data>
	<data name="LD_PaneNavigator_P_SelectedPane" xml:space="preserve">
    <value>Returns/sets the currently selected pane that will be activated when the dialog is closed.</value>
  </data>
	<data name="LD_PaneNavigator_P_SelectedPaneAspectRatioIsWide" xml:space="preserve">
    <value>Returns true if the aspect ratio of the selected pane is considered wide.</value>
  </data>
	<data name="LD_PaneNavigator_P_SelectedPaneIsDocument" xml:space="preserve">
    <value>Returns true if the SelectedPane is a document.</value>
  </data>
	<data name="LD_UnpinnedTabFlyout_P_Pane" xml:space="preserve">
    <value>Returns the unpinned 'ContentPane' that is being displayed in the flyout.</value>
  </data>
	<data name="LD_UnpinnedTabFlyout_P_Side" xml:space="preserve">
    <value>Returns the side that indicates whose unpinned tab area the flyout is associated with.</value>
  </data>
	<data name="LD_SplitPane_P_Panes" xml:space="preserve">
    <value>The collection of panes displayed within the split pane. These must be either a ContentPane or a TabGroupPane.</value>
  </data>
	<data name="LD_SplitPane_P_SplitterOrientation" xml:space="preserve">
    <value>Returns/set the orientation of the splitter bar. If Vertical, the panes are stacked horizontally with a vertical splitter between each; if horizontal, the panes are stacked vertically with a horizontal splitter between each.</value>
  </data>
	<data name="LD_DockingIndicator_P_CanDockBottom" xml:space="preserve">
    <value>Returns a boolean indicating whether the dock bottom indicator should be enabled.</value>
  </data>
	<data name="LD_DockingIndicator_P_CanDockTop" xml:space="preserve">
    <value>Returns a boolean indicating whether the dock top indicator should be enabled.</value>
  </data>
	<data name="LD_DockingIndicator_P_CanDockLeft" xml:space="preserve">
    <value>Returns a boolean indicating whether the dock left indicator should be enabled.</value>
  </data>
	<data name="LD_DockingIndicator_P_CanDockRight" xml:space="preserve">
    <value>Returns a boolean indicating whether the dock right indicator should be enabled.</value>
  </data>
	<data name="LD_DockingIndicator_P_CanDockCenter" xml:space="preserve">
    <value>Returns a boolean indicating whether the dock center indicator should be enabled.</value>
  </data>
	<data name="LD_DockingIndicator_P_HotTrackPosition" xml:space="preserve">
    <value>Returns the position within the indicator that is currently hottracked.</value>
  </data>
	<data name="LD_DockingIndicator_P_Position" xml:space="preserve">
    <value>Returns or sets the position of the indicator.</value>
  </data>
	<data name="LD_PaneTabItem_P_Pane" xml:space="preserve">
    <value>Returns the associated ContentPane that the tab item represents.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDocking" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane may be docked within the XamDockManager or within a floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDockingLeft" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane may be docked within the XamDockManager or within a floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDockingTop" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane may be docked within the XamDockManager or within a floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDockingRight" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane may be docked within the XamDockManager or within a floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDockingBottom" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane may be docked within the XamDockManager or within a floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDockingFloating" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane may be docked within the XamDockManager or within a floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowInDocumentHost" xml:space="preserve">
    <value>Indicates if the pane may be added to the content area of the XamDockManager when the XamDockManager’s content is a DocumentContentHost.</value>
  </data>
	<data name="LD_ContentPane_P_AllowFloatingOnly" xml:space="preserve">
    <value>Indicates if the pane can be displayed in a non-dockable floating window.</value>
  </data>
	<data name="LD_ContentPane_P_AllowPinning" xml:space="preserve">
    <value>Indicates if the pane can be unpinned by the end user and displayed within the UnpinnedTabArea.</value>
  </data>
	<data name="LD_ContentPane_P_AllowClose" xml:space="preserve">
    <value>Indicates if the pane may be hidden using the UI.</value>
  </data>
	<data name="LD_ContentPane_P_AllowDockingInTabGroup" xml:space="preserve">
    <value>Indicates if the pane may be docked in a TabGroupPane within another pane. When false, a pane cannot be dragged into this pane and this pane cannot be dragged onto another such that it would create a tab group.</value>
  </data>
	<data name="LD_ContentPane_P_CloseAction" xml:space="preserve">
    <value>Determines what happens to the pane when it is closed.</value>
  </data>
	<data name="LD_ContentPane_P_HasImage" xml:space="preserve">
    <value>Returns a boolean indicating if the Image property has been set.</value>
  </data>
	<data name="LD_ContentPane_P_HeaderVisibility" xml:space="preserve">
    <value>Returns the preferred visibility for the pane based on its current location.</value>
  </data>
	<data name="LD_ContentPane_P_Image" xml:space="preserve">
    <value>The image used to represent the pane in its tab item as well as in the 'PaneNavigator'.</value>
  </data>
	<data name="LD_ContentPane_P_IsActivePane" xml:space="preserve">
    <value>Returns a boolean indicating whether the pane is the active pane of the XamDockManager.</value>
  </data>
	<data name="LD_ContentPane_P_IsActiveDocument" xml:space="preserve">
    <value>Returns a boolean indicating whether the pane is the active document of the DocumentContentHost within a XamDockManager.</value>
  </data>
	<data name="LD_ContentPane_P_IsPinned" xml:space="preserve">
    <value>Returns/sets a boolean indicating whether the pane should be displayed within an 'UnpinnedTabArea'</value>
  </data>
	<data name="LD_ContentPane_P_NavigatorDescription" xml:space="preserve">
    <value>Returns/sets a description of the contents. The description is used within the 'PaneNavigator' to provide more information about the pane.</value>
  </data>
	<data name="LD_ContentPane_P_NavigatorDescriptionTemplate" xml:space="preserve">
    <value>The template used to display the content of the description in the 'PaneNavigator'.</value>
  </data>
	<data name="LD_ContentPane_P_NavigatorDescriptionTemplateSelector" xml:space="preserve">
    <value>Used to provide custom logic for choosing the template used to display the pane’s description in the 'PaneNavigator'.</value>
  </data>
	<data name="LD_ContentPane_P_NavigatorTitle" xml:space="preserve">
    <value>Returns/sets the title for the pane. The title is used within the 'PaneNavigator' to provide more information about the pane.</value>
  </data>
	<data name="LD_ContentPane_P_NavigatorTitleTemplate" xml:space="preserve">
    <value>The template used to display the content of the title in the 'PaneNavigator'.</value>
  </data>
	<data name="LD_ContentPane_P_NavigatorTitleTemplateSelector" xml:space="preserve">
    <value>Used to provide custom logic for choosing the template used to display the pane’s title in the 'PaneNavigator'.</value>
  </data>
	<data name="LD_ContentPane_P_PaneLocation" xml:space="preserve">
    <value>Description</value>
  </data>
	<data name="LD_ContentPane_P_SaveInLayout" xml:space="preserve">
    <value>Indicates if the pane should be included in a saved layout.</value>
  </data>
	<data name="LD_ContentPane_P_SerializationId" xml:space="preserve">
    <value>A string that is stored with the pane when the layout is saved.</value>
  </data>
	<data name="LD_ContentPane_P_TabHeader" xml:space="preserve">
    <value>The data used for the header of the pane when displayed within a tab item or when the pane is unpinned.</value>
  </data>
	<data name="LD_ContentPane_P_TabHeaderTemplate" xml:space="preserve">
    <value>The template used to display the content of the 'TabHeader'.</value>
  </data>
	<data name="LD_ContentPane_P_TabHeaderTemplateSelector" xml:space="preserve">
    <value>Used to provide custom logic for choosing the template used to display the 'TabHeader'.</value>
  </data>
	<data name="LD_ContentPane_E_Closing" xml:space="preserve">
    <value>Occurs when the 'ContentPane' is about to be closed</value>
  </data>
	<data name="LD_ContentPane_E_Closed" xml:space="preserve">
    <value>Occurs when the 'ContentPane' has been closed</value>
  </data>
	<data name="LD_ContentPane_E_ExecutingCommand" xml:space="preserve">
    <value>Occurs before a command is performed</value>
  </data>
	<data name="LD_ContentPane_E_ExecutedCommand" xml:space="preserve">
    <value>Occurs after a command is performed</value>
  </data>
	<data name="LD_ContentPane_E_OptionsMenuOpening" xml:space="preserve">
    <value>Occurs when the menu or context menu for the 'ContentPane' is about to be displayed</value>
  </data>
	<data name="LD_XamDockManager_P_Panes" xml:space="preserve">
    <value>The collection of split panes displayed within the XamDockManager representing the root floating and docked panes.</value>
  </data>
	<data name="LD_DocumentContentHost_P_Panes" xml:space="preserve">
    <value>The collection of split panes displayed within the document host. The split panes can only contain SplitPane or TabGroupPane instances.</value>
  </data>
  <data name="LD_ContentPane_P_ContentVisibility" xml:space="preserve">
    <value>Returns a value indicating the preferred visibility for the content of the pane.</value>
  </data>
  <data name="LD_XamDockManager_P_TabItemDragBehavior" xml:space="preserve">
    <value>Returns or sets a value that determines the type of visual indication provides during a drag operation when over the tab item area of a TabGroupPane.</value>
  </data>
  <data name="LD_XamDockManager_P_FloatingWindowDragMode" xml:space="preserve">
    <value>Returns/sets a value that indicates how a floating pane should be repositioned during a drag operation.</value>
  </data>
	<data name="LD_ContentPane_P_CloseButtonVisibility" xml:space="preserve">
    <value>Returns or sets the visibility of the close button within the pane's caption area.</value>
  </data>
	<data name="LD_ContentPane_P_PinButtonVisibility" xml:space="preserve">
    <value>Returns or sets the visibility of the pin/unpin button within the pane's caption area.</value>
  </data>
	<data name="LD_ContentPane_P_WindowPositionMenuVisibility" xml:space="preserve">
    <value>Returns or sets the visibility of the window position menu within the pane's caption area.</value>
  </data>
	<data name="LD_TabGroupPane_E_FilesMenuOpening" xml:space="preserve">
    <value>Occurs when the files menu for the 'TabGroupPane' is about to be displayed</value>
  </data>
	<data name="LD_XamDockManager_P_LayoutMode" xml:space="preserve">
    <value>Determines how the docked SplitPanes are arranged within the XamDockManager</value>
  </data>
	<data name="LC_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
	<data name="LD_XamDockManager_P_UnpinnedTabHoverAction" xml:space="preserve">
    <value>Returns or sets what action should occur when the mouse is hovered over an unpinned tab item.</value>
  </data>
	<data name="LD_XamDockManager_P_FloatingWindowVisibility" xml:space="preserve">
    <value>Returns or sets a value indicating that is used to determine the Visibility of the floating windows.</value>
  </data>
	<data name="SmartTag_T_XamDockManager" xml:space="preserve">
    <value>XamDockManager</value>
  </data>
	<data name="SmartTag_T_SplitPaneOptionsDialog" xml:space="preserve">
    <value>SplitPane Options</value>
  </data>
	<data name="SmartTag_T_TaskError" xml:space="preserve">
    <value>Task Error</value>
  </data>
	<data name="SmartTag_T_ContentPane" xml:space="preserve">
    <value>ContentPane</value>
  </data>
	<data name="SmartTag_T_TabGroupPane" xml:space="preserve">
    <value>TabGroupPane</value>
  </data>
	<data name="SmartTag_T_InvalidValue" xml:space="preserve">
    <value>Invalid Value</value>
  </data>
	<data name="SmartTag_G_Options" xml:space="preserve">
    <value>Options</value>
  </data>
	<data name="SmartTag_G_Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
	<data name="SmartTag_G_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
	<data name="SmartTag_G_Appearance" xml:space="preserve">
    <value>Appearance</value>
  </data>
	<data name="SmartTag_G_Serialization" xml:space="preserve">
    <value>Serialization</value>
  </data>
	<data name="SmartTag_G_Descriptions" xml:space="preserve">
    <value>Descriptions</value>
  </data>
	<data name="SmartTag_D_AddSplitPaneWithContentPanes" xml:space="preserve">
    <value>Add a SplitPane Containing 1 or more ContentPanes...</value>
  </data>
	<data name="SmartTag_D_AddSplitPaneWithTabGroupPanes" xml:space="preserve">
    <value>Add a SplitPane Containing 1 or more TabGroupPanes...</value>
  </data>
	<data name="SmartTag_D_AddDocumentContentHost" xml:space="preserve">
    <value>Add a DocumentContentHost</value>
  </data>
	<data name="SmartTag_D_SelectNextTab" xml:space="preserve">
    <value>Select Next Tab</value>
  </data>
	<data name="SmartTag_D_SelectPreviousTab" xml:space="preserve">
    <value>Select Previous Tab</value>
  </data>
	<data name="SmartTag_D_AddContentPane" xml:space="preserve">
    <value>Add a ContentPane</value>
  </data>
	<data name="SmartTag_N_AddSplitPaneWithContentPanes" xml:space="preserve">
    <value>Adds a SplitPane containing 1 or more ContentPanes to the XamDockManager</value>
  </data>
	<data name="SmartTag_N_AddSplitPaneWithTabGroupPanes" xml:space="preserve">
    <value>Adds a SplitPane Containing 1 or more TabGroupPanes</value>
  </data>
	<data name="SmartTag_N_AddDocumentContentHost" xml:space="preserve">
    <value>Add a DocumentContentHost to enable display of one or more documents</value>
  </data>
	<data name="SmartTag_N_SelectNextTab" xml:space="preserve">
    <value>Select Next Tab</value>
  </data>
	<data name="SmartTag_N_SelectPreviousTab" xml:space="preserve">
    <value>Select Previous Tab</value>
  </data>
	<data name="SmartTag_N_Selection" xml:space="preserve">
    <value>Selection</value>
  </data>
	<data name="SmartTag_N_AddPanes" xml:space="preserve">
    <value>Add Panes</value>
  </data>
	<data name="SmartTag_N_AddContentPane" xml:space="preserve">
    <value>Add a ContentPane to the TabGroupPane</value>
  </data>
	<data name="SmartTag_Default_ContentPaneHeader" xml:space="preserve">
    <value>Content Pane</value>
  </data>
	<data name="SmartTag_DialogItem_SplitPaneLocation" xml:space="preserve">
    <value>SplitPane Location</value>
  </data>
	<data name="SmartTag_DialogItem_SplitterOrientation" xml:space="preserve">
    <value>Splitter Orientation</value>
  </data>
	<data name="SmartTag_DialogItem_NumberContentPanes" xml:space="preserve">
    <value>Number of ContentPanes to add</value>
  </data>
	<data name="SmartTag_DialogItem_NumberTabGroupPanes" xml:space="preserve">
    <value>Number of TabGroupPanes to add</value>
  </data>
	<data name="SmartTag_DialogItem_OK" xml:space="preserve">
    <value>OK</value>
  </data>
	<data name="SmartTag_M_DocumentContentHostAlreadyExists" xml:space="preserve">
    <value>The XamDockManager already contains a DocumentContentHost.  Do you want to replace it with a newly intialized DocumentContentHost?</value>
  </data>
	<data name="SmartTag_M_DockManagerContentAlreadySet" xml:space="preserve">
    <value>The XamDockManager Content property is already set to an element of type '{0}'.  Do you want to replace this element with a DocumentContentHost?</value>
  </data>
	<data name="SmartTag_M_NumberOfPanes" xml:space="preserve">
    <value>Please enter a valid value for the number of Panes to add.</value>
  </data>
	<data name="LD_XamDockManager_P_AllowMinimizeFloatingWindows" xml:space="preserve">
    <value>Returns/sets a value indicating whether the window used to contain the floating panes may be minimized.</value>
  </data>
	<data name="LD_XamDockManager_P_AllowMaximizeFloatingWindows" xml:space="preserve">
    <value>Returns/sets a value indicating whether the window used to contain the floating panes may be maximized.</value>
  </data>
	<data name="LD_XamDockManager_P_ShowFloatingWindowsInTaskbar" xml:space="preserve">
    <value>Returns/sets a value indicating whether the window used to contain the floating panes will be displayed within the OS taskbar when a WPF window is used to host the floating panes.</value>
  </data>
	<data name="LD_XamDockManager_P_UseOwnedFloatingWindows" xml:space="preserve">
    <value>Returns/sets a value indicating whether the window used to contain the floating panes will be an owned window of the Window containing the xamDockManager</value>
  </data>
	<data name="XamDockManagerAssetLibrary">
		<value>Infragistics</value>
	</data>
	<data name="LD_XamDockManager_P_FloatingWindowDoubleClickAction" xml:space="preserve">
    <value>Returns or sets the action that should be taken when double clicking on the caption area of a 'PaneToolWindow'</value>
  </data>
	<data name="LD_XamDockManager_P_FloatingWindowCaptionSource" xml:space="preserve">
    <value>Returns or sets a value that determines what provides the caption area of a floating 'PaneToolWindow'</value>
  </data>
	<data name="LD_PaneToolWindow_P_FloatingWindowCaptionSource" xml:space="preserve">
    <value>Returns or sets a value indicating if the PaneToolWindow should display the header of the ContentPane when only a single ContentPane is visible instead of displaying the title of the floating window.</value>
  </data>
	<data name="LD_SplitPane_P_RelativeSize" xml:space="preserve">
    <value>Returns or sets the RelativeSize of a child of a SplitPane that is used to determine the percentage of space that the child will be provided within the SplitPane.</value>
  </data>
  <data name="LD_XamDockManager_P_FloatingLocation" xml:space="preserve">
    <value>Returns or sets the location in which a floating SplitPane in the Panes collection will be arranged. If the XamDockManager will be used within an XBAP, these coordinates should be relative to the root visual containing the XamDockManager.</value>
  </data>
  <data name="LD_XamDockManager_P_FloatingSize" xml:space="preserve">
    <value>Returns or sets the size of the PaneToolWindow that will contain a floating SplitPane in the Panes collection. A floating SplitPane is one whose XamDockManager.InitialLocation is 'DockableFloating' or 'FloatingOnly'.</value>
  </data>
  <data name="LD_XamDockManager_P_InitialLocation" xml:space="preserve">
    <value>Returns or sets where the SplitPane in the Panes collection will be displayed when the XamDockManager is initially displayed. Once the pane has been initialized, this value is no longer used.</value>
  </data>
</root>
