// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Dev2.CodedUI.Tests.UIMaps.WorkflowDesignerUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Dev2.Studio.UI.Tests;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class WorkflowDesignerUIMap
    {

        public void designerClickNameTextbox()
        {
            #region Variable Declarations
            var designer = this.UIBusinessDesignStudioWindow.WorkflowDesignerSurface;
            #endregion

            // Click 'Workflow Service Details' window
            Mouse.Click(designer, new Point(297, 78));
        }

        /// <summary>
        /// TestMethodForWF
        /// </summary>
        public void TestMethodForWF()
        {
            #region Variable Declarations
            var designer = this.UIBusinessDesignStudioWindow.WorkflowDesignerSurface;
            #endregion

            UITestControlCollection children = designer.GetChildren();
            foreach(UITestControl control in children) {
                UITestControlCollection childrensChildren = control.GetChildren();
                foreach(var child in childrensChildren) {
                    string something = child.FriendlyName;

                    string somethingElse = something;
                }
                string name = control.FriendlyName;
                string name2 = name;
            }

            // Click '523aee99-933b-46f0-951b-8d0e45ec364d,430,183 430,1...' custom control
            //Mouse.Click(uIItem523aee99933b46f0Custom, new Point(261, 96));
        }
        
        #region Properties

        public UIBusinessDesignStudioWindow UIBusinessDesignStudioWindow
        {
            get
            {
                if ((this.mUIBusinessDesignStudioWindow == null))
                {
                    this.mUIBusinessDesignStudioWindow = new UIBusinessDesignStudioWindow();
                }
                return this.mUIBusinessDesignStudioWindow;
            }
        }
        

        #endregion Properties
        
        #region Fields
        private UIBusinessDesignStudioWindow mUIBusinessDesignStudioWindow;
        #endregion
    }

    
    #region Base Classes 

    public class UIUserControl_1Custom : WpfCustom {

        public UIUserControl_1Custom(UITestControl searchLimitContainer) :
            base(searchLimitContainer) {
            #region Search Criteria
                //this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.WorkflowDesignerWindow";
                this.SearchProperties[UITestControl.PropertyNames.Name] = "FlowChart";
            //this.SearchProperties["AutomationId"] = "WorkflowItemPresenter";
            this.WindowTitles.Add(TestBase.GetStudioWindowName());
            #endregion
        }

        #region Properties
        public WpfPane UIScrollViewerPane {
            get {
                if((this.mUIScrollViewerPane == null)) {
                    this.mUIScrollViewerPane = new WpfPane(this);
                    #region Search Criteria
                    this.mUIScrollViewerPane.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
                    this.mUIScrollViewerPane.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
                    this.mUIScrollViewerPane.WindowTitles.Add(TestBase.GetStudioWindowName());
                    #endregion
                }
                return this.mUIScrollViewerPane;
            }
        }
        #endregion

        #region Fields
        private WpfPane mUIScrollViewerPane;
        #endregion
    }

    #endregion Base Classes


    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBusinessDesignStudioWindow : WpfWindow
    {
        
        public UIBusinessDesignStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = TestBase.GetStudioWindowName();
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(TestBase.GetStudioWindowName());
            #endregion
        }
        
        #region Properties

        public UIUI_TabManager_AutoIDTabList TabManager {
            get {
                if (tabManager == null) {
                    tabManager = new UIUI_TabManager_AutoIDTabList(this);
                }

                return tabManager;
            }
        }

        public UIWorkflowItemPresenteCustom UIWorkflowItemPresenteCustom
        {
            get
            {
                if ((this.mUIWorkflowItemPresenteCustom == null))
                {
                    this.mUIWorkflowItemPresenteCustom = new UIWorkflowItemPresenteCustom(this);
                }
                return this.mUIWorkflowItemPresenteCustom;
            }
        }


        public UIUserControl_1Custom WorkflowDesignerSurface {
            get {
                if(this.workflowDesignerSurface == null) {
                    workflowDesignerSurface = new UIUserControl_1Custom(this);
                }

                return workflowDesignerSurface;
            }
        }

        #endregion Properties
        
        #region Fields
        
        private UIWorkflowItemPresenteCustom mUIWorkflowItemPresenteCustom;
        private UIUserControl_1Custom workflowDesignerSurface;
        private UIUI_TabManager_AutoIDTabList tabManager;

        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWorkflowItemPresenteCustom : WpfCustom
    {
        
        public UIWorkflowItemPresenteCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties["AutomationId"] = "WorkflowItemPresenter";
            this.WindowTitles.Add(TestBase.GetStudioWindowName());
            #endregion
        }
        
        #region Properties
        public UIFlowchartCustom UIFlowchartCustom
        {
            get
            {
                if ((this.mUIFlowchartCustom == null))
                {
                    this.mUIFlowchartCustom = new UIFlowchartCustom(this);
                }
                return this.mUIFlowchartCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowchartCustom mUIFlowchartCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIFlowchartCustom : WpfCustom
    {
        
        public UIFlowchartCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.SearchProperties["AutomationId"] = "NewServiceDetails.model(FlowchartDesigner)";
            this.WindowTitles.Add(TestBase.GetStudioWindowName());
            #endregion
        }
        
        #region Properties
        public WpfCustom UIItem523aee99933b46f0Custom
        {
            get
            {
                if ((this.mUIItem523aee99933b46f0Custom == null))
                {
                    this.mUIItem523aee99933b46f0Custom = new WpfCustom(this);
                    #region Search Criteria
                    this.mUIItem523aee99933b46f0Custom.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mUIItem523aee99933b46f0Custom.SearchProperties["AutomationId"] = "523aee99-933b-46f0-951b-8d0e45ec364d,430,183 430,197";
                    this.mUIItem523aee99933b46f0Custom.WindowTitles.Add(TestBase.GetStudioWindowName());
                    #endregion
                }
                return this.mUIItem523aee99933b46f0Custom;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mUIItem523aee99933b46f0Custom;
        #endregion
    }
}
