// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18063
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Dev2.Studio.UI.Specs.ToolsLargeViewUISpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UITesting.CodedUITestAttribute()]
    public partial class ToolsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ToolsTestUISpecs.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Tools", "In order to drag Tools from Tool box to design surface\r\nAs a Warewolf user\r\nI wan" +
                    "t to be able to drag tools from tool box to Design surface", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Tools")))
            {
                Dev2.Studio.UI.Specs.ToolsLargeViewUISpecs.ToolsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Assign Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void AssignLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Assign Large View Test", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
       testRunner.And("I drag an \"Assign\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
       testRunner.Then("\"Assign\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
    testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
       testRunner.Then("\"Assign\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
       testRunner.And("I enter variable \"rec$().a\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
       testRunner.And("I press Tab \"1\" time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
       testRunner.And("I enter Value \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
       testRunner.When("I click \"Done\" on \"Assign\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
       testRunner.Then("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
       testRunner.And("the cursor is placed at \"[[rec$().a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
       testRunner.And("I remove \"[[rec$().a]]\" In row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
       testRunner.And("I enter variable \"[[rec().a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
       testRunner.Then("I click \"Done\" on \"Assign\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
       testRunner.And("\"Assign\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Assign Quick Variable Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void AssignQuickVariableTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Assign Quick Variable Test", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
      testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
   testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
   testRunner.And("I drag an \"Assign\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
   testRunner.Then("\"Assign\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
   testRunner.When("I click on \"Open Quick Variable Input\" on \"Assign\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
   testRunner.Then("\"Quick Variable Input\" is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
   testRunner.And("I enter variable \"[[rec(1).a]]\" in variable list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
   testRunner.And("I click on \"Split List In\" dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
   testRunner.When("I select \"New Line\" in Split List On", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
   testRunner.Then("\"Preview\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
   testRunner.And("\"Add\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
   testRunner.When("I click on \"Add\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
   testRunner.Then("\"Assign\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Passing Invalid variables in Assign tools from QVI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void PassingInvalidVariablesInAssignToolsFromQVI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Passing Invalid variables in Assign tools from QVI", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
      testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
   testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
   testRunner.And("I drag an \"Assign\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
   testRunner.And("\"Assign\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
   testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
   testRunner.Then("\"Assign\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
   testRunner.When("I click on \"Open Quick Variable Input\" on \"Assign\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
   testRunner.Then("\"Quick Variable Input\" is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
   testRunner.And("I enter variable \"[[#$$#]]\" in variable list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
   testRunner.And("I click on \"Split List In\" dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
   testRunner.When("I select \"New Line\" in Split List On", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
   testRunner.Then("\"Preview\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
   testRunner.And("\"Add\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
   testRunner.And("I select \"Replace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
   testRunner.When("I click on \"Add\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
   testRunner.Then("\"Assign\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
   testRunner.When("I click \"Done\" on \"Assign\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
      testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
      testRunner.Then("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
      testRunner.And("the cursor is placed at \"[[#$$#]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
      testRunner.And("I remove \"[[#$$#]]\" In row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
      testRunner.And("I enter variable \"[[rec().a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
      testRunner.Then("I click \"Done\" on \"Assign\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
      testRunner.And("\"Assign\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Data Merge Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DataMergeLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Merge Large View Test", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
       testRunner.And("I drag an \"Data Merge\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
       testRunner.Then("\"Data Merge\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
       testRunner.Then("\"Data Merge\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
    testRunner.And("I click on input box row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
       testRunner.And("I enter variable \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
    testRunner.And("I enter \"Using\" as \"1\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
    testRunner.And("I enter \"Padding\" as \"@\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
       testRunner.When("I click \"Done\" on \"Data Merge\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
       testRunner.Then("the cursor is placed at \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
       testRunner.And("I remove \"[[rec(1%).a]]\" In row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
       testRunner.And("I enter variable \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
       testRunner.When("I click \"Done\" on \"Data Merge\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
       testRunner.Then("\"Data Merge\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Data Merge Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DataMergeSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Merge Small View Test", ((string[])(null)));
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
       testRunner.And("I drag an \"Data Merge\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
       testRunner.Then("\"Data Merge\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
    testRunner.And("I enter variable \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
    testRunner.And("I press Tab \"2\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
    testRunner.And("I enter \"Using\" as \"1\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
    testRunner.And("I enter result variable \"[[a]]\" in \"Data Merge\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Data Split Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DataSplitSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Split Small View Test", ((string[])(null)));
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
       testRunner.And("I drag an \"Data Split\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
       testRunner.Then("\"Data Split\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
    testRunner.And("I enter \"String To Split\" data \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
    testRunner.And("I enter variable \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
    testRunner.And("I press Tab \"2\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
    testRunner.And("I enter \"Using\" as \"1\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Data Split Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DataSplitLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Split Large View Test", ((string[])(null)));
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
       testRunner.And("I drag an \"Data Split\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
       testRunner.Then("\"Data Split\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 113
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
       testRunner.Then("\"Data Split\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
    testRunner.And("I enter \"String To Split\" data \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
    testRunner.And("I select Process Direction \"Backward\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
    testRunner.And("I click on input box row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
       testRunner.And("I enter variable \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
    testRunner.And("I enter \"Using\" as \"1\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
    testRunner.And("I select \"With\"  as \"Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
    testRunner.And("\"Include\" is \"Disabled\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
    testRunner.And("\"Escapae\" is \"Disabled\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
       testRunner.When("I click \"Done\" on \"Data Split\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 125
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
       testRunner.Then("the cursor is placed at \"[[rec(1%).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
       testRunner.And("I remove \"[[rec(1%).a]]\" In row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
       testRunner.And("I enter variable \"[[rec(1).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
       testRunner.When("I click \"Done\" on \"Data Split\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
       testRunner.Then("\"Data Split\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Passing Invalid variables into Data Split through QVI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void PassingInvalidVariablesIntoDataSplitThroughQVI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Passing Invalid variables into Data Split through QVI", ((string[])(null)));
#line 132
this.ScenarioSetup(scenarioInfo);
#line 133
      testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 134
      testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
      testRunner.And("I drag an \"Data Split\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
      testRunner.Then("\"Data Split\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
      testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
      testRunner.Then("\"Data Split\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
   testRunner.When("I click on \"Open Quick Variable Input\" on \"Data Split\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
   testRunner.Then("\"Quick Variable Input\" is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 141
   testRunner.And("I enter variable \"[[#$$#]]\" in variable list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
   testRunner.And("I click on \"Split List In\" dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
   testRunner.When("I select \"New Line\" in Split List On", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
   testRunner.Then("\"Preview\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
   testRunner.And("\"Add\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
   testRunner.And("select \"Replace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
   testRunner.When("I click on \"Add\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
   testRunner.Then("\"Data Split\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 149
   testRunner.And("I enter \"String To Split\" data \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
   testRunner.When("I click \"Done\" on \"Data Split\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
      testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 152
      testRunner.Then("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
      testRunner.And("the cursor is placed at \"[[#$$#]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
      testRunner.And("I remove \"[[#$$#]]\" In row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
      testRunner.And("I enter variable \"[[rec().a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
      testRunner.Then("I click \"Done\" on \"Data Split\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
      testRunner.And("\"Data Split\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find Record Index Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void FindRecordIndexLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find Record Index Large View Test", ((string[])(null)));
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
       testRunner.And("I drag an \"Find Record Index\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
       testRunner.Then("\"Find Record Index\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
       testRunner.Then("\"Find Record Index\" tool “Large” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
    testRunner.And("I enter \"In Field(s)\" data \"[[record(&^).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
    testRunner.And("I select Match Type \"=\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
    testRunner.And("I enter Match \"Test\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
    testRunner.And("I enter result variable \"[[a]]\" in \"Find Record Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
    testRunner.And("I \"Unselect\" \"Require All Matches To be True\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
    testRunner.And("I \"Select\" \"Require All Fields To Match\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
       testRunner.When("I click \"Done\" on \"Find Record Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
       testRunner.Then("the cursor is placed at \"[[record(&^).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 177
       testRunner.And("I remove \"[[record(&^).a]]\" In row \"In Fields\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
    testRunner.And("I enter \"In Field(s)\" data \"[[record(&^).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
       testRunner.When("I click \"Done\" on \"Find Record Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 180
       testRunner.Then("\"Find Record Index\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find Record Index \"Show Large View\" Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void FindRecordIndexShowLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find Record Index \"Show Large View\" Test", ((string[])(null)));
#line 182
this.ScenarioSetup(scenarioInfo);
#line 183
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
       testRunner.And("I drag an \"Find Record Index\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
       testRunner.Then("\"Find Record Index\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 187
    testRunner.And("I enter \"In Field(s)\" data \"[[record().a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
    testRunner.And("I select Match Type \"=\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
    testRunner.And("I enter Match \"Test\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
    testRunner.And("I enter result variable \"[[a]]\" in \"Find Record Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create Tool Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CreateToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create Tool Large View Test", ((string[])(null)));
#line 193
this.ScenarioSetup(scenarioInfo);
#line 194
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 195
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
       testRunner.And("I drag an \"Create\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
       testRunner.Then("\"Create\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 198
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 199
    testRunner.And("I enter \"File or Folder\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
    testRunner.And("I select \"If it exists\" as \"Yes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
    testRunner.And("I enter result variable \"[[a]]\" in \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
       testRunner.When("I click \"Done\" on \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 206
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 208
    testRunner.And("I remove \"\"\\test\" In row \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
       testRunner.When("I click \"Done\" on \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 211
       testRunner.Then("\"Create\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CreateToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create Tool Small View Test", ((string[])(null)));
#line 213
this.ScenarioSetup(scenarioInfo);
#line 214
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 216
       testRunner.When("I drag an \"Create\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 217
       testRunner.Then("\"Create\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 218
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
    testRunner.And("I enter result variable \"[[a]]\" in \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Delete Tool Large View\" Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DeleteToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete Tool Large View\" Test", ((string[])(null)));
#line 222
this.ScenarioSetup(scenarioInfo);
#line 223
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 224
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
       testRunner.And("I drag an \"Delete\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
       testRunner.Then("\"Delete\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 227
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 228
    testRunner.And("I enter \"File or Folder\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
    testRunner.And("I enter result variable \"[[a]]\" in \"Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
       testRunner.When("I click \"Done\" on \"Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 234
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 235
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 236
    testRunner.And("I remove \"\"\\test\" In row \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
    testRunner.And("I enter File or Folder as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
       testRunner.When("I click \"Done\" on \"Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
       testRunner.Then("\"Delete\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Delete Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DeleteToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete Tool Small View Test", ((string[])(null)));
#line 241
this.ScenarioSetup(scenarioInfo);
#line 242
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
       testRunner.When("I drag an \"Delete\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
       testRunner.Then("\"Delete\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 246
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
    testRunner.And("I enter result variable \"[[a]]\" in \"Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Read Tool \"Show Large View\" Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ReadToolShowLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Read Tool \"Show Large View\" Test", ((string[])(null)));
#line 249
this.ScenarioSetup(scenarioInfo);
#line 250
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 251
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
       testRunner.And("I drag an \"Read\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
       testRunner.Then("\"Read\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 254
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
    testRunner.And("I enter \"File Name\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
    testRunner.And("I enter result variable \"[[a]]\" in \"Read\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
       testRunner.When("I click \"Done\" on \"Read\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 261
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 263
    testRunner.And("I remove \"\"\\test\" In row \"File Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
    testRunner.And("I enter File Name as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
       testRunner.When("I click \"Done\" on \"Read\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
       testRunner.Then("\"Read\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Read File Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ReadFileToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Read File Tool Small View Test", ((string[])(null)));
#line 268
this.ScenarioSetup(scenarioInfo);
#line 269
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 270
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 271
       testRunner.When("I drag an \"Read\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
       testRunner.Then("\"Read\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 273
    testRunner.And("I enter \"File Name\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
    testRunner.And("I enter result variable \"[[a]]\" in \"Read\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Copy Tool Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CopyToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Copy Tool Large View Test", ((string[])(null)));
#line 276
this.ScenarioSetup(scenarioInfo);
#line 277
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 278
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
       testRunner.And("I drag an \"Copy\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
       testRunner.Then("\"Copy\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 281
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
    testRunner.And("I enter \"File or Folder\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
    testRunner.And("I enter \"Destination\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
    testRunner.And("I enter Username \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
    testRunner.And("I enter Password \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
    testRunner.And("I enter result variable \"[[a]]\" in \"Read\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
       testRunner.When("I click \"Done\" on \"Read\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 290
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 291
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 292
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 293
    testRunner.And("I remove \"\"\\test\" In row \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
    testRunner.And("I select \"If it exists\" as \"Yes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
       testRunner.When("I click \"Done\" on \"Copy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 297
       testRunner.Then("\"Copy\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Copy Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CopyToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Copy Tool Small View Test", ((string[])(null)));
#line 299
this.ScenarioSetup(scenarioInfo);
#line 300
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 301
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 302
       testRunner.When("I drag an \"Copy\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
       testRunner.Then("\"Copy\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 304
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
    testRunner.And("I enter \"Destination\" as \"c:\\test123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
    testRunner.And("I enter result variable \"[[a]]\" in \"Copy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Move Tool Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void MoveToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Move Tool Large View Test", ((string[])(null)));
#line 309
this.ScenarioSetup(scenarioInfo);
#line 310
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 311
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
       testRunner.And("I drag an \"Move\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
       testRunner.Then("\"Move\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 314
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
    testRunner.And("I enter \"File or Folder\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
    testRunner.And("I enter \"Destination\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
    testRunner.And("I enter Username \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
    testRunner.And("I enter Password \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
    testRunner.And("I enter result variable \"[[a]]\" in \"Move\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
     testRunner.And("I select \"If it exists\" as \"Yes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
       testRunner.When("I click \"Done\" on \"Move\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 325
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 327
    testRunner.And("I remove \"\"\\test\" In row \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
    testRunner.And("I enter \"File or Folder\" \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
       testRunner.When("I click \"Done\" on \"Move\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 330
       testRunner.Then("\"Move\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Move Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void MoveToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Move Tool Small View Test", ((string[])(null)));
#line 332
this.ScenarioSetup(scenarioInfo);
#line 333
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 334
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 335
       testRunner.When("I drag an \"Move\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
       testRunner.Then("\"Move\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 337
    testRunner.And("I enter \"File or Folder\" \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
    testRunner.And("I enter Destination \"c:\\test123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
    testRunner.And("I enter result variable \"[[a]]\" in \"Move\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Rename Tool Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void RenameToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rename Tool Large View Test", ((string[])(null)));
#line 341
this.ScenarioSetup(scenarioInfo);
#line 342
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 343
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
       testRunner.And("I drag an \"Rename\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
       testRunner.Then("\"Rename\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 346
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 347
    testRunner.And("I enter \"File or Folder\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
    testRunner.And("I enter New Name \"c:/Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
    testRunner.And("I enter Username \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
    testRunner.And("I enter Password \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
    testRunner.And("I enter result variable \"[[a]]\" in \"Rename\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
    testRunner.And("I select \"If it exists\" as \"Yes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
       testRunner.When("I click \"Done\" on \"Rename\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 356
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 357
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 359
    testRunner.And("I remove \"\"\\test\" In row \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
       testRunner.When("I click \"Done\" on \"Rename\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 362
       testRunner.Then("\"Rename\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Rename Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void RenameToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rename Tool Small View Test", ((string[])(null)));
#line 364
this.ScenarioSetup(scenarioInfo);
#line 365
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 366
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 367
       testRunner.When("I drag an \"Rename\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 368
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
    testRunner.And("I enter New Name as \"c:\\test123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 370
    testRunner.And("I enter result variable \"[[a]]\" in \"Rename\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Unzip Tool Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void UnzipToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Unzip Tool Large View Test", ((string[])(null)));
#line 373
this.ScenarioSetup(scenarioInfo);
#line 374
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 375
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
       testRunner.And("I drag an \"Unzip\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
       testRunner.Then("\"Unzip\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 378
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 379
    testRunner.And("I enter \"Zip Name\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
    testRunner.And("I enter \"Destination\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
    testRunner.And("I enter Username \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 384
    testRunner.And("I enter Password \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
    testRunner.And("I enter result variable \"[[a]]\" in \"Unzip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
    testRunner.And("I select \"If it exists\" as \"Yes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
       testRunner.When("I click \"Done\" on \"Move\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 388
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 389
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 390
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 391
    testRunner.And("I remove \"\\test\" In row \"Unzip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
    testRunner.And("I enter \"Zip Name\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
       testRunner.When("I click \"Done\" on \"Unzip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 394
       testRunner.Then("\"Unzip\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Unzip Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void UnzipToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Unzip Tool Small View Test", ((string[])(null)));
#line 396
this.ScenarioSetup(scenarioInfo);
#line 397
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 398
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 399
       testRunner.When("I drag an \"Unzip\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 400
       testRunner.Then("\"Unzip\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 401
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
    testRunner.And("I enter \"Destination\" as \"c:\\test123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
    testRunner.And("I enter result variable \"[[a]]\" in \"Unzip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Zip Tool Large View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ZipToolLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Zip Tool Large View Test", ((string[])(null)));
#line 406
this.ScenarioSetup(scenarioInfo);
#line 407
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 408
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
       testRunner.And("I drag an \"Zip\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
       testRunner.Then("\"Zip\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 411
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 412
    testRunner.And("I enter \"Zip Name\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
    testRunner.And("I enter Username \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
    testRunner.And("I enter Password \"\" for \"File or Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
    testRunner.And("I enter \"Destination\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
    testRunner.And("I enter Username \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
    testRunner.And("I enter Password \"\" for \"Destination\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 418
    testRunner.And("I enter result variable \"[[a]]\" in \"Unzip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
    testRunner.And("I select If it exists \"Yes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
       testRunner.When("I click \"Done\" on \"Zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 421
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 422
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 424
    testRunner.And("I remove \"\\test\" In row \"Zip Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
    testRunner.And("I enter \"Zip Name\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
       testRunner.When("I click \"Done\" on \"Zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 427
       testRunner.Then("\"Zip\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Zip Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ZipToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Zip Tool Small View Test", ((string[])(null)));
#line 429
this.ScenarioSetup(scenarioInfo);
#line 430
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 431
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 432
       testRunner.When("I drag an \"Zip\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 433
       testRunner.Then("\"Zip\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 434
    testRunner.And("I enter \"File or Folder\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
    testRunner.And("I enter \"Destination\" as \"c:\\test123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 436
    testRunner.And("I enter result variable \"[[a]]\" in \"Zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Read Folder \"Show Large View\" Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ReadFolderShowLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Read Folder \"Show Large View\" Test", ((string[])(null)));
#line 438
this.ScenarioSetup(scenarioInfo);
#line 439
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 440
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
       testRunner.And("I drag an \"Read Folder\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
       testRunner.Then("\"Read Folder\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 443
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 444
    testRunner.And("I enter \"Directory\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
    testRunner.And("I select read \"Files\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
    testRunner.And("I enter Username \"\" for \"Directory\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
    testRunner.And("I enter Password \"\" for \"Directory\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
    testRunner.And("I enter result variable \"[[a]]\" in \"Read Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 449
       testRunner.When("I click \"Done\" on \"Read Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 450
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 451
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 452
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 453
    testRunner.And("I remove \"\\test\" In row \"Directory\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
    testRunner.And("I enter \"Directory\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 455
       testRunner.When("I click \"Done\" on \"Read Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 456
       testRunner.Then("\"Read Folder\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Read Folder File Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ReadFolderFileToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Read Folder File Tool Small View Test", ((string[])(null)));
#line 458
this.ScenarioSetup(scenarioInfo);
#line 459
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 460
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 461
       testRunner.When("I drag an \"Read Folder\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 462
       testRunner.Then("\"Read Folder\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 463
    testRunner.And("I enter \"Directory\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
    testRunner.And("I enter result variable \"[[a]]\" in \"Read Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Write File \"Show Large View\" Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void WriteFileShowLargeViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Write File \"Show Large View\" Test", ((string[])(null)));
#line 466
this.ScenarioSetup(scenarioInfo);
#line 467
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 468
       testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
       testRunner.And("I drag an \"Write File\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
       testRunner.Then("\"Write File\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 471
       testRunner.When("I select \"Show Large View\" from the context menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
    testRunner.And("I enter \"File Name\" as \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
    testRunner.And("I select Method \"Append Top\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
    testRunner.And("I enter Contents \"Warewolf Testting\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
    testRunner.And("I enter Username \"\" for \"File Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
    testRunner.And("I enter Password \"\" for \"File Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
    testRunner.And("I enter result variable \"[[a]]\" in \"Write File\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
       testRunner.When("I click \"Done\" on \"Write File\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 479
       testRunner.Then("\"Errors\" box is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 480
       testRunner.When("I click on error 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 481
       testRunner.Then("the cursor is placed at \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 482
    testRunner.And("I remove\"File Name\" \"\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
    testRunner.And("I enter \"File Name\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
       testRunner.When("I click \"Done\" on \"Write File\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 485
       testRunner.Then("\"Write File\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Write File Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void WriteFileToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Write File Tool Small View Test", ((string[])(null)));
#line 487
this.ScenarioSetup(scenarioInfo);
#line 488
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 489
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 490
       testRunner.When("I drag an \"Write File\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 491
       testRunner.Then("\"Write File\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 492
    testRunner.And("I enter \"File Name\" as \"c:\\test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 493
    testRunner.And("I enter Contents \"Warewolf Testting\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
    testRunner.And("I enter result variable \"[[a]]\" in \"Read Folder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void RecordsetToolsSmallViewTest(string no, string tool, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recordset Tools Small View Test", exampleTags);
#line 497
this.ScenarioSetup(scenarioInfo);
#line 498
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 499
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 500
       testRunner.When(string.Format("I drag an \'{0}\' onto design surface", tool), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 501
       testRunner.Then(string.Format("\'{0}\' tool “Small” view should be visible", tool), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 502
    testRunner.And("I enter \"Recordset\" \"[[rec(1).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
    testRunner.And(string.Format("I enter result variable \"[[Result]]\" in \'{0}\'", tool), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recordset Tools Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:No", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tool", "Count Records")]
        public virtual void RecordsetToolsSmallViewTest_1()
        {
            this.RecordsetToolsSmallViewTest("1", "Count Records", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recordset Tools Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:No", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tool", "Length")]
        public virtual void RecordsetToolsSmallViewTest_2()
        {
            this.RecordsetToolsSmallViewTest("2", "Length", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recordset Tools Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:No", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tool", "Delete Record")]
        public virtual void RecordsetToolsSmallViewTest_3()
        {
            this.RecordsetToolsSmallViewTest("3", "Delete Record", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recordset Tools Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:No", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tool", "Sort Records")]
        public virtual void RecordsetToolsSmallViewTest_4()
        {
            this.RecordsetToolsSmallViewTest("4", "Sort Records", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sort Records Tools Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void SortRecordsToolsSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sort Records Tools Small View Test", ((string[])(null)));
#line 511
this.ScenarioSetup(scenarioInfo);
#line 512
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 513
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 514
       testRunner.When("I drag an \"Sort Records\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 515
       testRunner.Then("\"Sort Records\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 516
    testRunner.And("I enter \"Sort Field\" as \"[[rec(1).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
    testRunner.And("I Select Sort Order \"Backwards\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Unique Records Tools Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void UniqueRecordsToolsSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Unique Records Tools Small View Test", ((string[])(null)));
#line 519
this.ScenarioSetup(scenarioInfo);
#line 520
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 521
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 522
       testRunner.When("I drag an \"Unique Records\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 523
       testRunner.Then("\"Unique Records\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 524
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
    testRunner.And("I enter \"in Field(s)\" as \"[[rec(*).a]],[[rs(*).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
    testRunner.And("I enter \"Return Fields\" as \"[[rec().a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 529
    testRunner.And("I enter result variable \"[[Result]]\" in \"Unique Records\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Replace Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ReplaceToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Replace Tool Small View Test", ((string[])(null)));
#line 531
this.ScenarioSetup(scenarioInfo);
#line 532
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 533
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 534
       testRunner.When("I drag an \"Replace\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 535
       testRunner.Then("\"Replace\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 536
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
    testRunner.And("I enter \"in Field(s)\" as \"[[rec(*).a]],[[rs(*).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
    testRunner.And("I enter \"Find\" as\"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 541
    testRunner.And("I enter \"Replace With\" as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
    testRunner.And("I enter result variable \"[[Result]]\" in \"Replace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Base Coversion Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void BaseCoversionToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Base Coversion Tool Small View Test", ((string[])(null)));
#line 544
this.ScenarioSetup(scenarioInfo);
#line 545
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 546
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 547
       testRunner.When("I drag an \"Base Conversion\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 548
       testRunner.Then("\"Base Coversion\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 549
    testRunner.And("I press Tab \"4\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 550
    testRunner.And("I enter variable \"test\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
    testRunner.And("select \"From\" type \"Text\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 554
    testRunner.And("I select \"To\" type \"Base64\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Base Convert Quick Variable Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void BaseConvertQuickVariableTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Base Convert Quick Variable Test", ((string[])(null)));
#line 556
this.ScenarioSetup(scenarioInfo);
#line 557
      testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 558
   testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 559
   testRunner.And("I drag an \"Base Conversion\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 560
   testRunner.Then("\"Base Conversion\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 561
   testRunner.When("I click on \"Open Quick Variable Input\" on \"Base Coversion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 562
   testRunner.Then("\"Quick Variable Input\" is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 563
   testRunner.And("I enter variable \"Warwolf\" in variable list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 564
   testRunner.And("I click on \"Split List In\" dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 565
   testRunner.When("I select \"New Line\" in Split List On", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 566
   testRunner.Then("\"Preview\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 567
   testRunner.And("\"Add\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 568
   testRunner.And("I select \"Replace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 569
   testRunner.When("I click on \"Add\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 570
   testRunner.Then("\"Base Coversion\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Case Coversion Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CaseCoversionToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Coversion Tool Small View Test", ((string[])(null)));
#line 572
this.ScenarioSetup(scenarioInfo);
#line 573
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 574
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 575
       testRunner.When("I drag an \"Case Conversion\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 576
       testRunner.Then("\"Case Coversion\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 577
    testRunner.And("I press Tab \"4\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 578
    testRunner.And("I enter variable \"test\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 579
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 580
    testRunner.And("I select \"Case\"  as \"UPPER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Case Convert Quick Variable Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CaseConvertQuickVariableTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Convert Quick Variable Test", ((string[])(null)));
#line 582
this.ScenarioSetup(scenarioInfo);
#line 583
      testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 584
   testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
   testRunner.And("I drag an \"Case Conversion\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
   testRunner.Then("\"Case Conversion\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 587
   testRunner.When("I click on \"Open Quick Variable Input\" on \"Base Coversion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 588
   testRunner.Then("\"Quick Variable Input\" is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 589
   testRunner.And("I enter variable \"Warwolf\" in variable list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
   testRunner.And("I click on \"Split List In\" dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
   testRunner.When("I select \"New Line\" in Split List On", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 592
   testRunner.Then("\"Preview\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 593
   testRunner.And("\"Add\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
   testRunner.And("I select \"Replace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 595
   testRunner.When("I click on \"Add\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 596
   testRunner.Then("\"Case Coversion\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find Index Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void FindIndexToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find Index Tool Small View Test", ((string[])(null)));
#line 598
this.ScenarioSetup(scenarioInfo);
#line 599
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 600
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 601
       testRunner.When("I drag an \"Find Index\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 602
       testRunner.Then("\"Find Index\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 603
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 604
    testRunner.And("I enter \"In Field\" as \"[[rec(*).a]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
    testRunner.And("I select \"Index\"  as \"All Occurrence\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
    testRunner.And("I enter \"Character\" as \"a\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
    testRunner.And("I select \"Direction\"  as \"Left to Right\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 609
    testRunner.And("I enter result variable \"[[Result]]\" in \"Find Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Calculate Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void CalculateToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calculate Tool Small View Test", ((string[])(null)));
#line 611
this.ScenarioSetup(scenarioInfo);
#line 612
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 613
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 614
       testRunner.When("I drag an \"Calculate\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 615
       testRunner.Then("\"Calculate\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 616
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
    testRunner.And("I enter \"2+3\" in \"Calculate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 618
    testRunner.And("I enter result variable \"[[Result]]\" in \"Find Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Format Number Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void FormatNumberToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Format Number Tool Small View Test", ((string[])(null)));
#line 620
this.ScenarioSetup(scenarioInfo);
#line 621
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 622
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 623
       testRunner.When("I drag an \"Format Number\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 624
       testRunner.Then("\"Format Number\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 625
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 626
    testRunner.And("I enter \"Number\" as \"153.6235\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 627
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
    testRunner.And("I select \"Rounding\"  as \"None\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 629
    testRunner.And("I enter \"Decimal to show\" as \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 630
    testRunner.And("I enter result variable \"[[Result]]\" in \"Find Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Random Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void RandomToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Random Tool Small View Test", ((string[])(null)));
#line 633
this.ScenarioSetup(scenarioInfo);
#line 634
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 635
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 636
       testRunner.When("I drag an \"Random\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 637
       testRunner.Then("\"Random\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 638
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
    testRunner.And("I select \"Type\" is \"Number\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 640
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 641
    testRunner.And("I enter \"Range\" from \"1\" to \"10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 642
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 643
    testRunner.And("I enter result variable \"[[Result]]\" in \"Random\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Date and Time Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DateAndTimeToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time Tool Small View Test", ((string[])(null)));
#line 645
this.ScenarioSetup(scenarioInfo);
#line 646
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 647
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 648
       testRunner.When("I drag an \"Date and Time\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 649
       testRunner.Then("\"Date and Time\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 650
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 651
    testRunner.And("I enter \"Input\" as \"23/07/2014\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 652
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 653
    testRunner.And("I enter \"Input Format\" as \"dd/MM/yyyy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
    testRunner.And("I select \"Add Time\" as \"Years\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 655
    testRunner.And("I enter \"Output Format\" as \"dd/MM/yyyy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 656
    testRunner.And("I enter result variable \"[[Result]]\" in \"Date and Time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Date and Time Difference Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void DateAndTimeDifferenceToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time Difference Tool Small View Test", ((string[])(null)));
#line 658
this.ScenarioSetup(scenarioInfo);
#line 659
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 660
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 661
       testRunner.When("I drag an \" Date and Time Difference\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 662
       testRunner.Then("\" Date and Time Difference\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 663
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 664
    testRunner.And("I enter \"Input1\" as \"23/07/2014\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 665
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 666
    testRunner.And("I enter \"Input2\" as \"23/07/2014\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 667
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 668
    testRunner.And("I enter \"Input Format\" as \"dd/MM/yyyy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 669
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 670
    testRunner.And("I select \"Output In\" as \"Years\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 671
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 672
    testRunner.And("I enter \"Output Format\" as \"dd/MM/yyyy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 673
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 674
    testRunner.And("I enter result variable \"[[Result]]\" in \"Date and Time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Gather System Information Tool Quick Variable Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void GatherSystemInformationToolQuickVariableTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gather System Information Tool Quick Variable Test", ((string[])(null)));
#line 677
this.ScenarioSetup(scenarioInfo);
#line 678
      testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 679
   testRunner.And("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 680
   testRunner.And("I drag an \"Gather System Information\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
   testRunner.Then("\"Gather System Information\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 682
   testRunner.When("I click on \"Open Quick Variable Input\" on \"Gather System Information\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 683
   testRunner.Then("\"Quick Variable Input\" is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 684
   testRunner.And("I enter variable \"[[rec(1).a]]\" in variable list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 685
   testRunner.And("I click on \"Split List In\" dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
   testRunner.When("I select \"New Line\" in Split List On", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 687
   testRunner.Then("\"Preview\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 688
   testRunner.And("\"Add\" button is \"Enabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 689
   testRunner.And("I select \"Replace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 690
   testRunner.When("I click on \"Add\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 691
   testRunner.Then("\"Gather System Information\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Gather System Information Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void GatherSystemInformationToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gather System Information Tool Small View Test", ((string[])(null)));
#line 693
this.ScenarioSetup(scenarioInfo);
#line 694
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 695
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 696
       testRunner.When("I drag an \"Gather System Information\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 697
       testRunner.Then("\"Gather System Information\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 698
    testRunner.And("I press Tab \"4\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
    testRunner.And("I enter varaible \"[[rec(1).a]]\" in row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 700
    testRunner.And("I press Tab \"1\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 701
    testRunner.And("I select \"Date&Time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("For Each Tool")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ForEachTool()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("For Each Tool", ((string[])(null)));
#line 703
this.ScenarioSetup(scenarioInfo);
#line 704
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 705
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 706
       testRunner.When("I drag an \"For Each\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 707
       testRunner.Then("\"GFor Each\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 708
    testRunner.And("I press Tab \"4\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 709
    testRunner.And("I select \"In Range\" from \"1\" to \"10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 710
    testRunner.And("I select \"In CSV\" as \"12343\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
    testRunner.And("I select \"No. of Executes\" as \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 712
    testRunner.And("I select \"in Recordset\" as \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Web Request Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void WebRequestToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Web Request Tool Small View Test", ((string[])(null)));
#line 714
this.ScenarioSetup(scenarioInfo);
#line 715
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 716
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 717
       testRunner.When("I drag an \"Web Request\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 718
       testRunner.Then("\"Web Request\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 719
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 720
    testRunner.And("I enter \"https://google.com\" in \"URL\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 721
    testRunner.And("I enter result variable \"[[Result]]\" in \"Find Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Execute Command Line Tool Small View Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tools")]
        public virtual void ExecuteCommandLineToolSmallViewTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Execute Command Line Tool Small View Test", ((string[])(null)));
#line 723
this.ScenarioSetup(scenarioInfo);
#line 724
       testRunner.Given("I have Warewolf running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 725
       testRunner.Then("I click on \"New Workflow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 726
       testRunner.When("I drag an \"Execute Command Line\" onto design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 727
       testRunner.Then("\"Execute Command Line\" tool “Small” view should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 728
    testRunner.And("I press Tab \"3\" times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 729
    testRunner.And("I enter \"sdfsfdsfdsssd\" in \"CMD\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 730
    testRunner.And("I enter result variable \"[[Result]]\" in \"Find Index\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
