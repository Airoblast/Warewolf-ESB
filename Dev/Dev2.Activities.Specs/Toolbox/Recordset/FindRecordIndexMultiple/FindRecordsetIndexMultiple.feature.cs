// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Dev2.Activities.Specs.Toolbox.Recordset.FindRecordIndexMultiple
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class FindRecordsetIndexMultipleFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FindRecordsetIndexMultiple.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FindRecordsetIndexMultiple", "In order to search for pieces of data in a recordset\r\nAs a Warewolf user\r\nI want " +
                    "a tool I can use to find an index", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "FindRecordsetIndexMultiple")))
            {
                Dev2.Activities.Specs.Toolbox.Recordset.FindRecordIndexMultiple.FindRecordsetIndexMultipleFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Is Between numeric")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithIsBetweenNumeric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Is Between numeric", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table1.AddRow(new string[] {
                        "rs().row",
                        "1"});
            table1.AddRow(new string[] {
                        "rs().row",
                        "15"});
            table1.AddRow(new string[] {
                        "rs().row",
                        "20"});
            table1.AddRow(new string[] {
                        "rs().row",
                        "34"});
#line 7
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table1, "Given ");
#line 13
 testRunner.And("is between search the recordset with type \"Is Between\" and criteria is \"16\" and \"" +
                    "33\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("the find records index multiple result should be 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Is Between DateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithIsBetweenDateTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Is Between DateTime", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table2.AddRow(new string[] {
                        "rs().row",
                        "5/3/2013"});
            table2.AddRow(new string[] {
                        "rs().row",
                        "2/3/2013"});
            table2.AddRow(new string[] {
                        "rs().row",
                        "7/4/2013"});
            table2.AddRow(new string[] {
                        "rs().row",
                        "11/11/2012"});
#line 18
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table2, "Given ");
#line 24
 testRunner.And("is between search the recordset with type \"Is Between\" and criteria is \"1/3/2013\"" +
                    " and \"3/3/2013\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("the find records index multiple result should be 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Is Between Numbers and recordsets with " +
            "stars")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithIsBetweenNumbersAndRecordsetsWithStars()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Is Between Numbers and recordsets with " +
                    "stars", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table3.AddRow(new string[] {
                        "BetweenFrom().from",
                        "15"});
            table3.AddRow(new string[] {
                        "BetweenFrom().from",
                        "0"});
#line 29
 testRunner.Given("I have the following recordset in my datalist", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table4.AddRow(new string[] {
                        "BetweenTo().to",
                        "25"});
            table4.AddRow(new string[] {
                        "BetweenTo().to",
                        "26"});
#line 33
 testRunner.Given("I have the following recordset in my datalist", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table5.AddRow(new string[] {
                        "rs().row",
                        "15"});
            table5.AddRow(new string[] {
                        "rs().row",
                        "20"});
            table5.AddRow(new string[] {
                        "rs().row",
                        "25"});
#line 37
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table5, "Given ");
#line 42
 testRunner.And("is between search the recordset with type \"Is Between\" and criteria is \"[[Between" +
                    "From(*).from]]\" and \"[[BetweenTo(*).to]]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("the find records index multiple result should be 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Is Base64")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithIsBase64()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Is Base64", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table6.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table6.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table6.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table6.AddRow(new string[] {
                        "rs().row",
                        "d2FyZXdvbGY="});
#line 47
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table6, "Given ");
#line 53
 testRunner.And("search the recordset with type \"Is Base64\" and criteria is \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Is Binary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithIsBinary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Is Binary", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table7.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table7.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table7.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table7.AddRow(new string[] {
                        "rs().row",
                        "101011110010"});
#line 58
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table7, "Given ");
#line 64
 testRunner.And("search the recordset with type \"Is Binary\" and criteria is \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Is Hex")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithIsHex()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Is Hex", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table8.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table8.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table8.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table8.AddRow(new string[] {
                        "rs().row",
                        "77617265776f6c66"});
#line 69
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table8, "Given ");
#line 75
 testRunner.And("search the recordset with type \"Is Hex\" and criteria is \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Not Base64")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithNotBase64()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Not Base64", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table9.AddRow(new string[] {
                        "rs().row",
                        "d2FyZXdvbGY="});
            table9.AddRow(new string[] {
                        "rs().row",
                        "d2FyZXdvbGY="});
            table9.AddRow(new string[] {
                        "rs().row",
                        "d2FyZXdvbGY="});
            table9.AddRow(new string[] {
                        "rs().row",
                        "You"});
#line 80
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table9, "Given ");
#line 86
 testRunner.And("search the recordset with type \"Not Base64\" and criteria is \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Not Between DateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithNotBetweenDateTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Not Between DateTime", ((string[])(null)));
#line 90
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table10.AddRow(new string[] {
                        "rs().row",
                        "2/3/2013"});
            table10.AddRow(new string[] {
                        "rs().row",
                        "7/3/2013"});
            table10.AddRow(new string[] {
                        "rs().row",
                        "2/3/2013"});
            table10.AddRow(new string[] {
                        "rs().row",
                        "2/3/2013"});
#line 91
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table10, "Given ");
#line 97
 testRunner.And("is between search the recordset with type \"Not Between\" and criteria is \"1/3/2013" +
                    "\" and \"3/3/2013\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
 testRunner.Then("the find records index multiple result should be 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Not Between numeric")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithNotBetweenNumeric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Not Between numeric", ((string[])(null)));
#line 101
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table11.AddRow(new string[] {
                        "rs().row",
                        "17"});
            table11.AddRow(new string[] {
                        "rs().row",
                        "22"});
            table11.AddRow(new string[] {
                        "rs().row",
                        "400"});
            table11.AddRow(new string[] {
                        "rs().row",
                        "31"});
#line 102
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table11, "Given ");
#line 108
 testRunner.And("is between search the recordset with type \"Not Between\" and criteria is \"16\" and " +
                    "\"33\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.Then("the find records index multiple result should be 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Not Binary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithNotBinary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Not Binary", ((string[])(null)));
#line 112
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table12.AddRow(new string[] {
                        "rs().row",
                        "101011110010"});
            table12.AddRow(new string[] {
                        "rs().row",
                        "101011110010"});
            table12.AddRow(new string[] {
                        "rs().row",
                        "101011110010"});
            table12.AddRow(new string[] {
                        "rs().row",
                        "warewolf"});
#line 113
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table12, "Given ");
#line 119
 testRunner.And("search the recordset with type \"Not Binary\" and criteria is \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Not Hex")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithNotHex()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Not Hex", ((string[])(null)));
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table13.AddRow(new string[] {
                        "rs().row",
                        "77617265776f6c66"});
            table13.AddRow(new string[] {
                        "rs().row",
                        "77617265776f6c66"});
            table13.AddRow(new string[] {
                        "rs().row",
                        "77617265776f6c66"});
            table13.AddRow(new string[] {
                        "rs().row",
                        "warewolf"});
#line 124
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table13, "Given ");
#line 130
 testRunner.And("search the recordset with type \"Not Hex\" and criteria is \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Not Regex")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithNotRegex()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Not Regex", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table14.AddRow(new string[] {
                        "rs().row",
                        "999.999.999.999"});
            table14.AddRow(new string[] {
                        "rs().row",
                        "999.999.999.999"});
            table14.AddRow(new string[] {
                        "rs().row",
                        "999.999.999.999"});
            table14.AddRow(new string[] {
                        "rs().row",
                        "warewolf"});
#line 135
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table14, "Given ");
#line 141
 testRunner.And("search the recordset with type \"Not Regex\" and criteria is \"\\b\\d{1,3}\\.\\d{1,3}\\.\\" +
                    "d{1,3}\\.\\d{1,3}\\b\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 143
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Doesn\'t Start With")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithDoesnTStartWith()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Doesn\'t Start With", ((string[])(null)));
#line 145
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table15.AddRow(new string[] {
                        "rs().row",
                        "what"});
            table15.AddRow(new string[] {
                        "rs().row",
                        "where"});
            table15.AddRow(new string[] {
                        "rs().row",
                        "why"});
            table15.AddRow(new string[] {
                        "rs().row",
                        "yay"});
#line 146
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table15, "Given ");
#line 152
 testRunner.And("search the recordset with type \"Doesn\'t Start With\" and criteria is \"w\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset with Doesn\'t End With")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetWithDoesnTEndWith()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset with Doesn\'t End With", ((string[])(null)));
#line 156
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table16.AddRow(new string[] {
                        "rs().row",
                        "arev"});
            table16.AddRow(new string[] {
                        "rs().row",
                        "wherev"});
            table16.AddRow(new string[] {
                        "rs().row",
                        "modev"});
            table16.AddRow(new string[] {
                        "rs().row",
                        "yay"});
#line 157
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table16, "Given ");
#line 163
 testRunner.And("search the recordset with type \"Doesn\'t End With\" and criteria is \"v\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 165
 testRunner.Then("the find records index multiple result should be 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Equal To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsEqualTo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Equal To", ((string[])(null)));
#line 167
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table17.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table17.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table17.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table17.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table17.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table17.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 168
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table17, "Given ");
#line 176
 testRunner.And("search the recordset with type \"=\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 178
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Equal To multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsEqualToMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Equal To multiple results", ((string[])(null)));
#line 180
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table18.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 181
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table18, "Given ");
#line 190
 testRunner.And("search the recordset with type \"=\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Equal To result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsEqualToResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Equal To result doesnt exist", ((string[])(null)));
#line 194
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table19.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table19.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table19.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table19.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table19.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table19.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 195
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table19, "Given ");
#line 203
 testRunner.And("search the recordset with type \"=\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Greater Than")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsGreaterThan()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Greater Than", ((string[])(null)));
#line 207
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table20.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table20.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table20.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table20.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table20.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table20.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 208
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table20, "Given ");
#line 216
 testRunner.And("search the recordset with type \">\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Greater Than multiple results" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsGreaterThanMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Greater Than multiple results" +
                    "", ((string[])(null)));
#line 220
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table21.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 221
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table21, "Given ");
#line 230
 testRunner.And("search the recordset with type \">\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Greater Than result doesnt ex" +
            "ist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsGreaterThanResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Greater Than result doesnt ex" +
                    "ist", ((string[])(null)));
#line 234
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table22.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table22.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table22.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table22.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table22.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table22.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 235
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table22, "Given ");
#line 243
 testRunner.And("search the recordset with type \">\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Less Than")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsLessThan()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Less Than", ((string[])(null)));
#line 247
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table23.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table23.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table23.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table23.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table23.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table23.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 248
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table23, "Given ");
#line 256
 testRunner.And("search the recordset with type \"<\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Less Than multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsLessThanMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Less Than multiple results", ((string[])(null)));
#line 260
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table24.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 261
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table24, "Given ");
#line 270
 testRunner.And("search the recordset with type \"<\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Less Than result doesnt exist" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsLessThanResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Less Than result doesnt exist" +
                    "", ((string[])(null)));
#line 274
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table25.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table25.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table25.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table25.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table25.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table25.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 275
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table25, "Given ");
#line 283
 testRunner.And("search the recordset with type \"<\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 285
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Equal To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotEqualTo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Equal To", ((string[])(null)));
#line 287
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table26.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table26.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table26.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table26.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table26.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table26.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 288
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table26, "Given ");
#line 296
 testRunner.And("search the recordset with type \"<>\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Equal To multiple results" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotEqualToMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Equal To multiple results" +
                    "", ((string[])(null)));
#line 300
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table27.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 301
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table27, "Given ");
#line 310
 testRunner.And("search the recordset with type \"<>\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 312
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Equal To result doesnt ex" +
            "ist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotEqualToResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Equal To result doesnt ex" +
                    "ist", ((string[])(null)));
#line 314
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table28.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table28.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table28.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table28.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table28.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table28.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 315
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table28, "Given ");
#line 323
 testRunner.And("search the recordset with type \"<>\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 325
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Greater Or Equal To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsGreaterOrEqualTo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Greater Or Equal To", ((string[])(null)));
#line 327
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table29.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table29.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table29.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table29.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table29.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table29.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 328
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table29, "Given ");
#line 336
 testRunner.And("search the recordset with type \">=\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 338
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Greater Or Equal To multiple " +
            "results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsGreaterOrEqualToMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Greater Or Equal To multiple " +
                    "results", ((string[])(null)));
#line 340
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table30.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 341
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table30, "Given ");
#line 350
 testRunner.And("search the recordset with type \">=\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Greater Or Equal To result do" +
            "esnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsGreaterOrEqualToResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Greater Or Equal To result do" +
                    "esnt exist", ((string[])(null)));
#line 354
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table31.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table31.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table31.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table31.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table31.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table31.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 355
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table31, "Given ");
#line 363
 testRunner.And("search the recordset with type \">=\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 365
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Less Or Equal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsLessOrEqual()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Less Or Equal", ((string[])(null)));
#line 367
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table32.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table32.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table32.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table32.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table32.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table32.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 368
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table32, "Given ");
#line 376
 testRunner.And("search the recordset with type \"<=\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Less Or Equal multiple result" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsLessOrEqualMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Less Or Equal multiple result" +
                    "s", ((string[])(null)));
#line 380
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table33.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 381
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table33, "Given ");
#line 390
 testRunner.And("search the recordset with type \"<=\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 392
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Less Or Equal result doesnt e" +
            "xist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsLessOrEqualResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Less Or Equal result doesnt e" +
                    "xist", ((string[])(null)));
#line 394
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table34.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table34.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table34.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table34.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table34.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table34.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 395
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table34, "Given ");
#line 403
 testRunner.And("search the recordset with type \"<=\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 405
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Starts With")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsStartsWith()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Starts With", ((string[])(null)));
#line 407
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table35.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table35.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table35.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table35.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table35.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table35.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 408
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table35, "Given ");
#line 416
 testRunner.And("search the recordset with type \"Starts With\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 418
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Starts With multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsStartsWithMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Starts With multiple results", ((string[])(null)));
#line 420
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table36.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 421
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table36, "Given ");
#line 430
 testRunner.And("search the recordset with type \"Starts With\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 432
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Starts With result doesnt exi" +
            "st")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsStartsWithResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Starts With result doesnt exi" +
                    "st", ((string[])(null)));
#line 434
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table37.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table37.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table37.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table37.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table37.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table37.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 435
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table37, "Given ");
#line 443
 testRunner.And("search the recordset with type \"Starts With\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 445
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Ends With")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsEndsWith()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Ends With", ((string[])(null)));
#line 447
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table38.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table38.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table38.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table38.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table38.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table38.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 448
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table38, "Given ");
#line 456
 testRunner.And("search the recordset with type \"Ends With\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 457
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 458
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Ends With multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsEndsWithMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Ends With multiple results", ((string[])(null)));
#line 460
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table39.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 461
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table39, "Given ");
#line 470
 testRunner.And("search the recordset with type \"Ends With\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Ends With result doesnt exist" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsEndsWithResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Ends With result doesnt exist" +
                    "", ((string[])(null)));
#line 474
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table40.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table40.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table40.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table40.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table40.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table40.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 475
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table40, "Given ");
#line 483
 testRunner.And("search the recordset with type \"Ends With\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 485
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Contains")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsContains()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Contains", ((string[])(null)));
#line 487
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table41.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table41.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table41.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table41.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table41.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table41.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 488
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table41, "Given ");
#line 496
 testRunner.And("search the recordset with type \"Contains\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 498
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Contains multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsContainsMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Contains multiple results", ((string[])(null)));
#line 500
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table42.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 501
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table42, "Given ");
#line 510
 testRunner.And("search the recordset with type \"Contains\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 512
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Contains result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsContainsResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Contains result doesnt exist", ((string[])(null)));
#line 514
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table43.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table43.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table43.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table43.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table43.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table43.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 515
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table43, "Given ");
#line 523
 testRunner.And("search the recordset with type \"Contains\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 525
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Doesn\'t Contain")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsDoesnTContain()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Doesn\'t Contain", ((string[])(null)));
#line 527
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table44.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table44.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table44.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table44.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table44.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table44.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 528
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table44, "Given ");
#line 536
 testRunner.And("search the recordset with type \"Doesn\'t Contain\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 538
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Doesn\'t Contain multiple resu" +
            "lts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsDoesnTContainMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Doesn\'t Contain multiple resu" +
                    "lts", ((string[])(null)));
#line 540
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table45.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 541
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table45, "Given ");
#line 550
 testRunner.And("search the recordset with type \"Doesn\'t Contain\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 552
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Doesn\'t Contain result doesnt" +
            " exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsDoesnTContainResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Doesn\'t Contain result doesnt" +
                    " exist", ((string[])(null)));
#line 554
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table46.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table46.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table46.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table46.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table46.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table46.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 555
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table46, "Given ");
#line 563
 testRunner.And("search the recordset with type \"Doesn\'t Contain\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 564
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 565
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Alphanumeric")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsAlphanumeric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Alphanumeric", ((string[])(null)));
#line 567
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table47.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table47.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table47.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table47.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table47.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table47.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 568
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table47, "Given ");
#line 576
 testRunner.And("search the recordset with type \"Is Alphanumeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 578
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Alphanumeric multiple resu" +
            "lts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsAlphanumericMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Alphanumeric multiple resu" +
                    "lts", ((string[])(null)));
#line 580
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table48.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 581
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table48, "Given ");
#line 590
 testRunner.And("search the recordset with type \"Is Alphanumeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 592
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Alphanumeric result doesnt" +
            " exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsAlphanumericResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Alphanumeric result doesnt" +
                    " exist", ((string[])(null)));
#line 594
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table49.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table49.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table49.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table49.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table49.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table49.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 595
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table49, "Given ");
#line 603
 testRunner.And("search the recordset with type \"Is Alphanumeric\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 604
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 605
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Base64")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsBase64()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Base64", ((string[])(null)));
#line 607
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table50.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table50.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table50.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table50.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table50.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table50.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 608
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table50, "Given ");
#line 616
 testRunner.And("search the recordset with type \"Is Base64\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 618
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Base64 multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsBase64MultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Base64 multiple results", ((string[])(null)));
#line 620
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table51.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 621
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table51, "Given ");
#line 630
 testRunner.And("search the recordset with type \"Is Base64\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 632
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Base64 result doesnt exist" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsBase64ResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Base64 result doesnt exist" +
                    "", ((string[])(null)));
#line 634
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table52.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table52.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table52.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table52.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table52.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table52.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 635
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table52, "Given ");
#line 643
 testRunner.And("search the recordset with type \"Is Base64\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 644
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 645
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Date", ((string[])(null)));
#line 647
 this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table53.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table53.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table53.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table53.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table53.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table53.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 648
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table53, "Given ");
#line 656
 testRunner.And("search the recordset with type \"Is Date\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 658
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Date multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsDateMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Date multiple results", ((string[])(null)));
#line 660
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table54.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 661
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table54, "Given ");
#line 670
 testRunner.And("search the recordset with type \"Is Date\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 671
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 672
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Date result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsDateResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Date result doesnt exist", ((string[])(null)));
#line 674
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table55.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table55.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table55.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table55.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table55.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table55.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 675
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table55, "Given ");
#line 683
 testRunner.And("search the recordset with type \"Is Date\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 684
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 685
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsEmail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Email", ((string[])(null)));
#line 687
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table56.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table56.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table56.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table56.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table56.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table56.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 688
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table56, "Given ");
#line 696
 testRunner.And("search the recordset with type \"Is Email\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 698
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Email multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsEmailMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Email multiple results", ((string[])(null)));
#line 700
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table57.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 701
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table57, "Given ");
#line 710
 testRunner.And("search the recordset with type \"Is Email\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 712
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Email result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsEmailResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Email result doesnt exist", ((string[])(null)));
#line 714
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table58.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table58.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table58.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table58.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table58.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table58.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 715
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table58, "Given ");
#line 723
 testRunner.And("search the recordset with type \"Is Email\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 724
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 725
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Numeric")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsNumeric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Numeric", ((string[])(null)));
#line 727
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table59.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table59.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table59.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table59.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table59.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table59.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 728
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table59, "Given ");
#line 736
 testRunner.And("search the recordset with type \"Is Numeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 737
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 738
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Numeric multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsNumericMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Numeric multiple results", ((string[])(null)));
#line 740
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table60.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 741
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table60, "Given ");
#line 750
 testRunner.And("search the recordset with type \"Is Numeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 751
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 752
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Numeric result doesnt exis" +
            "t")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsNumericResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Numeric result doesnt exis" +
                    "t", ((string[])(null)));
#line 754
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table61.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table61.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table61.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table61.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table61.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table61.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 755
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table61, "Given ");
#line 763
 testRunner.And("search the recordset with type \"Is Numeric\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 764
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 765
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Regex")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsRegex()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Regex", ((string[])(null)));
#line 767
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table62.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table62.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table62.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table62.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table62.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table62.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 768
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table62, "Given ");
#line 776
 testRunner.And("search the recordset with type \"Is Regex\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 777
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 778
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Regex multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsRegexMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Regex multiple results", ((string[])(null)));
#line 780
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table63.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 781
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table63, "Given ");
#line 790
 testRunner.And("search the recordset with type \"Is Regex\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 792
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Regex result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsRegexResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Regex result doesnt exist", ((string[])(null)));
#line 794
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table64.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table64.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table64.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table64.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table64.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table64.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 795
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table64, "Given ");
#line 803
 testRunner.And("search the recordset with type \"Is Regex\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 804
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 805
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Text")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Text", ((string[])(null)));
#line 807
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table65.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table65.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table65.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table65.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table65.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table65.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 808
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table65, "Given ");
#line 816
 testRunner.And("search the recordset with type \"Is Text\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 818
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Text multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsTextMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Text multiple results", ((string[])(null)));
#line 820
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table66.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 821
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table66, "Given ");
#line 830
 testRunner.And("search the recordset with type \"Is Text\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 831
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 832
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is Text result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsTextResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is Text result doesnt exist", ((string[])(null)));
#line 834
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table67.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table67.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table67.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table67.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table67.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table67.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 835
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table67, "Given ");
#line 843
 testRunner.And("search the recordset with type \"Is Text\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 845
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsXML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is XML", ((string[])(null)));
#line 847
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table68.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table68.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table68.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table68.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table68.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table68.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 848
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table68, "Given ");
#line 856
 testRunner.And("search the recordset with type \"Is XML\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 857
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 858
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is XML multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsXMLMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is XML multiple results", ((string[])(null)));
#line 860
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table69.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 861
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table69, "Given ");
#line 870
 testRunner.And("search the recordset with type \"Is XML\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 871
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 872
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Is XML result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsIsXMLResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Is XML result doesnt exist", ((string[])(null)));
#line 874
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table70.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table70.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table70.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table70.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table70.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table70.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 875
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table70, "Given ");
#line 883
 testRunner.And("search the recordset with type \"Is XML\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 884
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 885
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Alphanumeric")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotAlphanumeric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Alphanumeric", ((string[])(null)));
#line 887
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table71.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table71.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table71.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table71.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table71.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table71.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 888
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table71, "Given ");
#line 896
 testRunner.And("search the recordset with type \"Not Alphanumeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 897
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 898
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Alphanumeric multiple res" +
            "ults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotAlphanumericMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Alphanumeric multiple res" +
                    "ults", ((string[])(null)));
#line 900
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table72.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 901
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table72, "Given ");
#line 910
 testRunner.And("search the recordset with type \"Not Alphanumeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 911
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 912
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Alphanumeric result doesn" +
            "t exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotAlphanumericResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Alphanumeric result doesn" +
                    "t exist", ((string[])(null)));
#line 914
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table73.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table73.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table73.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table73.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table73.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table73.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 915
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table73, "Given ");
#line 923
 testRunner.And("search the recordset with type \"Not Alphanumeric\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 924
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 925
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Date", ((string[])(null)));
#line 927
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table74.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table74.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table74.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table74.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table74.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table74.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 928
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table74, "Given ");
#line 936
 testRunner.And("search the recordset with type \"Not Date\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 937
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 938
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Date multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotDateMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Date multiple results", ((string[])(null)));
#line 940
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table75.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 941
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table75, "Given ");
#line 950
 testRunner.And("search the recordset with type \"Not Date\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 951
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 952
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Date result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotDateResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Date result doesnt exist", ((string[])(null)));
#line 954
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table76.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table76.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table76.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table76.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table76.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table76.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 955
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table76, "Given ");
#line 963
 testRunner.And("search the recordset with type \"Not Date\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 964
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 965
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotEmail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Email", ((string[])(null)));
#line 967
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table77.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table77.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table77.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table77.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table77.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table77.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 968
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table77, "Given ");
#line 976
 testRunner.And("search the recordset with type \"Not Email\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 977
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 978
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Email multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotEmailMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Email multiple results", ((string[])(null)));
#line 980
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table78.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 981
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table78, "Given ");
#line 990
 testRunner.And("search the recordset with type \"Not Email\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 991
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 992
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Email result doesnt exist" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotEmailResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Email result doesnt exist" +
                    "", ((string[])(null)));
#line 994
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table79.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table79.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table79.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table79.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table79.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table79.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 995
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table79, "Given ");
#line 1003
 testRunner.And("search the recordset with type \"Not Email\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1004
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1005
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Numeric")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotNumeric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Numeric", ((string[])(null)));
#line 1007
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table80.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table80.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table80.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table80.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table80.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table80.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1008
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table80, "Given ");
#line 1016
 testRunner.And("search the recordset with type \"Not Numeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1017
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1018
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Numeric multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotNumericMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Numeric multiple results", ((string[])(null)));
#line 1020
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table81.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1021
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table81, "Given ");
#line 1030
 testRunner.And("search the recordset with type \"Not Numeric\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1031
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1032
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Numeric result doesnt exi" +
            "st")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotNumericResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Numeric result doesnt exi" +
                    "st", ((string[])(null)));
#line 1034
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table82.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table82.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table82.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table82.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table82.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table82.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1035
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table82, "Given ");
#line 1043
 testRunner.And("search the recordset with type \"Not Numeric\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1044
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1045
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Text")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Text", ((string[])(null)));
#line 1047
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table83.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table83.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table83.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table83.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table83.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table83.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1048
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table83, "Given ");
#line 1056
 testRunner.And("search the recordset with type \"Not Text\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1057
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1058
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Text multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotTextMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Text multiple results", ((string[])(null)));
#line 1060
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table84.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1061
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table84, "Given ");
#line 1070
 testRunner.And("search the recordset with type \"Not Text\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1071
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1072
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not Text result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotTextResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not Text result doesnt exist", ((string[])(null)));
#line 1074
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table85.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table85.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table85.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table85.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table85.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table85.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1075
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table85, "Given ");
#line 1083
 testRunner.And("search the recordset with type \"Not Text\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1084
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1085
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotXML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not XML", ((string[])(null)));
#line 1087
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table86.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table86.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table86.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table86.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table86.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table86.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1088
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table86, "Given ");
#line 1096
 testRunner.And("search the recordset with type \"Not XML\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1097
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1098
 testRunner.Then("the find records index multiple result should be 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not XML multiple results")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotXMLMultipleResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not XML multiple results", ((string[])(null)));
#line 1100
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table87.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1101
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table87, "Given ");
#line 1110
 testRunner.And("search the recordset with type \"Not XML\" and criteria is \"Warewolf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1111
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1112
 testRunner.Then("the find records index multiple result should be 1,6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Find an index of data in a recordset search type is Not XML result doesnt exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FindRecordsetIndexMultiple")]
        public virtual void FindAnIndexOfDataInARecordsetSearchTypeIsNotXMLResultDoesntExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Find an index of data in a recordset search type is Not XML result doesnt exist", ((string[])(null)));
#line 1114
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "rs",
                        "value"});
            table88.AddRow(new string[] {
                        "rs().row",
                        "You"});
            table88.AddRow(new string[] {
                        "rs().row",
                        "are"});
            table88.AddRow(new string[] {
                        "rs().row",
                        "the"});
            table88.AddRow(new string[] {
                        "rs().row",
                        "best"});
            table88.AddRow(new string[] {
                        "rs().row",
                        "Warewolf"});
            table88.AddRow(new string[] {
                        "rs().row",
                        "user"});
#line 1115
 testRunner.Given("I have the following recordset to search for multiple criteria", ((string)(null)), table88, "Given ");
#line 1123
 testRunner.And("search the recordset with type \"Not XML\" and criteria is \"Mars\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1124
 testRunner.When("the find records index multiple tool is executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1125
 testRunner.Then("the find records index multiple result should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
