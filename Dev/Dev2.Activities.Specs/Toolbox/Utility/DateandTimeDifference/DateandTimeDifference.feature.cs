// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable

namespace Dev2.Activities.Specs.Toolbox.Utility.DateandTimeDifference
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DateandTimeDifferenceFeature
    {
        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "DateandTimeDifference.feature"
#line hidden

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"),
                                                                "DateandTimeDifference",
                                                                "In order to work with date and time\r\nAs a Warewolf user\r\nI want a tool that will " +
                                                                "allow me to compare two dates",
                                                                ProgrammingLanguage.CSharp, ((string[]) (null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null)
                 && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "DateandTimeDifference")))
            {
                FeatureSetup(null);
            }
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of days between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfDaysBetweenTwoGivenDates()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(
                "Calculate the number of days between two given dates", ((string[]) (null)));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line 7
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 8
            testRunner.And("I have a second date \"2014-11-28\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 9
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 10
            testRunner.And("I selected output in \"Weeks\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 11
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 12
            testRunner.Then("the difference should be \"52\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 13
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of years with mulitpart text and variable inputs to both inp" +
            "ut fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfYearsWithMulitpartTextAndVariableInputsToBothInputFields()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo(
                    "Calculate the number of years with mulitpart text and variable inputs to both inp" +
                    "ut fields", ((string[]) (null)));
#line 15
            this.ScenarioSetup(scenarioInfo);
#line 16
            testRunner.Given("I have a DateAndTimeDifference variable \"[[years]]\" equal to 13", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 17
            testRunner.And("I have a first date \"20[[years]]-11-29\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 18
            testRunner.And("I have a DateAndTimeDifference variable \"[[years2]]\" equal to 14", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 19
            testRunner.And("I have a second date \"20[[years]]-11-01\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 20
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 21
            testRunner.And("I selected output in \"Years\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 22
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 23
            testRunner.Then("the difference should be \"0\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 24
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of Months between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfMonthsBetweenTwoGivenDates()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of Months between two given dates",
                                                   ((string[]) (null)));
#line 26
            this.ScenarioSetup(scenarioInfo);
#line 27
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 28
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 29
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 30
            testRunner.And("I selected output in \"Months\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 31
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 32
            testRunner.Then("the difference should be \"12\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 33
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of hours between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfHoursBetweenTwoGivenDates()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of hours between two given dates",
                                                   ((string[]) (null)));
#line 35
            this.ScenarioSetup(scenarioInfo);
#line 36
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 37
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 38
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 39
            testRunner.And("I selected output in \"Hours\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 40
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 41
            testRunner.Then("the difference should be \"8088\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 42
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of minutes between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfMinutesBetweenTwoGivenDates()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of minutes between two given dates",
                                                   ((string[]) (null)));
#line 44
            this.ScenarioSetup(scenarioInfo);
#line 45
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 46
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 47
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 48
            testRunner.And("I selected output in \"Minutes\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 49
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 50
            testRunner.Then("the difference should be \"485280\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 51
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of seconds between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfSecondsBetweenTwoGivenDates()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of seconds between two given dates",
                                                   ((string[]) (null)));
#line 53
            this.ScenarioSetup(scenarioInfo);
#line 54
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 55
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 56
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 57
            testRunner.And("I selected output in \"Seconds\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 58
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 59
            testRunner.Then("the difference should be \"29116800\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 60
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of split seconds between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfSplitSecondsBetweenTwoGivenDates()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of split seconds between two given dates",
                                                   ((string[]) (null)));
#line 62
            this.ScenarioSetup(scenarioInfo);
#line 63
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 64
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 65
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 66
            testRunner.And("I selected output in \"SplitSeconds\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 67
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 68
            testRunner.Then("the difference should be \"29116800000\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 69
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of weeks between two given dates")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfWeeksBetweenTwoGivenDates()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of weeks between two given dates",
                                                   ((string[]) (null)));
#line 71
            this.ScenarioSetup(scenarioInfo);
#line 72
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 73
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 74
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 75
            testRunner.And("I selected output in \"Hours\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 76
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 77
            testRunner.Then("the difference should be \"8088\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 78
            testRunner.And("datetimediff execution has \"NO\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of minutes between two blank inputs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfMinutesBetweenTwoBlankInputs()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of minutes between two blank inputs",
                                                   ((string[]) (null)));
#line 80
            this.ScenarioSetup(scenarioInfo);
#line 81
            testRunner.Given("I have a first date \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 82
            testRunner.And("I have a second date \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 83
            testRunner.And("the date format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 84
            testRunner.And("I selected output in \"Minutes\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 85
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 86
            testRunner.Then("the difference should be \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 87
            testRunner.And("datetimediff execution has \"AN\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Calculate the number of seconds with badly formed input format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void CalculateTheNumberOfSecondsWithBadlyFormedInputFormat()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Calculate the number of seconds with badly formed input format",
                                                   ((string[]) (null)));
#line 89
            this.ScenarioSetup(scenarioInfo);
#line 90
            testRunner.Given("I have a first date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 91
            testRunner.And("I have a second date \"2014-11-01\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 92
            testRunner.And("the date format as \"yyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 93
            testRunner.And("I selected output in \"Seconds\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 94
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 95
            testRunner.Then("the difference should be \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 96
            testRunner.And("datetimediff execution has \"AN\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Leave input dates blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTimeDifference")]
        public virtual void LeaveInputDatesBlank()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Leave input dates blank", ((string[]) (null)));
#line 98
            this.ScenarioSetup(scenarioInfo);
#line 99
            testRunner.Given("I selected output in \"Years\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 100
            testRunner.When("the datetime difference tool is executed", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 101
            testRunner.Then("the difference should be \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 102
            testRunner.And("datetimediff execution has \"AN\" error", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion