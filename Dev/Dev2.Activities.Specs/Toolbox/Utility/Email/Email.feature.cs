// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable

namespace Dev2.Activities.Specs.Toolbox.Utility.Email
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class EmailFeature
    {
        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "Email.feature"
#line hidden

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Email",
                                                                "In order to automate sending emails\r\nAs Warewolf user\r\nI want tool that I can use" +
                                                                " to send emails", ProgrammingLanguage.CSharp,
                                                                ((string[]) (null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null)
                 && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Email")))
            {
                FeatureSetup(null);
            }
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send email to multiple receipients")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailToMultipleReceipients()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email to multiple receipients",
                                                                  ((string[]) (null)));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line 7
            testRunner.Given("I have an email variable \"[[firstMail]]\" equal to \"test1@freemail.com\"",
                             ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 8
            testRunner.And("I have an email variable \"[[secondMail]]\" equal to \"test2@freemail.com\"",
                           ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 9
            testRunner.And("I have an email address input \"[[firstMail]]; [[secondMail]]; test1@freemail.com\"" +
                           "", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 10
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 11
            testRunner.And("the subject is \"Just testing\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 12
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 13
            testRunner.And("body is \"testing email from the cool specflow\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 14
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 15
            testRunner.Then("the email result will be \"Success\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 16
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send email with multiple from accounts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithMultipleFromAccounts()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with multiple from accounts",
                                                                  ((string[]) (null)));
#line 18
            this.ScenarioSetup(scenarioInfo);
#line 19
            testRunner.Given("I have an email address input \"test1@freemail.com\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 20
            testRunner.And("the from account is \"me@freemail.com;me2@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 21
            testRunner.And("the subject is \"Just testing\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 22
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 23
            testRunner.And("body is \"testing email from the cool specflow\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 24
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 25
            testRunner.Then("the email result will be \"Failure\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 26
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Send email with badly formed multiple To Accounts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithBadlyFormedMultipleToAccounts()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with badly formed multiple To Accounts",
                                                                  ((string[]) (null)));
#line 28
            this.ScenarioSetup(scenarioInfo);
#line 29
            testRunner.Given("I have an email address input \"test1@freemail\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 30
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 31
            testRunner.And("the subject is \"Just testing\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 32
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 33
            testRunner.And("body is \"testing email from the cool specflow\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 34
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 35
            testRunner.Then("the email result will be \"Failure\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 36
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send email with no To Accounts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithNoToAccounts()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with no To Accounts", ((string[]) (null)));
#line 38
            this.ScenarioSetup(scenarioInfo);
#line 39
            testRunner.Given("I have an email address input \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 40
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 41
            testRunner.And("the subject is \"Just testing\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 42
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 43
            testRunner.And("body is \"testing email from the cool specflow\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 44
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 45
            testRunner.Then("the email result will be \"Failure\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 46
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Send email with Subject as both text and variable as xml")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithSubjectAsBothTextAndVariableAsXml()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo("Send email with Subject as both text and variable as xml",
                                                   ((string[]) (null)));
#line 48
            this.ScenarioSetup(scenarioInfo);
#line 49
            testRunner.Given("I have an email address input \"test1@freemail\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 50
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 51
            testRunner.And("I have an email variable \"[[subject]]\" equal to \"<Wow>400%</Wow>\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 52
            testRunner.And("the subject is \"News: [[subject]]\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 53
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 54
            testRunner.And("body is \"testing email from the cool specflow\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 55
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 56
            testRunner.Then("the email result will be \"Success\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 57
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send email with no subject and no body")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithNoSubjectAndNoBody()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with no subject and no body",
                                                                  ((string[]) (null)));
#line 59
            this.ScenarioSetup(scenarioInfo);
#line 60
            testRunner.Given("I have an email address input \"test1@freemail\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 61
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 62
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 63
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 64
            testRunner.Then("the email result will be \"Success\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 65
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Send email with Body as both text and variable")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithBodyAsBothTextAndVariable()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with Body as both text and variable",
                                                                  ((string[]) (null)));
#line 67
            this.ScenarioSetup(scenarioInfo);
#line 68
            testRunner.Given("I have an email address input \"test1@freemail\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 69
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 70
            testRunner.And("I have an email variable \"[[body]]\" equal to \"<body><inner>inside</inner></body>\"" +
                           "", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 71
            testRunner.And("the subject is \"News\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 72
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 73
            testRunner.And("body is \"testing email from [[body]] the cool specflow\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 74
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 75
            testRunner.Then("the email result will be \"Success\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 76
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Send email with variable as Body that is xml")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithVariableAsBodyThatIsXml()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with variable as Body that is xml",
                                                                  ((string[]) (null)));
#line 78
            this.ScenarioSetup(scenarioInfo);
#line 79
            testRunner.Given("I have an email address input \"test1@freemail\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 80
            testRunner.And("the from account is \"me@freemail.com\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 81
            testRunner.And("I have an email variable \"[[body]]\" equal to \"<body><inner>inside</inner></body>\"" +
                           "", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 82
            testRunner.And("the subject is \"News\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 83
            testRunner.And("the sever name is \"pop3@freemail.com\" with password as \"3LittleP6\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 84
            testRunner.And("body is \"[[body]]\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 85
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 86
            testRunner.Then("the email result will be \"Success\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 87
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send email with everything blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Email")]
        public virtual void SendEmailWithEverythingBlank()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send email with everything blank",
                                                                  ((string[]) (null)));
#line 89
            this.ScenarioSetup(scenarioInfo);
#line 90
            testRunner.Given("the from account is \"me@freemail.com\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 91
            testRunner.When("the email tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 92
            testRunner.Then("the email result will be \"Failure\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 93
            testRunner.And("email execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion