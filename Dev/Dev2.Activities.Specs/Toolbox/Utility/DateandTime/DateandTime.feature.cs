// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable

namespace Dev2.Activities.Specs.Toolbox.Utility.DateandTime
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DateandTimeFeature
    {
        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "DateandTime.feature"
#line hidden

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"),
                                                                "DateandTime",
                                                                "In order to work with date and time\r\nAs a Warewolf user\r\nI want a tool that will " +
                                                                "allow me to do date time calcuations",
                                                                ProgrammingLanguage.CSharp, ((string[]) (null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null)
                 && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "DateandTime")))
            {
                FeatureSetup(null);
            }
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add weeks to a given date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void AddWeeksToAGivenDate()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add weeks to a given date", ((string[]) (null)));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line 7
            testRunner.Given("I have a date \"2013-11-29\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 8
            testRunner.And("the input format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 9
            testRunner.And("I selected Add time as \"Weeks\" with a value of 52", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 10
            testRunner.And("the output format as \"yyyy-mm-dd\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 11
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 12
            testRunner.Then("the datetime result should be \"2014-11-28\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 13
            testRunner.And("datetime execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Date and Time with Everything blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithEverythingBlank()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time with Everything blank",
                                                                  ((string[]) (null)));
#line 15
            this.ScenarioSetup(scenarioInfo);
#line 16
            testRunner.Given("I have a first date \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 17
            testRunner.And("the input format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 18
            testRunner.And("I selected Add time as \"None\" with a value of 0", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 19
            testRunner.And("the output format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 20
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 21
            testRunner.Then("the datetime result should be a \"System.DateTime\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 22
            testRunner.And("datetime execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Date and Time with input blank and incorrect format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithInputBlankAndIncorrectFormat()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(
                "Date and Time with input blank and incorrect format", ((string[]) (null)));
#line 24
            this.ScenarioSetup(scenarioInfo);
#line 25
            testRunner.Given("I have a first date \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 26
            testRunner.And("the input format as \"asdf\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 27
            testRunner.And("I selected Add time as \"None\" with a value of 0", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 28
            testRunner.And("the output format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 29
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 30
            testRunner.Then("the datetime result should be \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 31
            testRunner.And("datetime execution has \"AN\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Date and Time with no seconds and add 1 second")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithNoSecondsAndAdd1Second()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time with no seconds and add 1 second",
                                                                  ((string[]) (null)));
#line 33
            this.ScenarioSetup(scenarioInfo);
#line 34
            testRunner.Given("I have a first date \"12:30\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 35
            testRunner.And("the input format as \"24h:min\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 36
            testRunner.And("I selected Add time as \"Seconds\" with a value of 61", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 37
            testRunner.And("the output format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 38
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 39
            testRunner.Then("the datetime result should be \"12:31\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 40
            testRunner.And("datetime execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Date and Time with badly formed inputs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithBadlyFormedInputs()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time with badly formed inputs",
                                                                  ((string[]) (null)));
#line 42
            this.ScenarioSetup(scenarioInfo);
#line 43
            testRunner.Given("I have a first date \"asdf\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 44
            testRunner.And("the input format as \"asdf\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 45
            testRunner.And("I selected Add time as \"None\" with a value of 0", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 46
            testRunner.And("the output format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 47
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 48
            testRunner.Then("the datetime result should be \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 49
            testRunner.And("datetime execution has \"AN\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Date and Time with badly formed output format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithBadlyFormedOutputFormat()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time with badly formed output format",
                                                                  ((string[]) (null)));
#line 51
            this.ScenarioSetup(scenarioInfo);
#line 52
            testRunner.Given("I have a first date \"12:30\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 53
            testRunner.And("the input format as \"24h:min\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 54
            testRunner.And("I selected Add time as \"Seconds\" with a value of 61", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 55
            testRunner.And("the output format as \"asdf\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 56
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 57
            testRunner.Then("the datetime result should be \"as1f\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 58
            testRunner.And("datetime execution has \"AN\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Date and Time with characters for time to add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithCharactersForTimeToAdd()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Date and Time with characters for time to add",
                                                                  ((string[]) (null)));
#line 60
            this.ScenarioSetup(scenarioInfo);
#line 61
            testRunner.Given("I have a first date \"12:30\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 62
            testRunner.And("the input format as \"24h:min\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line 63
            testRunner.And("I selected Add time as \"Seconds\" with a value of \"asdf\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 64
            testRunner.And("the output format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 65
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 66
            testRunner.Then("the datetime result should be \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "Then ");
#line 67
            testRunner.And("datetime execution has \"AN\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Date and Time with output format - 12h:dd:DW:Era:mm:MM:min:ss:sp:yyyy:yy:Z:am/pm:" +
            "24h:d:dw:DW:dy:m:M:w:ZZ:w:ZZZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithOutputFormat_12HDdDWEraMmMMMinSsSpYyyyYyZAmPm24HDDwDWDyMMWZZWZZZ()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo(
                    "Date and Time with output format - 12h:dd:DW:Era:mm:MM:min:ss:sp:yyyy:yy:Z:am/pm:" +
                    "24h:d:dw:DW:dy:m:M:w:ZZ:w:ZZZ", ((string[]) (null)));
#line 69
            this.ScenarioSetup(scenarioInfo);
#line 70
            testRunner.Given("I have a first date \"2013/12/05 04:18:51 PM\"", ((string) (null)),
                             ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 71
            testRunner.And("the input format as \"\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 72
            testRunner.And("I selected Add time as \"None\" with a value of 0", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 73
            testRunner.And("the output format as \"12h:dd:DW:Era:mm:MM:min:ss:sp:yyyy:yy:Z:am/pm:24h:d:dw:DW:d" +
                           "y:m:M:w:ZZ:w:ZZZ\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 74
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 75
            testRunner.Then("the datetime result should be \"04:05:Thursday:A.D.:12:December:18:51:0:2013:13:So" +
                            "uth Africa Standard Time:PM:16:5:4:Thursday:339:12:Dec:49:South Africa Standard " +
                            "Time:49:(UTC+02:00) Harare, Pretoria\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 76
            testRunner.And("datetime execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(
            "Date and Time with input format - 12h:dd:DW:Era:mm:MM:min:ss:sp:yyyy:yy:Z:am/pm:2" +
            "4h:d:dw:DW:dy:m:M:w:ZZ:w:ZZZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DateandTime")]
        public virtual void DateAndTimeWithInputFormat_12HDdDWEraMmMMMinSsSpYyyyYyZAmPm24HDDwDWDyMMWZZWZZZ()
        {
            var scenarioInfo =
                new TechTalk.SpecFlow.ScenarioInfo(
                    "Date and Time with input format - 12h:dd:DW:Era:mm:MM:min:ss:sp:yyyy:yy:Z:am/pm:2" +
                    "4h:d:dw:DW:dy:m:M:w:ZZ:w:ZZZ", ((string[]) (null)));
#line 78
            this.ScenarioSetup(scenarioInfo);
#line 79
            testRunner.Given("I have a first date \"04:05:Thursday:A.D.:12:December:18:51:0:2013:13:South Africa" +
                             " Standard Time:PM:16:5:4:Thursday:339:12:Dec:49:South Africa Standard Time:49:(U" +
                             "TC+02:00) Harare, Pretoria\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                             "Given ");
#line 80
            testRunner.And("the input format as \"12h:dd:DW:Era:mm:MM:min:ss:sp:yyyy:yy:Z:am/pm:24h:d:dw:DW:dy" +
                           ":m:M:w:ZZ:w:ZZZ\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 81
            testRunner.And("I selected Add time as \"None\" with a value of 0", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 82
            testRunner.And("the output format as \"yyyy/mm/dd 12h:min:ss am/pm\"", ((string) (null)),
                           ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 83
            testRunner.When("the datetime tool is executed", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                            "When ");
#line 84
            testRunner.Then("the datetime result should be \"2013/12/05 04:18:51 PM\"", ((string) (null)),
                            ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 85
            testRunner.And("datetime execution has \"NO\" error", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                           "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion